{"version":3,"sources":["images/leaf.png","components/Header/Header.js","components/Auth/Registration.js","components/Auth/Login.js","components/Auth/Splash.js","components/Main/GetStarted/GetStarted.js","components/Main/Soil/Soil.js","components/NavBar/NavBar.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","className","src","Leaf","alt","Registration","props","useState","username","email","password1","password2","data","setData","handleChange","e","target","name","value","updatedData","a","preventDefault","options","method","headers","Cookie","get","body","JSON","stringify","fetch","response","ok","json","set","key","setIsAuth","isAuth","to","onSubmit","htmlFor","type","id","placeholder","onChange","withRouter","password","console","log","action","Splash","onClick","GetStarted","successfulPost","setSuccessfulPost","setCurrentGarden","created_at","Soil","firstRender","useRef","characteristics","recommendations","soil_order","soil","setSoil","soilSaved","setSoilSaved","useEffect","current","getSoilDetails","currentGarden","url","modulesToLoad","onReady","loadedModules","esriConfig","Map","MapView","FeatureLayer","Locate","Point","containerNode","apiKey","map","basemap","view","container","center","zoom","soilsLayer","outFields","add","soilOrder","locate","useHeadingEnabled","goToOverride","scale","goTo","on","event","latitude","mapPoint","longitude","screenPoint","toScreen","hitTest","then","hitTestResult","results","graphic","attributes","esrisymbology","ui","NavBar","radioValue","setRadioValue","ButtonGroup","radio","index","ToggleButton","variant","checked","currentTarget","uuidv4","Footer","navBar","cookie","checkAuth","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a12a8f17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/leaf.1c74297e.png\";","import React from 'react'\nimport './Header.css'\nimport Leaf from \"../../images/leaf.png\";\n\nexport default function Header() {\n    return (\n        <div className=\"header-container\">\n            <h1 className=\"header-title\">Flourish</h1>\n            <img src={Leaf} alt=\"green leaf\" className=\"header-leaf\" />\n        </div>\n    )\n}\n","import React from 'react';\nimport Cookie from 'js-cookie';\nimport { useState } from 'react';\nimport './Registration.css';\nimport { Redirect } from 'react-router-dom';\n\nexport default function Registration(props) {\n\n    const [data, setData] = useState({\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    })\n\n\n    function handleChange(e) {\n        let {name, value} = e.target\n        let updatedData = {...data, [name]: value}\n        setData(updatedData)\n    }\n\n   async function handleSubmit(e) {\n       e.preventDefault()\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken' : Cookie.get('csrftoken')\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch('/rest-auth/registration/', options)\n        if (response.ok === false) {\n        } else {\n            const data = await response.json();\n            Cookie.set(\"Authorization\", `Token ${data.key}`);\n            props.setIsAuth(true);\n        }\n    }\n\n    if (props.isAuth === true) {\n        return <Redirect to=\"/soil\" />\n     }\n     \n    return (\n        <div className=\"registration-container\">\n            <form className=\"form-control\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n            <label htmlFor=\"username\" className=\"form-label mt-3 registration-label\">Username:</label>\n                <input type=\"text\" className=\"form-control\" name=\"username\" id=\"username\" placeholder=\"Enter Username..\" value={data.username} onChange={handleChange} />\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"form-label mt-3 registration-label\">Email:</label>\n                <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Enter Email..\" value={data.email} onChange={handleChange} />\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"password1\" className=\"form-label mt-3 registration-label\">Password:</label>\n                <input type=\"password\" className=\"form-control\" name=\"password1\" id=\"password1\" placeholder=\"Enter Password..\" value={data.password1} onChange={handleChange} />\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"password2\" className=\"form-label mt-3 registration-label\">Confirm Password:</label>\n                <input type=\"password\" className=\"form-control\" name=\"password2\" id=\"password2\" placeholder=\"Confirm Password..\" value={data.password2} onChange={handleChange} />\n            </div>\n            <button className=\"btn btn-success mt-3\">Register</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport Cookie from 'js-cookie';\nimport { useState } from 'react';\nimport './Login.css';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n\n    const [data, setData] = useState({\n        username: \"\",\n        password: \"\",\n    })\n\n    function handleChange(e) {\n        let {name, value} = e.target;\n        let updatedData = {...data, [name]: value };\n        setData(updatedData);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookie.get(\"csrftoken\")\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch('/rest-auth/login/', options)\n        if (response.ok === false) {\n            console.log(\"LOGIN FAILED\", response);\n        } else {\n            const data = await response.json();\n            Cookie.set('Authorization', `Token ${data.key}`)\n            props.setIsAuth(true);\n\n        }\n    }\n\n    if (props.isAuth === true) {\n       return <Redirect to=\"/soil\" />\n    }\n\n    return (\n        <div className=\"login-container\">\n            <form action=\"\" className=\"form-control\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\" className=\"form-label login-label\">Username:</label>\n                    <input className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" value={data.username} placeholder=\"Enter Username..\" onChange={handleChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\" className=\"form-label login-label\">Password:</label>\n                    <input className=\"form-control\" type=\"password\" id=\"password\" name=\"password\" value={data.password} placeholder=\"Enter Password..\" onChange={handleChange} />\n                </div>\n                <button className=\"btn btn-success mt-3\">Login</button>\n            </form>\n            \n        </div>\n    )\n}\n\nexport default withRouter(Login)","import React from \"react\";\nimport \"./Splash.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function Splash() {\n    function handleClickRegister() {}\n\n    function handleClickLogin() {}\n\n    return (\n        <div className=\"splash-container\">\n            <h1 className=\"splash-main-heading\">\n                Welcome to <span className=\"flourish-span\">Flourish</span>\n            </h1>\n            <h2 className=\"splash-sub-heading\">\n                Plan, organize and improve your garden.\n            </h2>\n            <p className=\"splash-description\">\n                Bountiful, high-yielding gardens are products of thorough\n                preparation. Flourish is a tool to help you prepare your garden\n                for the upcoming season, while allowing you to cut down the time\n                it takes to lay the groundwork. The Flourish experience takes\n                you through a series of steps with each step focusing on\n                important gardening areas: <span className=\"splash-soil\">Soil</span>, <span className=\"splash-vegetables\">Vegetables</span>, <span className=\"splash-companion\">Companion Planting</span>,\n                and  <span className=\"splash-layout\">Physical Layout</span>.\n            </p>\n            <ol className=\"splash-list\">\n                <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-soil splash-lobster-font\">1) Soil:</span> Find your soil type based on your desired location.\n                    Using your specific soil type, we give your soil\n                    characteristics and recommendtations for potential\n                    improvements.\n                </li>\n                <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-vegetables splash-lobster-font\">2) Vegetables:</span> Considering the varying conditions of your garden, we allow you to filter against plant characteristics so you can choose the most appropriate vegetables specific areas of your garden.\n                </li>\n                <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-companion splash-lobster-font\">3) Companion Planting:</span> Vegetables often do better if they are planted alongside other plants; however, there can also be plants you do not want to plant together. We help find the best companion plants for your chosen vegetables. \n                </li>\n                <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-layout splash-lobster-font\"> 4) Physical Layout:</span> Drafting the visual layout of your garden can be highly beneficial for garden preparation. We allow you to sketch an outline of your garden beds, while providing an area for you to jot down important notes.\n                </li>\n                {/* <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-list-summary\">5) Summary:</span> After you have been given your soil characteristics and recommendtations, created your vegetable list, recruited additional vegetables for companion planting, and created a visual garden outline, you will recieve a summary of the garden plan you created.\n                </li> */}\n            </ol>\n            <div className=\"splash-btn-group\">\n            <NavLink to=\"/login\">\n                <button\n                    className=\"btn btn-success mt-2 flagship-btn\"\n                    value=\"login\"\n                    onClick={handleClickLogin}\n                >\n                    Login\n                </button>\n            </NavLink>\n            <NavLink to=\"/registration\">\n                <button\n                    className=\"btn btn-success mt-2 flagship-btn\"\n                    value=\"register\"\n                    onClick={handleClickRegister}\n                >\n                    Register\n                </button>\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n","import Cookie from 'js-cookie';\nimport React from 'react';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function GetStarted(props) {\n\n    const [successfulPost, setSuccessfulPost] = useState(false)\n\n    const [data, setData] = useState({\n        'name': \"\"\n    })\n\n    function handleChange(e) {\n        let {name, value} = e.target;\n        let updatedData = {...data, [name]: value };\n        setData(updatedData);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookie.get('csrftoken')\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch('/api/gardens/', options)\n        if (response.ok === false) {\n            console.log(\"GARDEN NAME FAILED\", response)\n        } else {\n            const data = await response.json()\n            console.log(\"GARDEN NAME SUCCESS\", data);\n            setSuccessfulPost(true);\n            props.setCurrentGarden({\n                created_at: data.created_at,\n                id: data.id,\n                name: data.name,\n                username: data.username\n            })\n        }\n    }\n\n    if (successfulPost) {\n        return <Redirect to=\"/soil\" /> \n    }\n\n    return (\n        <div className='get-started-container'>\n            <form className='form-control' onSubmit={handleSubmit}>\n                <div className='form-group'>\n                    <label htmlFor=\"name\">Garden Name:</label>\n                    <input type=\"text\" id=\"name\" name=\"name\" value={data['name']} onChange={handleChange}/>\n                </div>\n                <button className=\"btn btn-success flagship-btn\">Get Started!</button>\n            </form>\n        </div>\n    )\n}\n","import \"./Soil.css\";\nimport React from \"react\";\nimport EsriLoaderReact from \"esri-loader-react\";\nimport Cookie from \"js-cookie\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from 'react-router-dom'\n\nexport default function Soil(props) {\n    const firstRender = useRef(true);\n    const [soil, setSoil] = useState({\n        id: null,\n        characteristics: \"\",\n        recommendations: \"\",\n        soil_order: \"\",\n    });\n    const [soilSaved, setSoilSaved] = useState(false)\n\n    useEffect(() => {\n        if (firstRender.current === true) {\n            firstRender.current = false;\n        } else {\n            getSoilDetails()\n        }\n    }, [soil.soil_order]);\n\n    const options = {\n        url: \"https://js.arcgis.com/4.21/\",\n    };\n\n    async function getSoilDetails() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/soils/?soil=${soil.soil_order}`, options);\n        if (response.ok === false) {\n            console.log(\"failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SUCCESS\", data);\n            setSoil({\n                ...soil,\n                id: data[0].id,\n                characteristics: data[0].characteristics,\n                recommendations: data[0].recommendations,\n            })\n        }\n    }\n\n    console.log(soil, soil.characteristics, soil.recommendations)\n\n    async function handleSaveSoilClick() {\n\n        const options  = {\n            method: 'PUT', \n            headers: {\n                \"Content-Type\": 'application/json',\n                \"X-CSRFToken\": Cookie.get('csrftoken')\n            },\n            body: JSON.stringify({...props.currentGarden,\n                            soil: soil.id})\n        }\n        const response = await fetch(`/api/gardens/${props.currentGarden.id}/`, options)\n        if (response.ok === false) {\n            console.log(\"SOIL PUT FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SOIL PUT SUCCESS\", data)\n            setSoilSaved(true);\n        }\n    }\n\n    if (soilSaved)\n {\n     return <Redirect to=\"/vegetables\" />\n }\n    return (\n        <div className=\"soil-container\">\n            <div className=\"map-view\" value={soil}>\n\n                <EsriLoaderReact\n                    options={options}\n                    modulesToLoad={[\n                        \"esri/config\",\n                        \"esri/Map\",\n                        \"esri/views/MapView\",\n                        \"esri/layers/FeatureLayer\",\n                        \"esri/widgets/Locate\",\n                        \"esri/geometry/Point\",\n                    ]}\n                    onReady={({\n                        loadedModules: [\n                            esriConfig,\n                            Map,\n                            MapView,\n                            FeatureLayer,\n                            Locate,\n                            Point,\n                        ],\n                        containerNode,\n                    }) => {\n                        esriConfig.apiKey =\n                            \"AAPKe38b2bd343f04b5193e206b9ba79736dnppkQdQ1hschBAm1A2YPnEoOKzokq3zT2dGou2OnPIINpYr9LR7gfHPGHNy6Lcjy\";\n\n                        const map = new Map({\n                            basemap: \"arcgis-topographic\",\n                        });\n\n                        const view = new MapView({\n                            container: containerNode,\n                            map: map,\n                            center: [-118.80543, 34.027],\n                            zoom: 13,\n                        });\n\n                        // const popupSoils = {\n                        //     title: \"Soil Order\",\n                        //     content: \"<b>{esrisymbology}</b>\"\n                        // };\n\n                        // Parks and open spaces (polygons)\n                        const soilsLayer = new FeatureLayer({\n                            url: \"https://landscape11.arcgis.com/arcgis/rest/services/USA_Soils_Map_Units/featureserver/0\",\n                            outFields: [\"taxorder\"],\n                            // popupTemplate: popupSoils\n                        });\n                        map.add(soilsLayer, 0);\n\n                        const locate = new Locate({\n                            view: view,\n                            useHeadingEnabled: false,\n                            goToOverride: function (view, options) {\n                                options.target.scale = 1500;\n                                return view.goTo(options.target);\n                            },\n                        });\n                        let soilOrder;\n                        view.on(\"immediate-click\", (event) => {\n                            const latitude = event.mapPoint.latitude;\n                            const longitude = event.mapPoint.longitude;\n                            const screenPoint = view.toScreen(\n                                new Point({ latitude, longitude })\n                            );\n                            view.hitTest(screenPoint).then((hitTestResult) => {\n                                soilOrder =\n                                    hitTestResult.results[0].graphic.attributes\n                                        .esrisymbology;\n                                setSoil({\n                                    id: null,\n                                    soil_order: soilOrder,\n                                    characteristics: \"\",\n                                    recommendations: \"\",\n                                });\n                            });\n\n                        });\n\n                        view.ui.add(locate, \"top-left\");\n                    }}\n                />\n            </div>\n            <div className=\"display-soil-container\">\n                <p className=\"display-soil-p\">{soil.soil_order}</p>\n            </div>\n            <div className=\"display-results-container\">\n                <div>\n                    <h2>Characteristics:</h2>\n                    <p>{soil.characteristics}</p>\n                </div>\n                <div>\n                    <h2>Recommendations:</h2>\n                    <p>{soil.recommendations}</p>\n                </div>\n            </div>\n            <button id=\"soil-save-btn\" className=\"btn btn-success flagship-btn\" onClick={handleSaveSoilClick}>Save Soil Type</button>\n        </div>\n    );\n}\n","import \"./NavBar.css\";\nimport React from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function NavBar(props) {\n    const [radioValue, setRadioValue] = useState(\"\");\n\n    const radios = [\n        { name: \"Soil\", value: \"soil\" },\n        { name: \"Vegetables\", value: \"vegetables\" },\n        { name: \"Companion Plants\", value: \"companion\" },\n        { name: \"Physical Layout\", value: \"layout\" },\n    ];\n\n    function handleChange(e) {\n        setRadioValue(e.currentTarget.value);\n    }\n\n    return (\n        <div className=\"navbar-container\">\n            <div className=\"nav-btn-group\">\n                <ButtonGroup>\n                    {radios.map((radio, index) => (\n                        <NavLink to={`/${radio.value}`} className=\"navbar-navlink\">\n                            <ToggleButton\n                                className=\"nav-btn navbar-radio-btn\"\n                                key={uuidv4()}\n                                id={`radio-${index}`}\n                                type=\"radio\"\n                                variant=\"outline-success\"\n                                name=\"radio\"\n                                value={radio.value}\n                                checked={radio.value == radioValue}\n                                onChange={(e) => handleChange(e)}\n                            >\n                                {radio.name}\n                            </ToggleButton>\n                        </NavLink>\n                    ))}\n                </ButtonGroup>\n            </div>\n        </div>\n    );\n}\n","import React from 'react'\n// import { AiOutlineCopyrightCircle } from 'react-icons/ai'\nimport './Footer.css'\n\nexport default function Footer() {\n    return (\n        <div className=\"footer-container\">\n            {/* <p className=\"footer-copyright\"> Copyright <AiOutlineCopyrightCircle /> 2021 <a href=\"https://github.com/ggroshansii\" className=\"footer-logo-link\">Flourish</a>. All Rights Reserved</p> */}\n        </div>\n    )\n}\n","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport Registration from \"./components/Auth/Registration\";\nimport Login from \"./components/Auth/Login\";\nimport Splash from \"./components/Auth/Splash\";\nimport GetStarted from \"./components/Main/GetStarted/GetStarted\";\nimport Soil from './components/Main/Soil/Soil'\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Cookie from 'js-cookie';\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(false);\n    const [currentGarden, setCurrentGarden] = useState({\n        created_at: \"\",\n        id: null,\n        name: \"\",\n        username: \"\",\n        soil: null,\n    })\n\n    console.log(\"currentGarden\", currentGarden);\n\n    useEffect( () => {\n        const checkAuth  = () => {\n            let cookie = Cookie.get('Authorization');\n            if (cookie) {\n                setIsAuth(true);\n            } else {\n                setIsAuth(false);\n            }\n        }\n        checkAuth()\n    }, [])\n\n    let navBar;\n    if (isAuth) {\n        navBar = <NavBar />;\n    } else {\n        navBar = \"\"\n    }\n\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <Switch>\n                <Route path=\"/login\">\n                    <Login setIsAuth={setIsAuth} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/registration\">\n                    <Registration setIsAuth={setIsAuth} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/getstarted\">\n                    <GetStarted setCurrentGarden={setCurrentGarden}/>\n                </Route>\n                <Route path=\"/soil\">\n                    <Soil currentGarden={currentGarden}/>\n                </Route>\n                <Route path=\"/vegetables\">\n                    <Soil />\n                </Route>\n                <Route path=\"/companion\">\n                    <Soil />\n                </Route>\n                <Route path=\"/layout\">\n                    <Soil />\n                </Route>\n                <Route path=\"/\">\n                    <Splash />\n                </Route>\n                <Route></Route>\n                <Route></Route>\n                <Route></Route>\n            </Switch>\n            {navBar}\n            <Footer />\n        </div>\n    );\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>,\n\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}