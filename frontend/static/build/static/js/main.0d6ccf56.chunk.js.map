{"version":3,"sources":["images/leaf.png","components/Header/Header.js","components/Auth/Registration.js","components/Auth/Login.js","components/Auth/Splash.js","components/Main/Profile/GardenItem.js","components/Main/Profile/GardenList.js","components/Main/Profile/GardenDetail.js","components/Main/Profile/CreateAGarden.js","components/Main/Soil/Soil.js","components/Main/Vegetables/FilteredVegetableList.js","components/Main/Vegetables/UserVegetableList.js","components/Main/Vegetables/Vegetables.js","components/Main/Layout/Layout.js","components/NavBar/NavBar.js","components/Footer/Footer.js","components/Main/Varieties/Varieties.js","App.js","index.js"],"names":["withRouter","props","className","onClick","isAuth","history","push","src","Leaf","alt","Registration","useState","username","email","password1","password2","data","setData","handleChange","e","target","name","value","updatedData","a","preventDefault","options","method","headers","Cookie","get","body","JSON","stringify","fetch","response","ok","json","set","key","setIsAuth","to","onSubmit","htmlFor","type","id","placeholder","onChange","password","console","log","action","Splash","created_at","userGardenList","setUserGardenList","useEffect","grabUserGardenList","map","element","userGarden","setUserGarden","open","setOpen","match","params","garden","grabUserGarden","soil","layout","Button","Collapse","in","vegetables","vegetable","companions","adversaries","exposure","heat_tolerant","drought_tolerant","life_cycle","seasonality","Spinner","animation","variant","esri","firstRender","useRef","loaded","setLoaded","characteristics","recommendations","soil_order","setSoil","current","getSoilDetails","setTimeout","url","modulesToLoad","onReady","loadedModules","esriConfig","Map","MapView","FeatureLayer","Locate","Point","containerNode","apiKey","basemap","view","container","center","zoom","soilsLayer","outFields","add","soilOrder","locate","useHeadingEnabled","goToOverride","scale","goTo","on","event","latitude","mapPoint","longitude","screenPoint","toScreen","hitTest","then","hitTestResult","results","graphic","attributes","esrisymbology","ui","FilteredVegetableList","undefined","filteredVegetables","userVegetables","some","uuidv4","addToUserList","UserVegetableList","removeFromUserList","queryString","pkValues","filterData","setFilterData","setFilteredVegetables","setUserVegetables","vegetables_details","checked","updatedFilterData","grabPKvalues","i","length","getUsersVegetableList","getVegetableDetails","index","findIndex","userVeggieToAdd","splice","updatedUserVegetables","getGardenDetails","canvasRef","contextRef","isDrawing","setIsDrawing","postCanvasLayout","formData","Promise","resolve","toBlob","imageBlob","FormData","append","canvas","width","height","style","context","getContext","lineCap","strokeStyle","lineWidth","onMouseDown","nativeEvent","offsetX","offsetY","beginPath","moveTo","onMouseUp","closePath","onMouseMove","lineTo","stroke","ref","paramValue","radioValue","setRadioValue","location","pathname","split","ButtonGroup","radio","ToggleButton","currentTarget","Footer","navBar","cookie","checkAuth","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d6ccf56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/leaf.1c74297e.png\";","import React from \"react\";\nimport \"./Header.css\";\nimport Leaf from \"../../images/leaf.png\";\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nfunction Header(props) {\n    function handleClick() {\n        if (props.isAuth) {\n            props.history.push(`/gardenlist/`);\n        }\n    }\n\n    return (\n        <div className=\"header-container\">\n            <div className=\"logo-container\" onClick={handleClick}>\n                <h1 className=\"header-title\">Flourish</h1>\n                <img\n                    src={Leaf}\n                    alt=\"green leaf\"\n                    className=\"header-leaf\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport Cookie from 'js-cookie';\nimport { useState } from 'react';\nimport './Registration.css';\nimport { Redirect } from 'react-router-dom';\n\nexport default function Registration(props) {\n\n    const [data, setData] = useState({\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    })\n\n\n    function handleChange(e) {\n        let {name, value} = e.target\n        let updatedData = {...data, [name]: value}\n        setData(updatedData)\n    }\n\n   async function handleSubmit(e) {\n       e.preventDefault()\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken' : Cookie.get('csrftoken')\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch('/rest-auth/registration/', options)\n        if (response.ok === false) {\n        } else {\n            const data = await response.json();\n            Cookie.set(\"Authorization\", `Token ${data.key}`);\n            props.setIsAuth(true);\n        }\n    }\n\n    if (props.isAuth === true) {\n        return <Redirect to=\"/gardenlist\" />\n     }\n     \n    return (\n        <div className=\"registration-container\">\n            <form className=\"form-control\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n            <label htmlFor=\"username\" className=\"form-label mt-3 registration-label\">Username:</label>\n                <input type=\"text\" className=\"form-control\" name=\"username\" id=\"username\" placeholder=\"Enter Username..\" value={data.username} onChange={handleChange} />\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"form-label mt-3 registration-label\">Email:</label>\n                <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Enter Email..\" value={data.email} onChange={handleChange} />\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"password1\" className=\"form-label mt-3 registration-label\">Password:</label>\n                <input type=\"password\" className=\"form-control\" name=\"password1\" id=\"password1\" placeholder=\"Enter Password..\" value={data.password1} onChange={handleChange} />\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"password2\" className=\"form-label mt-3 registration-label\">Confirm Password:</label>\n                <input type=\"password\" className=\"form-control\" name=\"password2\" id=\"password2\" placeholder=\"Confirm Password..\" value={data.password2} onChange={handleChange} />\n            </div>\n            <button className=\"btn btn-success mt-3\">Register</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport Cookie from 'js-cookie';\nimport { useState } from 'react';\nimport './Login.css';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n\n    const [data, setData] = useState({\n        username: \"\",\n        password: \"\",\n    })\n\n    function handleChange(e) {\n        let {name, value} = e.target;\n        let updatedData = {...data, [name]: value };\n        setData(updatedData);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookie.get(\"csrftoken\")\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch('/rest-auth/login/', options)\n        if (response.ok === false) {\n            console.log(\"LOGIN FAILED\", response);\n        } else {\n            const data = await response.json();\n            Cookie.set('Authorization', `Token ${data.key}`)\n            props.setIsAuth(true);\n\n        }\n    }\n\n    if (props.isAuth === true) {\n       return <Redirect to=\"/gardenlist\" />\n    }\n\n    return (\n        <div className=\"login-container\">\n            <form action=\"\" className=\"form-control\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\" className=\"form-label login-label\">Username:</label>\n                    <input className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" value={data.username} placeholder=\"Enter Username..\" onChange={handleChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\" className=\"form-label login-label\">Password:</label>\n                    <input className=\"form-control\" type=\"password\" id=\"password\" name=\"password\" value={data.password} placeholder=\"Enter Password..\" onChange={handleChange} />\n                </div>\n                <button className=\"btn btn-success mt-3\">Login</button>\n            </form>\n            \n        </div>\n    )\n}\n\nexport default withRouter(Login)","import React from \"react\";\nimport \"./Splash.css\";\nimport { NavLink, Redirect } from \"react-router-dom\";\n\nexport default function Splash(props) {\n\n    console.log(\"ISAUTH??\" , props.isAuth)\n\n    if (props.isAuth) {\n       return <Redirect to=\"/gardenlist\" />\n    }\n\n    function handleClickRegister() {}\n\n    function handleClickLogin() {}\n\n    return (\n        <div className=\"splash-container\">\n            <h1 className=\"splash-main-heading\">\n                Welcome to <span className=\"flourish-span\">Flourish</span>\n            </h1>\n            <h2 className=\"splash-sub-heading\">\n                Plan, organize and improve your garden.\n            </h2>\n            <p className=\"splash-description\">\n                Bountiful, high-yielding gardens are products of thorough\n                preparation. Flourish is a tool to help you prepare your garden\n                for the upcoming season, while allowing you to cut down the time\n                it takes to lay the groundwork. The Flourish experience takes\n                you through a series of steps with each step focusing on\n                important gardening areas: <span className=\"splash-soil\">Soil</span>, <span className=\"splash-vegetables\">Vegetables</span>, <span className=\"splash-companion\">Companion Planting</span>,\n                and  <span className=\"splash-layout\">Physical Layout</span>.\n            </p>\n            <ol className=\"splash-list\">\n                <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-soil splash-lobster-font\">1) Soil:</span> Find your soil type based on your desired location.\n                    Using your specific soil type, we give your soil\n                    characteristics and recommendtations for potential\n                    improvements.\n                </li>\n                <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-vegetables splash-lobster-font\">2) Vegetables:</span> Considering the varying conditions of your garden, we allow you to filter against plant characteristics so you can choose the most appropriate vegetables specific areas of your garden.\n                </li>\n                <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-companion splash-lobster-font\">3) Companion Planting:</span> Vegetables often do better if they are planted alongside other plants; however, there can also be plants you do not want to plant together. We help find the best companion plants for your chosen vegetables. \n                </li>\n                <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-layout splash-lobster-font\"> 4) Physical Layout:</span> Drafting the visual layout of your garden can be highly beneficial for garden preparation. We allow you to sketch an outline of your garden beds, while providing an area for you to jot down important notes.\n                </li>\n                {/* <li className=\"splash-list-step\">\n                    {\" \"}\n                    <span className=\"splash-list-summary\">5) Summary:</span> After you have been given your soil characteristics and recommendtations, created your vegetable list, recruited additional vegetables for companion planting, and created a visual garden outline, you will recieve a summary of the garden plan you created.\n                </li> */}\n            </ol>\n            <div className=\"splash-btn-group\">\n            <NavLink to=\"/login\">\n                <button\n                    className=\"btn btn-success mt-2 flagship-btn\"\n                    value=\"login\"\n                    onClick={handleClickLogin}\n                >\n                    Login\n                </button>\n            </NavLink>\n            <NavLink to=\"/registration\">\n                <button\n                    className=\"btn btn-success mt-2 flagship-btn\"\n                    value=\"register\"\n                    onClick={handleClickRegister}\n                >\n                    Register\n                </button>\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport \"./GardenItem.css\"\n\n function GardenItem(props) {\n\n    function handleGardenItemClick(e) {\n        props.history.push(`/gardenlist/${props.id}`);\n    }\n\n    console.log(\"g-item props\", props)\n\n    return (\n        <div className='garden-item-container'>\n       \n            <button className=\"garden-item\" value={props.id} onClick={handleGardenItemClick}>\n                <h3>{props.name}</h3>\n                <p>Created: {props.created_at}</p>\n                <p>Click for more details</p>\n            </button>\n        </div>\n    );\n}\n\nexport default withRouter(GardenItem)","import React from 'react';\nimport GardenItem from './GardenItem';\nimport Cookie from 'js-cookie';\nimport { useEffect, useState } from 'react';\nimport \"./GardenList.css\"\nimport { withRouter } from 'react-router';\n\n\nfunction GardenList(props) {\n\n    const [userGardenList, setUserGardenList] = useState([])\n\n    useEffect( () => {\n        grabUserGardenList()\n    }, [])\n\n    async function grabUserGardenList() {\n        const options = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookie.get('csrftoken')\n            }\n        }\n        const response = await fetch('/api/gardens/', options)\n        if (response.ok === false) {\n            console.log(\"GARDEN LIST FAIL\", response)\n        } else {\n            const data = await response.json()\n            console.log(\"GARDEN LIST SUCCESS\", data)\n            setUserGardenList(data)\n        }\n    }\n\n    function handleAddGardenBtn() {\n        props.history.push('/creategarden')\n    }\n\n\n    return (\n        <div className=\"garden-list-container\">\n\n            <button className=\"btn btn-success flagship-btn garden-list-add-btn\" onClick={handleAddGardenBtn}>Create New Garden</button>\n             <h2>Your Gardens:</h2>\n             <div className=\"garden-list-grid-container\">\n             {userGardenList.map(element => {\n                return <GardenItem {...element} />\n            })}\n             </div>\n        </div>\n    )\n}\n\nexport default withRouter(GardenList)","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport Cookie from \"js-cookie\";\nimport \"./GardenDetail.css\";\nimport { Spinner, Button, Collapse } from \"react-bootstrap\";\n\nfunction GardenDetail(props) {\n    const [userGarden, setUserGarden] = useState();\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n        grabUserGarden();\n    }, []);\n\n    async function grabUserGarden() {\n        console.log(\"here\", props.match.params.garden);\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"GARDEN LIST FAIL\", response);\n        } else {\n            const data = await response.json();\n            setUserGarden(data);\n        }\n    }\n\n    if (!userGarden) {\n        return (\n            <Spinner\n                animation=\"border\"\n                variant=\"success\"\n                className=\"garden-detail-spinner\"\n            />\n        );\n    }\n\n    return (\n        <div className=\"garden-detail-container\">\n            <div className=\"garden-detail\">\n                <h3>{userGarden.name}</h3>\n                <p>Created: {userGarden.created_at}</p>\n                <p>Soil Type: {userGarden.soil}</p>\n                <p>Layout: {userGarden.layout} </p>\n                <Button\n                    onClick={() => setOpen(!open)}\n                    aria-controls=\"example-collapse-text\"\n                    aria-expanded={open}\n                >\n                    Vegetables\n                </Button>\n                <Collapse in={open}>\n                    <div className=\"garden-detail-vegetable-grid-container\">\n                        {userGarden.vegetables.map((vegetable) => {\n                            return (\n                                <div className=\"garden-detail-vegetable\">\n                                    <h5>{vegetable.name}</h5>\n                                    <p>Plant with: {vegetable.companions}</p>\n                                    <p>\n                                        Do NOT plant with:{\" \"}\n                                        {vegetable.adversaries}\n                                    </p>\n                                    <p>\n                                        Sun Exposure:{\" \"}\n                                        {vegetable.exposure === \"BO\"\n                                            ? \"Full Sun And/Or Partial Sun\"\n                                            : vegetable.exposure === \"FS\"\n                                            ? \"Full Sun\"\n                                            : \"Partial Sun\"}\n                                    </p>\n                                    <p>\n                                        Heat Tolerant:{\" \"}\n                                        {vegetable.heat_tolerant ? \"Yes\" : \"No\"}\n                                    </p>\n                                    <p>\n                                        Drought Tolerant:{\" \"}\n                                        {vegetable.drought_tolerant\n                                            ? \"Yes\"\n                                            : \"No\"}\n                                    </p>\n                                    <p>\n                                        Life Cycle:{\" \"}\n                                        {vegetable.life_cycle === \"AN\"\n                                            ? \"Annual\"\n                                            : vegetable.life_cycle === \"BI\"\n                                            ? \"Biennial\"\n                                            : \"Perennial\"}\n                                    </p>\n                                    <p>\n                                        Seasonality:{\" \"}\n                                        {vegetable.seasonality === \"CS\"\n                                            ? \"Cool-Season\"\n                                            : \"Warm-Season\"}\n                                    </p>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </Collapse>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(GardenDetail);\n","import Cookie from 'js-cookie';\nimport React from 'react';\nimport { useState } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nfunction CreateAGarden(props) {\n\n   \n\n    const [data, setData] = useState({\n        'name': \"\",\n    })\n\n    function handleChange(e) {\n        let {name, value} = e.target;\n        let updatedData = {...data, [name]: value };\n        setData(updatedData);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookie.get('csrftoken')\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch('/api/gardens/', options)\n        if (response.ok === false) {\n            console.log(\"GARDEN NAME FAILED\", response);\n        } else {\n            const data = await response.json()\n            console.log(\"GARDEN NAME SUCCESS\", data);\n            \n            props.history.push(`/${data.id}/soil/`);\n            \n        }\n    }\n\n  \n\n    return (\n        <div className='get-started-container'>\n            <form className='form-control' onSubmit={handleSubmit}>\n                <div className='form-group'>\n                    <label htmlFor=\"name\">Garden Name:</label>\n                    <input type=\"text\" id=\"name\" name=\"name\" value={data['name']} onChange={handleChange}/>\n                </div>\n                <button className=\"btn btn-success flagship-btn\">Get Started!</button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(CreateAGarden);\n","import \"./Soil.css\";\nimport React from \"react\";\nimport EsriLoaderReact from \"esri-loader-react\";\nimport Cookie from \"js-cookie\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Redirect, withRouter } from 'react-router-dom'\n\nfunction Soil(props) {\n    const firstRender = useRef(true);\n    const [loaded, setLoaded] = useState(false)\n    const [soil, setSoil] = useState({\n        id: null,\n        characteristics: \"\",\n        recommendations: \"\",\n        soil_order: \"\",\n    });\n\n    useEffect(() => {\n        if (firstRender.current === true) {\n            firstRender.current = false;\n        } else {\n            getSoilDetails()\n        }\n    }, [soil.soil_order]);\n\n    const options = {\n        url: \"https://js.arcgis.com/4.21/\",\n    };\n\n    async function getSoilDetails() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/soils/?soil=${soil.soil_order}`, options);\n        if (response.ok === false) {\n            console.log(\"failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SUCCESS\", data);\n            setSoil({\n                ...soil,\n                id: data[0].id,\n                characteristics: data[0].characteristics,\n                recommendations: data[0].recommendations,\n            })\n        }\n    }\n\n\n    async function handleSaveSoilClick() {\n\n        const options  = {\n            method: 'PATCH', \n            headers: {\n                \"Content-Type\": 'application/json',\n                \"X-CSRFToken\": Cookie.get('csrftoken')\n            },\n            body: JSON.stringify({soil: soil.id})\n        }\n        const response = await fetch(`/api/gardens/${props.match.params.garden}/`, options)\n        if (!response.ok) {\n            console.log(\"SOIL PATCH FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SOIL PATCH SUCCESS\", data)\n            props.history.push(`/${data.id}/vegetables/`)\n        }\n    }\n\n    console.log(props.match.params.garden)\n\n\n\n setTimeout(() => {\n     setLoaded(true);\n })\n\nlet esri;\nif (loaded) {\n    esri =             <div className=\"map-view\">\n    <EsriLoaderReact\n        options={options}\n        modulesToLoad={[\n            \"esri/config\",\n            \"esri/Map\",\n            \"esri/views/MapView\",\n            \"esri/layers/FeatureLayer\",\n            \"esri/widgets/Locate\",\n            \"esri/geometry/Point\",\n        ]}\n        onReady={({\n            loadedModules: [\n                esriConfig,\n                Map,\n                MapView,\n                FeatureLayer,\n                Locate,\n                Point,\n            ],\n            containerNode,\n        }) => {\n            esriConfig.apiKey =\n                \"AAPKe38b2bd343f04b5193e206b9ba79736dnppkQdQ1hschBAm1A2YPnEoOKzokq3zT2dGou2OnPIINpYr9LR7gfHPGHNy6Lcjy\";\n\n            const map = new Map({\n                basemap: \"arcgis-topographic\",\n            });\n\n            const view = new MapView({\n                container: containerNode,\n                map: map,\n                center: [-118.80543, 34.027],\n                zoom: 13,\n            });\n\n            // const popupSoils = {\n            //     title: \"Soil Order\",\n            //     content: \"<b>{esrisymbology}</b>\"\n            // };\n\n            // Parks and open spaces (polygons)\n            const soilsLayer = new FeatureLayer({\n                url: \"https://landscape11.arcgis.com/arcgis/rest/services/USA_Soils_Map_Units/featureserver/0\",\n                outFields: [\"taxorder\"],\n                // popupTemplate: popupSoils\n            });\n            map.add(soilsLayer, 0);\n\n            const locate = new Locate({\n                view: view,\n                useHeadingEnabled: false,\n                goToOverride: function (view, options) {\n                    options.target.scale = 1500;\n                    return view.goTo(options.target);\n                },\n            });\n            let soilOrder;\n            view.on(\"immediate-click\", (event) => {\n                const latitude = event.mapPoint.latitude;\n                const longitude = event.mapPoint.longitude;\n                const screenPoint = view.toScreen(\n                    new Point({ latitude, longitude })\n                );\n                view.hitTest(screenPoint).then((hitTestResult) => {\n                    soilOrder =\n                        hitTestResult.results[0].graphic.attributes\n                            .esrisymbology;\n                    setSoil({\n                        id: null,\n                        soil_order: soilOrder,\n                        characteristics: \"\",\n                        recommendations: \"\",\n                    });\n                });\n\n            });\n\n            view.ui.add(locate, \"top-left\");\n        }}\n    />\n</div>\n} else {\n    esri = \"\"\n}\n\n\n    return (\n        <div className=\"soil-container\">\n            {esri}\n            <div className=\"display-soil-container\">\n                <p className=\"display-soil-p\">{soil.soil_order}</p>\n            </div>\n            <div className=\"display-results-container\">\n                <div>\n                    <h2>Characteristics:</h2>\n                    <p>{soil.characteristics}</p>\n                </div>\n                <div>\n                    <h2>Recommendations:</h2>\n                    <p>{soil.recommendations}</p>\n                </div>\n            </div>\n            <button id=\"soil-save-btn\" className=\"btn btn-success flagship-btn\" onClick={handleSaveSoilClick}>Save Soil Type</button>\n        </div>\n    );\n}\n\nexport default withRouter(Soil);\n","import React from \"react\";\nimport \"./FilteredVegetableList.css\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function FilteredVegetableList(props) {\n    return (\n        <div className=\"filtered-vegetables-container\">\n        <h2>Based on your search results:</h2>\n            <div className=\"filtered-vegetables-grid-container\">\n                {props.filteredVegetables === undefined\n                    ? \"\"\n                    : props.filteredVegetables.map((vegetable) => {\n                        if (props.userVegetables.some((element) => element.name === vegetable.name)){\n                            console.log(\"true\")\n                            return (\n                              <div className=\"filtered-vegetable already-added\" key={uuidv4()}>\n                                  <p className=\"filtered-vegetable-name\">\n                                      {vegetable.name}\n                                  </p>\n\n                              </div>\n                          );\n                        } else {\n                            console.log(\"false\")\n                            return (\n                              <div className=\"filtered-vegetable\" key={uuidv4()}>\n                                  <p className=\"filtered-vegetable-name\">\n                                      {vegetable.name}\n                                  </p>\n                                  <button\n                                      className=\"filtered-add-vegetable\"\n                                      onClick={() =>\n                                          props.addToUserList(vegetable.id)\n                                      }\n                                  >\n                                      Add\n                                  </button>\n                              </div>\n                          );\n                        }\n\n                      })}\n            </div>\n        </div>\n    );\n}\n","import React from 'react'\nimport \"./UserVegetableList.css\"\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function UserVegetableList(props) {\n    return (\n        <div className=\"user-vegetable-list-container\">\n        <h2>Your Vegetables:</h2>\n            <div className=\"user-vegetables-grid-container\">\n            {props.userVegetables === undefined\n                ? \"\"\n                : props.userVegetables.map((vegetable) => {\n                      return (<>\n                          {console.log(\"VEGGIE\",vegetable)}\n                          <div className=\"user-vegetable\" key={uuidv4()}>\n                              <p className=\"user-vegetable-name\">{vegetable.name}</p>\n                              <button className=\"user-add-vegetable\" onClick={() => props.removeFromUserList(vegetable.id)}>Remove</button>\n                          </div></>\n                      );\n                  })}\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Vegetables.css\";\nimport Cookie from \"js-cookie\";\nimport { useState, useEffect } from \"react\";\nimport FilteredVegetableList from \"./FilteredVegetableList\";\nimport UserVegetableList from \"./UserVegetableList\";\nimport { withRouter } from \"react-router\";\n\nfunction Vegetables(props) {\n    let queryString = \"\";\n    let pkValues=[];\n\n    const [filterData, setFilterData] = useState({\n        name: \"\",\n        exposure: \"\",\n        heat_tolerant: \"\",\n        drought_tolerant: \"\",\n        life_cycle: \"\",\n        seasonality: \"\",\n    });\n\n    const [filteredVegetables, setFilteredVegetables] = useState();\n    const [userVegetables, setUserVegetables] = useState([])\n\n    useEffect( ()=> {\n        getUsersVegetableList()\n    }, [])\n\n    async function getUsersVegetableList() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookie.get('csrftoken')\n            }\n        }\n        const response = await fetch(`/api/gardens/${props.match.params.garden}/`, options)\n        if (response.ok === false) {\n            console.log(\"GETTING USER VEGETABLES FAILED\", response)\n        } else {\n            const data = await response.json()\n            setUserVegetables(data.vegetables_details)\n        }\n    }\n\n\n    async function getVegetableDetails() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/vegetables?${queryString}`, options);\n        if (response.ok === false) {\n            console.log(\"failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SUCCESS\", data);\n            setFilteredVegetables(data);\n        }\n    }\n\n    function handleChange(e) {\n        if (e.target.type === \"checkbox\" && !e.target.checked) {\n            let updatedFilterData = { ...filterData, [e.target.name]: \"\" };\n            setFilterData(updatedFilterData);\n        } else if (e.target.type === \"checkbox\" && e.target.checked) {\n            let updatedFilterData = { ...filterData, [e.target.name]: \"True\" };\n            setFilterData(updatedFilterData);\n        } else {\n            let { name, value } = e.target;\n            let updatedFilterData = { ...filterData, [name]: value };\n            setFilterData(updatedFilterData);\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (filterData.name.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString = queryString + `name=${filterData.name}`;\n        }\n        if (filterData.exposure.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString = queryString + `exposure=${filterData.exposure}`;\n        }\n        if (filterData.heat_tolerant.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString =\n                queryString + `heat_tolerant=${filterData.heat_tolerant}`;\n        }\n        if (filterData.drought_tolerant.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString =\n                queryString + `drought_tolerant=${filterData.drought_tolerant}`;\n        }\n        if (filterData.life_cycle.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString = queryString + `life_cycle=${filterData.life_cycle}`;\n        }\n        if (filterData.seasonality.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString = queryString + `seasonality=${filterData.seasonality}`;\n        }\n\n        getVegetableDetails();\n        queryString = \"\";\n    }\n\n    function addToUserList(id) {\n        let index = filteredVegetables.findIndex(element => element.id == id);\n        console.log(\"INDEX\", index)\n        let updatedFilteredVegetables = [...filteredVegetables];\n        let userVeggieToAdd = updatedFilteredVegetables.splice(index, 1);\n        setUserVegetables([...userVegetables, userVeggieToAdd[0]]);\n    }\n\n    function removeFromUserList(id){\n        let index = userVegetables.findIndex(element => element.id === id);\n        let updatedUserVegetables =[...userVegetables];\n        updatedUserVegetables.splice(index, 1);\n        setUserVegetables(updatedUserVegetables);\n    }\n\n    function grabPKvalues(vegetables) {\n\n        for (let i = 0; i < vegetables.length; i++) {\n            pkValues.push(vegetables[i].id)\n        }\n    }\n\n    async function handleSaveVegClick() {\n\n        grabPKvalues(userVegetables)\n\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookie.get('csrftoken')\n            },\n            body: JSON.stringify({'vegetables': pkValues })\n        }\n        const response = await fetch(`/api/gardens/${props.match.params.garden}/`, options)\n        if (response.ok === false) {\n            console.log('VEG PATCH FAILED', response);\n        } else {\n            const data = await response.json()\n            console.log(\"VEG PATCH SUCCESS\", data);\n            props.history.push(`/${data.id}/varieties/`)\n        }\n    }\n\n\n    return (\n        <div className=\"vegetables-container\">\n            <div className=\"vegetables-form-container\">\n                <h2>Pick Vegetables by Filtering:</h2>\n                <form\n                    action=\"\"\n                    className=\"form-control vegetables-form\"\n                    onSubmit={handleSubmit}\n                >\n                    <label htmlFor=\"name\">Name (Optional):</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        onChange={handleChange}\n                    />\n\n                    <label htmlFor=\"exposure\">Sun Exposure</label>\n                    <select\n                        name=\"exposure\"\n                        id=\"exposure\"\n                        onChange={handleChange}\n                    >\n                        <option value=\"\">Both</option>\n                        <option value=\"FS\">Full Sun</option>\n                        <option value=\"PS\">Partial Sun</option>\n                    </select>\n\n                    <div className=\"vegetables-checkboxes-container\">\n                        <input\n                            type=\"checkbox\"\n                            id=\"heat_tolerant\"\n                            name=\"heat_tolerant\"\n                            value=\"TRUE\"\n                            onChange={handleChange}\n                        />\n                        <label htmlFor=\"heat_tolerant\">Heat Tolerant</label>\n                        <input\n                            type=\"checkbox\"\n                            id=\"drought_tolerant\"\n                            name=\"drought_tolerant\"\n                            value=\"TRUE\"\n                            onChange={handleChange}\n                        />\n                        <label htmlFor=\"drought_tolerant\">\n                            Drought Tolerant\n                        </label>\n                    </div>\n\n                    <label htmlFor=\"life_cycle\">Life Cycle</label>\n                    <select\n                        name=\"life_cycle\"\n                        id=\"life_cycle\"\n                        onChange={handleChange}\n                    >\n                        <option value=\"\">All</option>\n                        <option value=\"AN\">Annual</option>\n                        <option value=\"BI\">Biennial</option>\n                        <option value=\"PE\">Perennial</option>\n                    </select>\n\n                    <label htmlFor=\"seasonality\">Seasonality</label>\n                    <select\n                        name=\"seasonality\"\n                        id=\"seasonality\"\n                        onChange={handleChange}\n                    >\n                        <option value=\"\">All</option>\n                        <option value=\"CS\">Cool Season</option>\n                        <option value=\"WS\">Warm Season</option>\n                    </select>\n                    <button className=\"btn btn-success flagship-btn\">\n                        Search\n                    </button>\n                </form>\n                <h2>Save your vegetable list / Continue:</h2>\n                <button className=\"btn btn-success flagship-btn\" onClick={handleSaveVegClick}>Finalize Vegetable Picks</button>\n            </div>\n\n            <FilteredVegetableList filteredVegetables={filteredVegetables} userVegetables={userVegetables} addToUserList={addToUserList}/>\n            <UserVegetableList userVegetables={userVegetables} removeFromUserList={removeFromUserList}/>\n        </div>\n    );\n}\n\n\nexport default withRouter(Vegetables)","import React from \"react\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Layout.css\";\nimport Cookie from \"js-cookie\";\n\nfunction Layout(props) {\n    useEffect(() => {\n        getGardenDetails();\n    }, []);\n\n    async function getGardenDetails() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"GET DETAILS FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"GET DETAILS SUCCESS\", data);\n        }\n    }\n\n    const canvasRef = useRef(null);\n    const contextRef = useRef(null);\n    const [isDrawing, setIsDrawing] = useState(false);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = 450 * 2;\n        canvas.height = 600 * 2;\n        canvas.style.width = `${450}px`;\n        canvas.style.height = `${600}px`;\n\n        const context = canvas.getContext(\"2d\");\n        context.scale(2, 2);\n        context.lineCap = \"round\";\n        context.strokeStyle = \"black\";\n        context.lineWidth = 5;\n        contextRef.current = context;\n    }, []);\n\n    function startDrawing({ nativeEvent }) {\n        const { offsetX, offsetY } = nativeEvent;\n        contextRef.current.beginPath();\n        contextRef.current.moveTo(offsetX, offsetY);\n        setIsDrawing(true);\n    }\n    function finishDrawing() {\n        contextRef.current.closePath();\n        setIsDrawing(false);\n    }\n\n    function draw({ nativeEvent }) {\n        if (!isDrawing) {\n            return;\n        }\n        const { offsetX, offsetY } = nativeEvent;\n        contextRef.current.lineTo(offsetX, offsetY);\n        contextRef.current.stroke();\n    }\n\n    async function postCanvasLayout(formData) {\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"X-CSRFToken\": Cookie.get('csrftoken')\n            },\n            body: formData,\n        }\n        const response = await fetch(`/api/gardens/${props.match.params.garden}/`, options);\n        if (response.ok === false) {\n            console.log(\"LAYOUT UPLOAD FAILED\", response)\n        } else {\n            const data = await response.json()\n            console.log(\"LAYOUT UPLOAD SUCCESS\", data)\n        }\n    }\n\n    async function handleSaveCanvas() {\n\n        // canvasRef.current.toBlob((blob) => {\n            // formData.append('layout', blob);\n        //     postCanvasLayout(formData);\n        // }, 'image/png', 'image.pn');  \n\n        let imageBlob = await new Promise(resolve => canvasRef.current.toBlob(resolve, 'image/png'));\n        const formData = new FormData();\n        formData.append('layout', imageBlob, 'image.png');\n        postCanvasLayout(formData)\n        // const image = canvasRef.current.toDataURL('image/png');  \n        // const blob = await (await fetch(image)).blob()\n        // const blobURL = URL.createObjectURL(blob);\n        // const link = document.createElement('a');\n        // link.href = blobURL;\n        // link.download = \"image.png\";\n        // link.click()\n    }\n\n    // async function handleSaveCanvas() {\n    //     canvasRef.current.toBlob(function(blob) {\n    //       var newImg = document.createElement('img'),\n    //           url = URL.createObjectURL(blob);\n        \n    //       newImg.onload = function() {\n    //         URL.revokeObjectURL(url);\n    //       };\n    //       newImg.src = url;\n    //       document.body.appendChild(newImg);\n    //     }, 'image/jpeg', 0.95);\n    // }\n\n\n\n    return (\n        <div className=\"layout-container\">\n            <div className=\"layout-companions\">\n                <h2>Companion Plants</h2>\n            </div>\n            <div className=\"canvas-container\">\n                <canvas\n                    onMouseDown={startDrawing}\n                    onMouseUp={finishDrawing}\n                    onMouseMove={draw}\n                    ref={canvasRef}\n                    className=\"layout-canvas\"\n                />\n                <button className=\"btn btn-success flagship-btn\" onClick={handleSaveCanvas}>Save Sketch to Profile</button>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Layout);\n","import \"./NavBar.css\";\nimport React from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nfunction NavBar(props) {\n    const [radioValue, setRadioValue] = useState(\"\");\n\n    const radios = [\n        { name: \"Soil\", value: \"soil\" },\n        { name: \"Vegetables\", value: \"vegetables\" },\n        { name: \"Plant Varieties\", value: \"varieties\" },\n        { name: \"Physical Layout\", value: \"layout\" },\n    ];\n\n    let paramValue;\n    paramValue = props.location.pathname.split(\"/\")[1]\n\n    function handleChange(e) {\n        setRadioValue(e.currentTarget.value);\n    }\n\n\n    return (\n        <div className=\"navbar-container\">\n            <div className=\"nav-btn-group\">\n                <ButtonGroup>\n                    {radios.map((radio, index) => (\n                        <NavLink to={`/${paramValue}/${radio.value}/`} className=\"navbar-navlink\">\n                            <ToggleButton\n                                className=\"nav-btn navbar-radio-btn\"\n                                key={uuidv4()}\n                                id={`radio-${index}`}\n                                type=\"radio\"\n                                variant=\"outline-success\"\n                                name=\"radio\"\n                                value={radio.value}\n                                checked={radio.value == radioValue}\n                                onChange={(e) => handleChange(e)}\n                            >\n                                {radio.name}\n                            </ToggleButton>\n                        </NavLink>\n                    ))}\n                </ButtonGroup>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(NavBar);","import React from 'react'\n// import { AiOutlineCopyrightCircle } from 'react-icons/ai'\nimport './Footer.css'\n\nexport default function Footer() {\n    return (\n        <div className=\"footer-container\">\n            {/* <p className=\"footer-copyright\"> Copyright <AiOutlineCopyrightCircle /> 2021 <a href=\"https://github.com/ggroshansii\" className=\"footer-logo-link\">Flourish</a>. All Rights Reserved</p> */}\n        </div>\n    )\n}\n","import React from 'react';\nimport Cookie from 'js-cookie';\nimport { useState, useEffect } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\n\nfunction Varieties(props) {\n\n    const [userGarden, setUserGarden] = useState();\n    const [formData, setFormData] = useState({});\n\n    useEffect(() => {\n        grabUserGarden();\n    }, []);\n\n    async function grabUserGarden() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"GARDEN LIST FAIL\", response);\n        } else {\n            const data = await response.json();\n            setUserGarden(data);\n        }\n    }\n\n    function handleChange(e) {\n        let { name, value } = e.target;\n        let updatedFormData = {...formData, [name]: value}\n        setFormData(updatedFormData);\n        console.log(formData)\n    }\n\n    if (!userGarden) {\n        return (\n            <Spinner\n                animation=\"border\"\n                variant=\"success\"\n                className=\"garden-detail-spinner\"\n            />\n        );\n    }\n\n    console.log(userGarden)\n\n    return (\n        <div>\n            <form action=\"\" className=\"form-control\">\n                {userGarden.vegetables_details.map(vegetable => {\n\n                    return (\n                        <>\n                        <div className=\"form-group variety-form-group\">   \n                            <p className=\"varieties-vegetable-name\">Vegetable: {vegetable.name}</p>\n                            <label className=\"varieties-variety-label label-form\" htmlFor=\"variety\"></label>\n                            {/* <input id=\"variety\" name={vegetable.name} value={formData.vegetable.name} className=\"form-control\" type=\"text\" placeholder=\"Seed Variety\" onChange={handleChange} /> */}\n                        </div>\n                        </>\n                    )\n                })}\n                <button className=\"btn btn-success flagship-btn\">Submit Seed Varieties</button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Varieties)","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Registration from \"./components/Auth/Registration\";\nimport Login from \"./components/Auth/Login\";\nimport Splash from \"./components/Auth/Splash\";\nimport GardenList from \"./components/Main/Profile/GardenList\";\nimport GardenDetail from \"./components/Main/Profile/GardenDetail\";\nimport CreateAGarden from \"./components/Main/Profile/CreateAGarden\";\nimport Soil from './components/Main/Soil/Soil'\nimport Vegetables from './components/Main/Vegetables/Vegetables'\nimport Layout from \"./components/Main/Layout/Layout\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Cookie from 'js-cookie';\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport Varieties from \"./components/Main/Varieties/Varieties\";\n\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(false);\n    const [currentGarden, setCurrentGarden] = useState();\n\n    useEffect( () => {\n        const checkAuth  = () => {\n            let cookie = Cookie.get('Authorization');\n            if (cookie) {\n                setIsAuth(true);\n            } else {\n                setIsAuth(false);\n            }\n        }\n        checkAuth()\n    }, []);\n\n    let navBar;\n    if (isAuth) {\n        navBar = <NavBar />;\n    } else {\n        navBar = \"\"\n    }\n\n\n    return (\n        <div className=\"App\">\n            <Header isAuth={isAuth}/>\n            <Switch>\n                <Route path=\"/login\">\n                    <Login setIsAuth={setIsAuth} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/registration\">\n                    <Registration setIsAuth={setIsAuth} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/gardenlist/:garden\">\n                    <GardenDetail />\n                </Route>\n                <Route path=\"/gardenlist\">\n                    <GardenList />\n                </Route>\n                <Route path=\"/creategarden\">\n                    <CreateAGarden/>\n                </Route>\n                <Route path=\"/:garden/soil\">\n                    <Soil />\n                </Route>\n                <Route path=\"/:garden/vegetables\">\n                    <Vegetables />\n                </Route>\n                <Route path=\"/:garden/varieties\">\n                    <Varieties />\n                </Route>\n                <Route path=\"/:garden/layout\">\n                    <Layout />\n                </Route>\n\n                <Route path=\"/\">\n                    <Splash isAuth={isAuth}/>\n                </Route>\n                <Route></Route>\n                <Route></Route>\n                <Route></Route>\n            </Switch>\n            {navBar}\n            <Footer />\n        </div>\n    );\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>,\n\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}