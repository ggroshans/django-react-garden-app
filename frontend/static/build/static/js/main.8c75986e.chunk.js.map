{"version":3,"sources":["images/leaf.png","images/farmer.png","components/NavBar/NavBar.js","components/Header/Header.js","components/Auth/Registration.js","components/Auth/Login.js","components/Auth/Splash.js","components/Main/Profile/GardenItem.js","components/Main/Profile/CreateAGarden.js","components/Main/Profile/GardenList.js","components/Main/Profile/GardenNotes.js","components/Main/Profile/WeatherDashboard.js","components/Main/Profile/GardenDetail.js","components/Main/Soil/Soil.js","components/Main/Vegetables/FilteredVegetableList.js","components/Main/Vegetables/UserVegetableList.js","components/Main/Vegetables/Vegetables.js","components/Main/Layout/Companions.js","components/Main/Layout/Layout.js","components/Main/Summary/Summary.js","images/gardening1.jpeg","images/gardening2.jpeg","images/gardening3.jpeg","images/gardening4.jpeg","images/gardening5.jpeg","components/Main/Instructions/Instructions.js","components/Footer/Footer.js","components/Main/Varieties/VarietiesDetail.js","components/Main/Varieties/Varieties.js","App.js","index.js"],"names":["withRouter","props","paramValue","useState","radioValue","setRadioValue","location","pathname","split","className","name","value","map","radio","index","to","activeClassName","id","type","variant","checked","onChange","e","currentTarget","handleChange","uuidv4","navBar","username","setUsername","open","setOpen","wikiData","setWikiData","a","console","log","options","method","headers","Cookie","get","fetch","response","ok","json","data","set","key","charAt","toUpperCase","slice","toLowerCase","remove","history","push","setIsAuth","response1","pageNumbers","query","categorymembers","pageObj","pageid","response2","forEach","useEffect","getWikiData","grabUserName","showHeader","isAuth","showNav","onClick","src","Leaf","alt","Farmer","Collapse","in","Math","floor","random","length","Number","window","href","Registration","email","password1","password2","setData","target","updatedData","preventDefault","body","JSON","stringify","setShowHeader","onSubmit","htmlFor","placeholder","password","action","Splash","class","removeGardenFromList","date","splitDate","year","shift","join","formatDate","created_at","handleCreateGarden","Modal","Header","closeButton","Title","Body","onKeyPress","Footer","Button","handleClose","userGardenList","setUserGardenList","show","setShow","sort","b","elem1","elem2","replace","grabUserGardenList","setShowNav","findIndex","garden","updatedGardenList","splice","onHide","element","notes","setNotes","userGardenID","handleDeleteClick","idx","updatedNotes","fetchNotes","note","WeatherDashboard","weatherData","setWeatherData","userGarden","latitude","toFixed","longitude","getWeatherDetails","Date","current","sunrise","sunset","temp","dew_point","feels_like","humidity","uvi","weather","icon","str","description","txt","substr","Spinner","animation","setUserGarden","isEditing","setIsEditing","rename","setRename","scrollView","setScrollView","fullscreen","setFullscreen","match","params","handleEditVarietiesClick","grabUserGarden","soil_details","characteristics","recommendations","layout","download","v","vegetables_details","vegetable","companions","adversaries","exposure","heat_tolerant","drought_tolerant","life_cycle","seasonality","varieties","undefined","varietiesPerVegetable","prop","variety","setTimeout","print","firstRender","useRef","setLoaded","soil_order","soil","setSoil","showDetails","setShowDetails","coordinates","setCoordinates","soilDiv","getSoilDetails","scrollIntoView","behavior","block","inline","url","modulesToLoad","onReady","loadedModules","esriConfig","Map","MapView","FeatureLayer","Locate","Point","containerNode","apiKey","basemap","view","container","center","zoom","soilsLayer","outFields","opacity","add","soilOrder1","soilOrder2","locate","useHeadingEnabled","goToOverride","scale","goTo","on","event","mapPoint","screenPoint","toScreen","hitTest","then","hitTestResult","results","graphic","attributes","esrisymbology","ui","ref","FilteredVegetableList","showNoResultsAlert","role","filteredVegetables","userVegetables","some","addToUserList","UserVegetableList","removeFromUserList","showSuccessAlert","setShowSuccessAlert","queryString","pkValues","filterData","setFilterData","setFilteredVegetables","setUserVegetables","showArrow","setShowArrow","filteredVegScroll","filterFormScroll","updatedFilterData","grabPKvalues","vegetables","i","getUsersVegetableList","scrollTo","getVegetableDetails","userVeggieToAdd","updatedUserVegetables","setQueryString","firstRender1","firstRender2","duplicate","vegetableObj","updatedGarden","handleAddCompanion","val","trim","top","document","scrollHeight","getGardenDetails","addNewVegetableToGarden","companion","canvasRef","contextRef","isDrawing","setIsDrawing","postCanvasLayout","formData","Promise","resolve","toBlob","imageBlob","FormData","append","canvas","width","height","style","context","getContext","lineCap","strokeStyle","lineWidth","onMouseDown","nativeEvent","offsetX","offsetY","beginPath","moveTo","onMouseUp","closePath","onMouseMove","lineTo","stroke","Image1","Image2","Image3","Image4","Image5","setVariety","previousVarietyList","setPreviousVarietyList","showInput","setShowInput","showDeleteAlert","setShowDeleteAlert","handleBlur","updatedVariety","updateVarieties","prevState","property","prevValue","findPreviousSavedVarieties","prevVariety","deleteVariety","updatedState","handleDelete","onBlur","handleKeyPress","Object","keys","cookie","checkAuth","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"4qBAAe,G,MAAA,IAA0B,kC,uBCA1B,MAA0B,mC,wCC8C1BA,mBAxCf,SAAgBC,GACZ,IASIC,EATJ,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAPAH,EAAaD,EAAMK,SAASC,SAASC,MAAM,KAAK,GAQ5C,qBAAKC,UAAU,mBAAf,SACI,qBAAKA,UAAU,gBAAf,SAjBO,CACX,CAAEC,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,aAAcC,MAAO,cAC7B,CAAED,KAAM,iBAAkBC,MAAO,aACjC,CAAED,KAAM,kBAAmBC,MAAO,WAcdC,KAAI,SAACC,EAAOC,GAAR,OACR,cAAC,IAAD,CAASC,GAAE,WAAMb,EAAN,YAAoBW,EAAMF,MAA1B,KAAoCF,UAAU,cAAcO,gBAAgB,SAE/EC,GAAE,gBAAWH,GACbI,KAAK,QACLC,QAAQ,kBACRT,KAAK,QACLC,MAAOE,EAAMF,MACbS,QAASP,EAAMF,QAAUP,EACzBiB,SAAU,SAACC,GAAD,OAjBtC,SAAsBA,GAClBjB,EAAciB,EAAEC,cAAcZ,OAgBWa,CAAaF,IARtC,SAUST,EAAMH,MATFe,yBC4KtBzB,mBA/Lf,SAAgBC,GACZ,IA8HIyB,EA9HJ,EAAgCvB,qBAAhC,mBAAOwB,EAAP,KAAiBC,EAAjB,KACA,EAAwBzB,oBAAS,GAAjC,mBAAO0B,EAAP,KAAaC,EAAb,KACA,EAA8B3B,oBAAS,GAAvC,mBACA,GADA,UACgCA,sBAAhC,mBAAO4B,EAAP,KAAiBC,EAAjB,KAEA,EAAoC7B,qBAApC,mBANmB,4CAoBnB,kCAAA8B,EAAA,6DACIC,QAAQC,IAAI,aACNC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eANtC,SAS2BC,MAAM,mBAAoBL,GATrD,WAUwB,KADdM,EATV,QAUiBC,GAVjB,gBAWQT,QAAQC,IAAI,eAAgBO,GAXpC,wCAa2BA,EAASE,OAbpC,QAacC,EAbd,OAcQN,IAAOO,IAAI,gBAAX,gBAAqCD,EAAKE,MAEtCpB,EACAkB,EAAKlB,SAASqB,OAAO,GAAGC,cACxBJ,EAAKlB,SAASuB,MAAM,GAAGC,cAC3BvB,EAAYD,GAnBpB,6CApBmB,kEAgDnB,gCAAAM,EAAA,6DACUG,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,qBAAsBL,GARvD,WASwB,KADdM,EARV,QASiBC,GATjB,gBAUQT,QAAQC,IAAI,gBAAiBO,GAVrC,wCAY2BA,EAASE,OAZpC,QAYcC,EAZd,OAaQN,IAAOa,OAAO,iBACdlB,QAAQC,IAAI,oBAAqBU,GACjC5C,EAAMoD,QAAQC,KAAK,KACnBrD,EAAMsD,WAAU,GAChBzB,GAAQ,GACRF,EAAY,IAlBpB,6CAhDmB,kEAsEnB,oCAAAK,EAAA,sEAE4BQ,MAAM,mIAFlC,WAKyB,KAHfe,EAFV,QAKkBb,GALlB,gBAMQT,QAAQC,IAAI,SAAUqB,GAN9B,uCAQ2BA,EAAUZ,OARrC,OAQcC,EARd,OASQX,QAAQC,IAAI,UAAWU,GACvBY,EAAcZ,EAAKa,MAAMC,gBAAgB/C,KAAI,SAACgD,GAC1C,OAAOA,EAAQC,UAX3B,yBAe4BpB,MAAM,iIAflC,YAkByB,KAHfqB,EAfV,QAkBkBnB,GAlBlB,iBAmBQT,QAAQC,IAAI,SAAU2B,GAnB9B,yCAqB2BA,EAAUlB,OArBrC,QAqBcC,EArBd,OAsBQX,QAAQC,IAAI,UAAWU,GACvBA,EAAKa,MAAMC,gBAAgBI,SAAQ,SAACH,GAChC,OAAOH,EAAYH,KAAKM,EAAQC,WAIhC7B,EADAD,EACY,GAAD,mBAAKA,GAAL,CAAe0B,IAEdA,GA9BxB,6CAtEmB,sBA2HnB,OArHA,UAEAO,qBAAU,YARS,mCASfC,KACD,IAEHD,qBAAU,cAEP,CAACjC,IAEJiC,qBAAU,YAhBS,mCAiBfE,KACD,CAACvC,EAAU1B,IAyGTA,EAAMkE,YAMPzC,EADAzB,EAAMmE,QAAUnE,EAAMoE,QACb,cAAC,EAAD,IAEA,GAGbnC,QAAQC,IAAIJ,GAGR,sBAAKtB,UAAU,mBAAf,UACI,sBACIA,UAAU,iBACVQ,GAAIhB,EAAMoE,QAAU,GAAK,gBACzBC,QAtBZ,WACIrE,EAAMoD,QAAQC,KAAK,gBAkBf,UAKI,oBAAI7C,UAAU,eAAd,sBACA,qBAAK8D,IAAKC,EAAMC,IAAI,aAAahE,UAAU,mBAE9CR,EAAMmE,QAAUzC,EACb,qCACI,qBACI2C,QAAS,kBAAMxC,GAASD,IACxB,gBAAc,wBACd,gBAAeA,EAHnB,SAKI,sBAAKpB,UAAU,wBAAf,UACI,mBAAGA,UAAU,kBAAb,SAAgCkB,IAChC,sBAAKlB,UAAU,6BAAf,UACK,IACD,qBACI8D,IAAKG,EACLD,IAAI,GACJhE,UAAU,qBACX,YAIf,cAACkE,EAAA,EAAD,CAAUC,GAAI/C,EAAd,SACI,sBAAKpB,UAAU,uBAAf,UACI,wBACIA,UAAU,0BACV6D,QA9H5B,WACIrE,EAAMoD,QAAQC,KAAK,gBACnBxB,GAAQ,IA0HY,qBAMA,wBAAQrB,UAAU,uBAAuB6D,QA7DjE,WACI,IAAIxD,EAAQ+D,KAAKC,MAAMD,KAAKE,SAAWhD,EAASiD,QAChD9C,QAAQC,IAAIrB,GACZ,IAAIiE,EAASE,OAAOlD,EAASjB,IAC7BoE,OAAO5E,SAAS6E,KAAhB,qDAAmEJ,IAyD/C,mBACA,wBACItE,UAAU,yBACV6D,QAhLT,2CA8KK,4BAUZ,IAEH5C,MA9DE,M,oBChIA,SAAS0D,EAAanF,GAEjC,MAAwBE,mBAAS,CAC7BwB,SAAU,GACV0D,MAAO,GACPC,UAAW,GACXC,UAAW,KAJf,mBAAO1C,EAAP,KAAa2C,EAAb,KAWA,SAAShE,EAAaF,GAClB,MAAoBA,EAAEmE,OAAjB/E,EAAL,EAAKA,KAAMC,EAAX,EAAWA,MACP+E,EAAW,2BAAO7C,GAAP,kBAAcnC,EAAOC,IACpC6E,EAAQE,GAhB4B,4CAmBzC,WAA4BpE,GAA5B,mBAAAW,EAAA,6DACIX,EAAEqE,iBAEKvD,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgBC,IAAOC,IAAI,cAE/BoD,KAAMC,KAAKC,UAAUjD,IAT9B,SAW4BJ,MAAM,2BAA4BL,GAX9D,WAYyB,KADdM,EAXX,QAYkBC,GAZlB,wDAc4BD,EAASE,OAdrC,QAceC,EAdf,OAeSN,IAAOO,IAAI,gBAAX,gBAAqCD,EAAKE,MAC1C9C,EAAMsD,WAAU,GAhBzB,6CAnByC,sBAwCxC,OA/BAS,qBAAW,WACP/D,EAAM8F,eAAc,KACrB,KA6BkB,IAAjB9F,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,gBAIpB,qBAAKN,UAAU,+BAAf,SACI,qBAAKA,UAAU,+BAAf,SAEA,uBAAMA,UAAU,iCAAiCuF,SAhDjB,4CAgDhC,UACA,sBAAKvF,UAAU,uBAAf,UACA,sBAAKA,UAAU,aAAf,UACA,uBAAOwF,QAAQ,WAAWxF,UAAU,qCAApC,uBACI,uBAAOS,KAAK,OAAOT,UAAU,eAAeC,KAAK,WAAWO,GAAG,WAAWiF,YAAY,mBAAmBvF,MAAOkC,EAAKlB,SAAUN,SAAUG,OAE7I,sBAAKf,UAAU,aAAf,UACA,uBAAOwF,QAAQ,QAAQxF,UAAU,qCAAjC,oBACI,uBAAOS,KAAK,QAAQT,UAAU,eAAeC,KAAK,QAAQO,GAAG,QAAQiF,YAAY,gBAAgBvF,MAAOkC,EAAKwC,MAAOhE,SAAUG,UAGnI,sBAAKf,UAAU,uBAAf,UACA,sBAAKA,UAAU,aAAf,UACC,uBAAOwF,QAAQ,YAAYxF,UAAU,qCAArC,uBACI,uBAAOS,KAAK,WAAWT,UAAU,eAAeC,KAAK,YAAYO,GAAG,YAAYiF,YAAY,mBAAmBvF,MAAOkC,EAAKyC,UAAWjE,SAAUG,OAEpJ,sBAAKf,UAAU,aAAf,UACA,uBAAOwF,QAAQ,YAAYxF,UAAU,qCAArC,+BACI,uBAAOS,KAAK,WAAWT,UAAU,eAAeC,KAAK,YAAYO,GAAG,YAAYiF,YAAY,qBAAqBvF,MAAOkC,EAAK0C,UAAWlE,SAAUG,UAItJ,wBAAQf,UAAU,4BAAlB,6B,MCDGT,mBArEf,SAAeC,GAEX,MAAwBE,mBAAS,CAC7BwB,SAAU,GACVwE,SAAU,KAFd,mBAAOtD,EAAP,KAAa2C,EAAb,KASA,SAAShE,EAAaF,GAClB,MAAoBA,EAAEmE,OAAjB/E,EAAL,EAAKA,KAAMC,EAAX,EAAWA,MACP+E,EAAW,2BAAO7C,GAAP,kBAAcnC,EAAOC,IACpC6E,EAAQE,GAdM,4CAiBlB,WAA4BpE,GAA5B,mBAAAW,EAAA,6DACIX,EAAEqE,iBAEIvD,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAUjD,IAT7B,SAW2BJ,MAAM,oBAAqBL,GAXtD,WAYwB,KADdM,EAXV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,eAAgBO,GAbpC,wCAe2BA,EAASE,OAfpC,QAecC,EAfd,OAgBQN,IAAOO,IAAI,gBAAX,gBAAqCD,EAAKE,MAC1C9C,EAAMsD,WAAU,GAjBxB,6CAjBkB,sBA2ClB,OApCAS,qBAAW,WACP/D,EAAM8F,eAAc,KACrB,KAkCkB,IAAjB9F,EAAMmE,OACA,cAAC,IAAD,CAAUrD,GAAG,gBAInB,qBAAKN,UAAU,wBAAf,SACI,qBAAKA,UAAU,wBAAf,SACA,uBAAM2F,OAAO,GAAG3F,UAAU,0BAA0BuF,SAlD1C,4CAkDV,UACI,sBAAKvF,UAAU,aAAf,UACI,uBAAOwF,QAAQ,WAAWxF,UAAU,yBAApC,uBACA,uBAAOA,UAAU,eAAeS,KAAK,OAAOD,GAAG,WAAWP,KAAK,WAAWC,MAAOkC,EAAKlB,SAAUuE,YAAY,mBAAmB7E,SAAUG,OAE7I,sBAAKf,UAAU,aAAf,UACI,uBAAOwF,QAAQ,WAAWxF,UAAU,8BAApC,uBACA,uBAAOA,UAAU,eAAeS,KAAK,WAAWD,GAAG,WAAWP,KAAK,WAAWC,MAAOkC,EAAKsD,SAAUD,YAAY,mBAAmB7E,SAAUG,OAEjJ,oBAAGf,UAAU,qBAAb,8BAAmD,wBAAQS,KAAK,SAAST,UAAU,oBAAoB6D,QApBnH,WACIrE,EAAMoD,QAAQC,KAAK,kBAmBwC,wBACnD,wBAAQ7C,UAAU,yBAAlB,6B,MC5DD,SAAS4F,EAAOpG,GAK3B,OAJA+D,qBAAU,WACN/D,EAAM8F,eAAc,KACrB,IAEC9F,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,gBAIpB,qBAAKN,UAAU,mBAAf,SAoCI,qBAAKA,UAAU,kCAAf,SACI,qBAAKA,UAAU,mGAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAK6F,MAAM,oCAAX,UACI,qBAAI7F,UAAU,mDAAd,uBAEI,uBAAMA,UAAU,kBAAhB,qBAEI,qBAAK8D,IAAKC,EAAMC,IAAI,aAAahE,UAAU,kCAGnD,mBAAGA,UAAU,WAAb,iKAMA,sBAAKA,UAAU,uBAAf,UACA,cAAC,IAAD,CAASM,GAAG,gBAAgBN,UAAU,iBAAtC,SACI,mBACI0E,KAAK,IACL1E,UAAU,kCAFd,wBAOA,cAAC,IAAD,CAASM,GAAG,SAASN,UAAU,iBAA/B,SACA,mBACI0E,KAAK,IACL1E,UAAU,6BAFd,mC,kBCnCjBT,mBAtCf,SAAoBC,GAoBhB,OACI,sBAAKQ,UAAU,wBAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,cAAC,IAAD,CAAgB6D,QAhB5B,WACIrE,EAAMsG,qBAAqBtG,EAAMgB,SAiB7B,sBAAKR,UAAU,6BAA6B6D,QAtBpD,SAA+BhD,GAC3BrB,EAAMoD,QAAQC,KAAd,sBAAkCrD,EAAMgB,MAqBpC,UACI,oBAAIR,UAAU,sBAAd,SAAqCR,EAAMS,KAAKuC,gBAChD,mBAAGxC,UAAU,mBAAb,SAhBZ,SAAoB+F,GAChB,IAAMC,EAAYD,EAAKhG,MAAM,KAAK,GAAGA,MAAM,KACrCkG,EAAOD,EAAUE,QAEvB,OADAF,EAAUnD,KAAKoD,GACRD,EAAUG,KAAK,KAYmBC,CAAW5G,EAAM6G,cAClD,mBAEIrG,UAAU,sC,iBC0CfT,mBAxEf,SAAuBC,GACnB,MAAwBE,mBAAS,CAC7BO,KAAM,KADV,mBAAOmC,EAAP,KAAa2C,EAAb,KAD0B,SAWXuB,EAXW,8EAW1B,WAAkCzF,GAAlC,mBAAAW,EAAA,6DAEUG,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAUjD,IAR7B,SAU2BJ,MAAM,gBAAiBL,GAVlD,WAWwB,KADdM,EAVV,QAWiBC,GAXjB,gBAYQT,QAAQC,IAAI,qBAAsBO,GAZ1C,wCAc2BA,EAASE,OAdpC,QAccC,EAdd,OAeQX,QAAQC,IAAI,sBAAuBU,GAEnC5C,EAAMoD,QAAQC,KAAd,WAAuBT,EAAK5B,GAA5B,mBAjBR,6CAX0B,sBAuC1B,OACI,sBAAKR,UAAU,wBAAf,UACI,cAACuG,EAAA,EAAMC,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACF,EAAA,EAAMG,MAAP,qCAEA,cAACH,EAAA,EAAMI,KAAP,UACI,uBACIlG,KAAK,OACLD,GAAG,OACHP,KAAK,OACLC,MAAOkC,EAAI,KACXxB,SA7CpB,SAAsBC,GAClB,MAAsBA,EAAEmE,OAAlB/E,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MACR+E,EAAW,2BAAQ7C,GAAR,kBAAenC,EAAOC,IACrC6E,EAAQE,IA2CQjF,UAAU,eACV4G,WAnBpB,SAAwB/F,GACV,SAAPA,EAAEyB,KACDgE,SAoBI,eAACC,EAAA,EAAMM,OAAP,WACI,cAACC,EAAA,EAAD,CAAQpG,QAAQ,YAAYmD,QAASrE,EAAMuH,YAA3C,mBAGA,cAACD,EAAA,EAAD,CACIpG,QAAQ,kBACRD,KAAK,SACLoD,QAASyC,EAHb,mC,MCsFL/G,mBA9If,SAAoBC,GAChB,MAA4CE,mBAAS,IAArD,mBAAOsH,EAAP,KAAuBC,EAAvB,KACA,EAAwBvH,oBAAS,GAAjC,mBAAOwH,EAAP,KAAaC,EAAb,KACA,EAAgCzH,qBAAhC,mBAAOwB,EAAP,KAAiBC,EAAjB,KAEM4F,EAAc,kBAAMI,GAAQ,IALX,4CAkBvB,kCAAA3F,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,mBAAoBL,GARrD,WASwB,KADdM,EARV,QASiBC,GATjB,gBAUQT,QAAQC,IAAI,eAAgBO,GAVpC,wCAY2BA,EAASE,OAZpC,QAYcC,EAZd,OAaQN,IAAOO,IAAI,gBAAX,gBAAqCD,EAAKE,MAEtCpB,EACAkB,EAAKlB,SAASqB,OAAO,GAAGC,cACxBJ,EAAKlB,SAASuB,MAAM,GAAGC,cAC3BvB,EAAYD,GAlBpB,6CAlBuB,kEAyCvB,gCAAAM,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,gBAAiBL,GARlD,WASwB,KADdM,EARV,QASiBC,GATjB,gBAUQT,QAAQC,IAAI,mBAAoBO,GAVxC,wCAY2BA,EAASE,OAZpC,QAYcC,EAZd,OAaQX,QAAQC,IAAI,sBAAuBU,GACnCX,QAAQC,IAAI,SAAUU,GACtBA,EAAKgF,MAAK,SAAC5F,EAAE6F,GAAH,OAASA,EAAEhB,WAAW7E,EAAE6E,cAClC5E,QAAQC,IAAI,QAASU,GACrBA,EAAKgF,MAAK,SAACE,EAAOC,GACd,OAAOA,EAAMlB,WAAWtG,MAAM,KAAK,GAAGyH,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAMF,EAAMjB,WAAWtG,MAAM,KAAK,GAAGyH,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,OAEjPP,EAAkB7E,GApB1B,6CAzCuB,sBAiEvB,GAzDAmB,qBAAU,YARa,mCASnBkE,GACAjI,EAAMkI,YAAW,GACjBlI,EAAM8F,eAAc,KACrB,IAEH/B,qBAAU,YAda,mCAenBE,KACD,CAACvC,EAAU1B,KAiDO,IAAjBA,EAAMmE,OACN,OAAO,cAAC,IAAD,CAAUrD,GAAG,MAlED,SAsERwF,EAtEQ,8EAsEvB,WAAoCtF,GAApC,uBAAAgB,EAAA,6DACQnB,EAAQ2G,EAAeW,WAAU,SAACC,GAAD,OAAYA,EAAOpH,KAAOA,MAC3DqH,EAFR,YAEgCb,IACVc,OAAOzH,EAAO,GAChC4G,EAAkBY,GAEZlG,EAAU,CACZC,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eAVtC,SAa2BC,MAAM,gBAAD,OAAiBxB,EAAjB,KAAwBmB,GAbxD,WAcwB,KADdM,EAbV,QAciBC,GAdjB,iBAeQT,QAAQC,IAAI,mBAAoBO,GAfxC,yCAiB2BA,EAASE,OAjBpC,QAiBcC,EAjBd,OAkBQX,QAAQC,IAAI,sBAAuBU,GAlB3C,6CAtEuB,sBAgGvB,OAJK5C,EAAMmE,QACPnE,EAAMoD,QAAQC,KAAK,KAInB,qBAAK7C,UAAU,8BAAf,SACI,qBAAKA,UAAU,8BAAf,SACI,sBAAKA,UAAU,gCAAf,UACI,oBAAIA,UAAU,2BAAd,SACKkB,EACKA,EAASsB,cAAgB,eACzB,cAEV,wBACIxC,UAAU,8BACV6D,QArGD,kBAAMsD,GAAQ,IAmGjB,kCAMA,cAACZ,EAAA,EAAD,CAAOW,KAAMA,EAAMa,OAAQhB,EAA3B,SACI,cAAC,EAAD,CAAeA,YAAaA,MAEL,IAA1BC,EAAezC,OACZ,GAEA,qCACI,oBAAIvE,UAAU,yBAAd,gCAGA,mBAAGA,UAAU,8BAAb,sDAKR,qBAAKA,UAAU,6BAAf,SACKgH,EAAe7G,KAAI,SAAC6H,GACjB,OACI,cAAC,EAAD,2BACQA,GADR,IAEIlC,qBAAsBA,oB,gDC8B3CvG,mBA9Jf,SAAqBC,GACjB,MAA0BE,mBAAS,CAAC,IAAK,IAAK,MAA9C,mBAAOuI,EAAP,KAAcC,EAAd,KADwB,4CAOxB,gCAAA1G,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,gBAAD,OACRxC,EAAM2I,aADE,KAExBxG,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,uBAAwBO,GAb5C,wCAe2BA,EAASE,OAfpC,QAgB2B,QADbC,EAfd,QAgBiB6F,OACLC,EAAS9F,EAAK6F,OAElBxG,QAAQC,IAAI,wBAAyBU,GAnB7C,6CAPwB,+BAiETgG,EAjES,8EAiExB,WAAiCC,GAAjC,qBAAA7G,EAAA,6DACQ8G,EADR,YAC2BL,IACVH,OAAOO,EAAK,GAEnB1G,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAU,CAAE4C,MAAOK,KAVtC,SAY2BtG,MAAM,gBAAD,OACRxC,EAAM2I,aADE,KAExBxG,GAdR,WAgBwB,KAJdM,EAZV,QAgBiBC,GAhBjB,iBAiBQT,QAAQC,IAAI,sBAAuBO,GAjB3C,yCAmB2BA,EAASE,OAnBpC,QAmBcC,EAnBd,OAoBQ8F,EAAS9F,EAAK6F,OACdxG,QAAQC,IAAI,uBAAwBU,GArB5C,6CAjEwB,kEAuGxB,gCAAAZ,EAAA,6DACUG,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAU,CAAE4C,MAAOA,KAPtC,SAS2BjG,MAAM,gBAAD,OACRxC,EAAM2I,aADE,KAExBxG,GAXR,WAawB,KAJdM,EATV,QAaiBC,GAbjB,gBAcQT,QAAQC,IAAI,qBAAsBO,GAd1C,wCAgB2BA,EAASE,OAhBpC,QAgBcC,EAhBd,OAiBQ8F,EAAS9F,EAAK6F,OACdxG,QAAQC,IAAI,sBAAuBU,GAlB3C,6CAvGwB,sBAmIxB,OAhIAmB,qBAAU,YAHc,mCAIpBgF,KACD,IA+HC,sBAAKvI,UAAU,UAAf,UACA,oBAAIA,UAAU,sDAAd,mBACI,sBAAKA,UAAU,MAAf,UACI,cAAC,IAAD,CACIA,UAAU,uBACV6D,QAZhB,WACI,IAAIyE,EAAY,YAAOL,GACvBK,EAAazF,KAAK,KAClBqF,EAASI,MAWD,cAAC,IAAD,CACItI,UAAU,wBACV6D,QA7IQ,gDAgJfoE,EAAM9H,KAAI,SAACqI,EAAMH,GAAP,OACP,sBAAKrI,UAAU,wBAAf,UACI,0BACIA,UAAU,QACVY,SAAU,SAACC,GAAD,OAhH9B,SAAsBA,EAAGwH,GACrB,IAAIC,EAAY,YAAOL,GACvBK,EAAaD,GAAOxH,EAAEmE,OAAO9E,MAC7BgI,EAASI,GACT7G,QAAQC,IAAIuG,GA4GqBlH,CAAaF,EAAGwH,IACjCnI,MAAOsI,IAEX,cAAC,IAAD,CAAgBxI,UAAU,0BAA0B6D,QAASuE,gB,MC7BlEK,MAhIf,SAA0BjJ,GACtB,MAAsCE,qBAAtC,mBAAOgJ,EAAP,KAAoBC,EAApB,KAD6B,4CAa7B,8BAAAnH,EAAA,sEAC2BQ,MAAM,uDAAD,OAC+BxC,EAAMoJ,WAAW/I,SAASgJ,SAASC,QACtF,GAFoB,gBAGftJ,EAAMoJ,WAAW/I,SAASkJ,UAAUD,QACzC,GAJoB,4DADhC,WAQwB,KAPd7G,EADV,QAQiBC,GARjB,gBASQT,QAAQC,IAAI,SAAUO,GAT9B,uCAWyBA,EAASE,OAXlC,OAWYC,EAXZ,OAaQX,QAAQC,IAAI,UAAWU,GACvBuG,EAAevG,GAdvB,6CAb6B,sBA+B7B,OAxBAmB,qBAAU,WAC2B,OAA9B/D,EAAMoJ,WAAW/I,UARK,mCASrBmJ,KAEL,IAoB8B,OAA9BxJ,EAAMoJ,WAAW/I,SACT,qBAGN6I,GASS,IAAIO,KAAmC,IAA9BP,EAAYQ,QAAQC,SAC9B,IAAIF,KAAkC,IAA7BP,EAAYQ,QAAQE,QAUtC,sBAAKpJ,UAAU,0BAAf,UACI,oBAAIA,UAAU,iDAAd,6BAGA,qBAAKA,UAAU,0BAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,8BACI,oBAAGA,UAAU,uBAAb,UACK0I,EAAYQ,QAAQG,KAAKP,QAAQ,GADtC,YAIJ,sBAAK9I,UAAU,uCAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,mBAAGA,UAAU,4BAAb,wBAEK,IACL,oBAAGA,UAAU,yBAAb,UACK0I,EAAYQ,QAAQI,UAAUR,QAAQ,GAD3C,aAIJ,sBAAK9I,UAAU,mCAAf,UACI,mBAAGA,UAAU,4BAAb,yBAEK,IACL,oBAAGA,UAAU,0BAAb,UACK0I,EAAYQ,QAAQK,WAAWT,QAAQ,GAD5C,gBAOR,sBAAK9I,UAAU,sCAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,mBAAGA,UAAU,2BAAb,uBAEK,IACL,oBAAGA,UAAU,mBAAb,UACK0I,EAAYQ,QAAQM,SAASV,QAAQ,GAD1C,UAIJ,sBAAK9I,UAAU,6BAAf,UACI,mBAAGA,UAAU,sBAAb,kBAA4C,IAC5C,mBAAGA,UAAU,cAAb,SACK0I,EAAYQ,QAAQO,IAAIX,QAAQ,WAK7C,qBAAK9I,UAAU,yBAAf,SACK0I,EAAYQ,QAAQQ,QAAQvJ,KAAI,SAACuJ,GAC9B,OACI,qCACI,qBACI1J,UAAU,eACV8D,IAAG,2CAAsC4F,EAAQC,KAA9C,aAEP,oBAAG3J,UAAU,eAAb,UACK,KAhEhB4J,EAiE4BF,EAAQG,YAhE9CD,EAAIpC,QAAQ,UAAU,SAAUsC,GACnC,OAAOA,EAAIvH,OAAO,GAAGC,cAAgBsH,EAAIC,OAAO,GAAGrH,wBAF3D,IAAqBkH,OAuEL,iCAlFR,cAACI,EAAA,EAAD,CACIC,UAAU,SACVvJ,QAAQ,UACRV,UAAU,2BCmiBXT,mBAvkBf,SAAsBC,GAClB,MAAoCE,qBAApC,mBAAOkJ,EAAP,KAAmBsB,EAAnB,KAEA,EAAkCxK,oBAAS,GAA3C,mBAAOyK,EAAP,KAAkBC,EAAlB,KACA,EAA4B1K,mBAAS,IAArC,mBAAO2K,EAAP,KAAeC,EAAf,KACA,EAAoC5K,oBAAS,GAA7C,mBAAO6K,EAAP,KAAmBC,EAAnB,KAGA,EAAoC9K,oBAAS,GAA7C,mBAAO+K,EAAP,KAAmBC,EAAnB,KACA,EAAwBhL,oBAAS,GAAjC,mBAAOwH,EAAP,KAAaC,EAAb,KATyB,4CAsBzB,gCAAA3F,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,mBAAoBO,GAbxC,wCAe2BA,EAASE,OAfpC,QAecC,EAfd,OAgBQ8H,EAAc9H,GAhBtB,6CAtByB,kEAyEzB,gCAAAZ,EAAA,6DACUG,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAU,CAAEpF,KAAMoK,KAPrC,SAS2BrI,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAXR,WAawB,KAJdM,EATV,QAaiBC,GAbjB,gBAcQT,QAAQC,IAAI,gBAAiBO,GAdrC,wCAgB2BA,EAASE,OAhBpC,QAgBcC,EAhBd,OAiBQX,QAAQC,IAAI,iBAAkBU,GAC9BgI,GAAa,GACbF,EAAc,2BAAKtB,GAAN,kBAAmB,OAASyB,KAnBjD,6CAzEyB,sBA4GzB,SAASQ,IACLrL,EAAMoD,QAAQC,KAAd,WAAuBrD,EAAMmL,MAAMC,OAAOhD,OAA1C,eAUJ,OAtGArE,qBAAU,YAjBe,mCAkBrBuH,GACAtL,EAAMkI,eACP,KAmGkB,IAAjBlI,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,MAInBsI,EAYD,sBAAK5I,UAAU,gCAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,sBAAKA,UAAU,qCAAqCQ,GAAI0G,EAAO,OAAS,GAAxE,UACI,qBAAKlH,UAAU,uCACdmK,EACG,gCACI,oBAAInK,UAAU,+BAAd,iCACA,sBAAKA,UAAU,iCAAf,UACI,uBACIS,KAAK,OACLP,MAAOmK,EACPzJ,SA7FhC,SAAsBC,GAClByJ,EAAUzJ,EAAEmE,OAAO9E,OACnBuB,QAAQC,IAAI2I,IA4FgBrK,UAAU,4CAEd,wBACI6D,QAvJP,2CAwJO7D,UAAU,2CAFd,oBAMA,wBACIA,UAAU,gDACV6D,QA9DhC,WACIuG,GAAa,IA2DW,qBASR,qBAAIpK,UAAU,4BAAd,UACK4I,EAAW3I,KAAKuC,cAAe,IAChC,cAAC,IAAD,CACIxC,UAAU,yBACV6D,QAvH5B,WACIuG,GAAa,SA0HD,oBAAGpK,UAAU,qBAAb,sBA7DhB,SAAoB+F,GAChB,IAAMC,EAAYD,EAAKhG,MAAM,KAAK,GAAGA,MAAM,KACrCkG,EAAOD,EAAUE,QAEvB,OADAF,EAAUnD,KAAKoD,GACRD,EAAUG,KAAK,KA0DIC,CAAWwC,EAAWvC,eAEpC,sBAAKrG,UAAU,+BAAf,UACI,qBAAKA,UAAU,6BAAf,SACI,oBAAGA,UAAU,+BAAb,qEAEiB,IACb,wBACIA,UAAU,4BACV6D,QAnFhC,WACIrE,EAAMoD,QAAQC,KAAd,WAAuBrD,EAAMmL,MAAMC,OAAOhD,OAA1C,eAgFwB,kBAHJ,SAYJ,sBAAK5H,UAAU,gCAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,cAAC,EAAD,CAAgBmI,aAAcS,EAAWpI,OAE7C,qBAAKR,UAAU,kCAAf,SACI,cAAC,EAAD,CAAkB4I,WAAYA,SAGtC,sBAAK5I,UAAU,iCAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,qBAAIA,UAAU,4DAAd,iBACS,IACL,cAAC,IAAD,CACIA,UAAU,yBACV6D,QA9JpC,WACIrE,EAAMoD,QAAQC,KAAd,WAAuBrD,EAAMmL,MAAMC,OAAOhD,OAA1C,iBAgKwB,sBAAK5H,UAAU,kCAAf,UACI,8BACI,yBAAQA,UAAU,2BAAlB,6BACqB,OAEQ,OAA5B4I,EAAWmC,aACN,2BACAnC,EAAWmC,aACNC,mBAEf,8BACI,yBAAQhL,UAAU,2BAAlB,6BACqB,OAEQ,OAA5B4I,EAAWmC,aACN,2BACAnC,EAAWmC,aACNE,yBAcvB,sBAAKjL,UAAU,sCAAf,UACI,qBAAIA,UAAU,8DAAd,mBACW,IACP,cAAC,IAAD,CACIA,UAAU,yBACV6D,QA3IpC,WACIrE,EAAMoD,QAAQC,KAAd,WAAuBrD,EAAMmL,MAAMC,OAAOhD,OAA1C,kBA6IwB,sBAAK5H,UAAU,iCAAf,UACA,oBAAGA,UAAU,4BAAb,UACC,MADD,+HAGsD,IAC9C,iCACI,mBACI0E,KAAMkE,EAAWsC,OACjBC,UAAQ,EACRnL,UAAU,wBAHd,mBAMK,UAGb,qBAAKA,UAAU,gCAAf,SACI,qBACI8D,IAAK8E,EAAWsC,OAChBlL,UAAU,6CAOlC,sBAAKA,UAAU,mCAAf,UACI,qBACIA,UAAU,iCACVQ,GAAG,kCAFP,uBAIe,IACX,cAAC,IAAD,CACIR,UAAU,+BACV6D,QA7O5B,WACIrE,EAAMoD,QAAQC,KAAd,WAAuBrD,EAAMmL,MAAMC,OAAOhD,OAA1C,uBApCW,EAAC,GAmRYzH,KAAI,SAACiL,EAAG/C,GAAJ,OACR,yBAEIrI,UAAU,yCACV6D,QAAS,kBAlRjC6G,EAkRkDU,GAjRlDjE,GAAQ,QACRqD,GAAc,IA6QM,kCAMkB,kBAANY,GAAP,gBACYA,EAAErL,MAAM,KAAK,MANrBsI,MASb,qBAAKrI,UAAU,yCAAf,SACMkH,EAmHI,GAlHA0B,EAAWyC,mBAAmBlL,KAC1B,SAACmL,GACG,OACI,sBAAKtL,UAAU,0BAAf,UACI,oBAAIA,UAAU,+BAAd,SACKsL,EAAUrL,OAEf,8BACI,sBAAMD,UAAU,yBAAhB,yBAEQ,IACPsL,EAAUC,cAEf,8BACI,sBAAMvL,UAAU,yBAAhB,gCAEQ,IACPsL,EAAUE,eAEf,8BACI,sBAAMxL,UAAU,yBAAhB,2BAEQ,IAER,OADCsL,EAAUG,SAEL,8BAEA,OADAH,EAAUG,SAEV,WACA,iBAEV,8BACI,sBAAMzL,UAAU,yBAAhB,4BAEQ,IACPsL,EAAUI,cACL,MACA,QAEV,8BACI,sBAAM1L,UAAU,yBAAhB,+BAEQ,IACPsL,EAAUK,iBACL,MACA,QAEV,8BACI,sBAAM3L,UAAU,yBAAhB,yBAEQ,IAER,OADCsL,EAAUM,WAEL,SAEA,OADAN,EAAUM,WAEV,WACA,eAEV,8BACI,sBAAM5L,UAAU,yBAAhB,0BAEQ,IAER,OADCsL,EAAUO,YAEL,cACA,iBAEV,8BACI,uBAAM7L,UAAU,yBAAhB,UACA,cAAC,IAAD,CACdA,UAAU,yBACV6D,QAASgH,IAHK,kBAKQ,IAER,OADCjC,EAAWkD,UAEN,QAIMC,IAHNnD,EACKkD,UACDR,EAAUrL,MAEd,IACA2I,EAAWkD,UACPR,EAAUrL,MACZE,KAAI,SAAC6H,GACH,IAAIgE,EACA,GACJ,IAAK,IAAMC,KAAQjE,EACfgE,EAAsBnJ,KAClBoJ,GAGR,OAAOD,EAAsB7L,KACzB,SACI+L,GAEA,OACI,8BACI,4BAEQA,+BAmB5E,qBAAKlM,UAAU,8BAAf,SACI,eAACuG,EAAA,EAAD,CACIW,KAAMA,EACNuD,WAAYA,EACZ1C,OAAQ,kBAAMZ,GAAQ,IACtB3G,GAAI+J,EAAa,SAAW,GAJhC,UAMI,eAAChE,EAAA,EAAMC,OAAP,CAAcC,aAAW,EAAzB,UACI,cAACF,EAAA,EAAMG,MAAP,8BACA,cAACI,EAAA,EAAD,CACI9G,UAAU,2CACV6D,QA3WxB,WACI2G,GAAc,GACd2B,YAAW,WALX1H,OAAO2H,WAQPD,YAAW,WACP3B,GAAc,OAmWF,sCAOJ,cAACjE,EAAA,EAAMI,KAAP,UACI,qBAAK3G,UAAU,oBAAf,SACI,wBAAOA,UAAU,gBAAjB,UACI,gCACI,+BACI,gDACA,8CACA,+CACA,kDACA,4CACA,6CACA,2CACA,4CACA,kDAGR,gCAC8C,IAAzC4I,EAAWyC,mBAAmB9G,OACzB,GACAqE,EAAWyC,mBAAmBlL,KAC1B,SAACmL,GACG,OACI,+BACI,oBAAItL,UAAU,aAAd,SACI,iCAEQsL,EAAUrL,SAItB,oBAAID,UAAU,aAAd,SAEI,OADCsL,EAAUG,SAEL,8BAEA,OADAH,EAAUG,SAEV,WACA,gBAEV,qBAAIzL,UAAU,aAAd,UACK,IACAsL,EAAUI,cACL,MACA,QAEV,oBAAI1L,UAAU,aAAd,SACKsL,EAAUK,iBACL,MACA,OAEV,oBAAI3L,UAAU,aAAd,SAEI,OADCsL,EAAUO,YAEL,cACA,gBAEV,oBAAI7L,UAAU,aAAd,SAEI,OADCsL,EAAUM,WAEL,SAEA,OADAN,EAAUM,WAEV,WACA,cAEV,qBAAI5L,UAAU,aAAd,UACI,sBAAMA,UAAU,qBAA2B,IAE3C,OADC4I,EAAWkD,gBAQNC,IALAnD,EACKkD,UACDR,EACKrL,MAJT,OAQA2I,EAAWkD,UACPR,EACKrL,MACPE,KACE,SACI6H,GAEA,IAAIgE,EACA,GACJ,IAAK,IAAMC,KAAQjE,EACfgE,EAAsBnJ,KAClBoJ,GAGR,OAAOD,EAAsB7L,KACzB,SACI+L,GAEA,OACI,4BAEQA,aAUtC,OADCZ,EAAUC,WAEP,oBAAIvL,UAAU,2CAAd,kBAIA,oBACIA,UAAU,iBACVQ,GAAG,iBAFP,SAKQ8K,EAAUC,aAKtB,OADCD,EAAUE,YAEP,oBAAIxL,UAAU,aAAd,kBAIA,oBACIA,UAAU,aACVQ,GAAG,iBAFP,SAKQ8K,EAAUE,sBAShD,yCA/bpB,cAACxB,EAAA,EAAD,CACIC,UAAU,SACVvJ,QAAQ,UACRV,UAAU,6B,gBCgJXT,mBAnRf,SAAcC,GACV,IAAM6M,EAAcC,kBAAO,GAC3B,EAA4B5M,oBAAS,GAArC,mBAAe6M,GAAf,WACA,EAAwB7M,oBAAS,GAAjC,mBACA,GADA,UACwBA,mBAAS,CAC7Bc,GAAI,KACJwK,gBAAiB,GACjBC,gBAAiB,GACjBuB,WAAY,MAJhB,mBAAOC,EAAP,KAAaC,EAAb,KAMA,EAAsChN,oBAAS,GAA/C,mBAAOiN,EAAP,KAAoBC,EAApB,KACA,EAAsClN,mBAAS,CAC3CmJ,SAAU,GACVE,UAAW,KAFf,mBAAO8D,EAAP,KAAoBC,EAApB,KAKMC,EAAUT,mBAhBC,4CAuCjB,gCAAA9K,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,oBAAD,OACJyK,EAAKD,YACzB7K,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,SAAUO,GAb9B,wCAe2BA,EAASE,OAfpC,QAecC,EAfd,OAgBQX,QAAQC,IAAI,UAAWU,GACH,IAAhBA,EAAKmC,OACL9C,QAAQC,IAAI,0BAEZD,QAAQC,IAAI,uBAAwBU,GACpCsK,EAAQ,2BACDD,GADA,IAEHjM,GAAI4B,EAAK,GAAG5B,GACZwK,gBAAiB5I,EAAK,GAAG4I,gBACzBC,gBAAiB7I,EAAK,GAAG6I,oBAzBzC,4CAvCiB,oEAuEjB,gCAAAzJ,EAAA,6DAEIC,QAAQC,IAAI,cAAemL,GAErBlL,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAU,CAAEoH,KAAMA,EAAKjM,GAAIX,SAAUgN,KAVxD,SAY2B7K,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAdR,WAYUM,EAZV,QAgBkBC,GAhBlB,gBAiBQT,QAAQC,IAAI,oBAAqBO,GAjBzC,wCAmB2BA,EAASE,OAnBpC,QAmBcC,EAnBd,OAoBQX,QAAQC,IAAI,qBAAsBU,GAClC5C,EAAMoD,QAAQC,KAAd,WAAuBT,EAAK5B,GAA5B,iBArBR,4CAvEiB,wBA4GjB,OA1FA+C,qBAAU,WACN/D,EAAMkI,YAAW,KAClB,IAEHnE,qBAAU,YACsB,IAAxB8I,EAAYnD,QACZmD,EAAYnD,SAAU,IAxBb,mCA0BT8D,GACAJ,GAAe,GAEfT,YAAW,WAoEfY,EAAQ7D,QAAQ+D,eAAe,CAC3BC,SAAU,SACVC,MAAO,SACPC,OAAQ,YArEL,QAER,CAACX,EAAKD,aAuETL,YAAW,WACPI,GAAU,OAGO,IAAjB/M,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,MAIpB,qBAAKN,UAAU,uBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,qBACIA,UAAU,yBADd,SAII,qBAAKA,UAAU,eAAf,SAEI,oBAAGA,UAAU,mBAAb,UACI,kDADJ,sRAYR,qBACIA,UAAU,qBADd,SAGQ,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACI2B,QAxGhB,CACZ0L,IAAK,+BAwGuBC,cAAe,CACX,cACA,WACA,qBACA,2BACA,sBACA,uBAEJC,QAAS,YAUF,IAAD,gBATFC,cASE,GAREC,EAQF,KAPEC,EAOF,KANEC,EAMF,KALEC,EAKF,KAJEC,EAIF,KAHEC,EAGF,KADFC,EACE,EADFA,cAEAN,EAAWO,OACP,uGAEJ,IAAM7N,EAAM,IAAIuN,EAAI,CAChBO,QAAS,uBAGPC,EAAO,IAAIP,EAAQ,CACrBQ,UAAWJ,EACX5N,IAAKA,EACLiO,OAAQ,EAAE,KAAM,SAChBC,KAAM,KAGJC,EAAa,IAAIV,EAAa,CAChCP,IAAK,0FACLkB,UAAW,CAAC,YACZC,QAAS,KAEbrO,EAAIsO,IAAIH,EAAY,GAEpB,IAaII,EACAC,EAdEC,EAAS,IAAIf,EAAO,CACtBK,KAAMA,EACNW,mBAAmB,EACnBC,aAAc,SACVZ,EACAvM,GAGA,OADAA,EAAQqD,OAAO+J,MAAQ,KAChBb,EAAKc,KACRrN,EAAQqD,WAMpBkJ,EAAKe,GAAG,mBAAmB,SAACC,GACxB,IAAMrG,EACFqG,EAAMC,SAAStG,SACbE,EACFmG,EAAMC,SAASpG,UACbqG,EAAclB,EAAKmB,SACrB,IAAIvB,EAAM,CACNjF,WACAE,eAGR+D,EAAe,CACXjE,SAAUA,EACVE,UAAWA,IAEfmF,EAAKoB,QAAQF,GAAaG,MACtB,SAACC,IACGd,EACIc,EAAcC,QAAQ,GACjBC,QAAQC,WACRC,iBAGLjB,GAEAjC,EAAQ,CACJlM,GAAI,KACJgM,WACIkC,EACJ1D,gBAAiB,GACjBC,gBAAiB,KAErB0D,EAAaD,GAEbC,EAAaD,QAM7BR,EAAK2B,GAAGpB,IAAIG,EAAQ,sBAM5C,sBACI5O,UAAU,4BACVQ,GAAImM,EAAc,GAAK,OAF3B,UAII,sBAAK3M,UAAU,4BAAf,UACI,sBACIA,UAAU,oCACV8P,IAAK/C,EAFT,UAII,oBAAI/M,UAAU,kCAAd,mCAGA,4BAAIyM,EAAKzB,qBAEb,sBAAKhL,UAAU,oCAAf,UACI,oBAAIA,UAAU,kCAAd,mCAGA,4BAAIyM,EAAKxB,wBAGjB,wBACIzK,GAAG,gBACHR,UAAU,mBACV6D,QAzQH,2CAsQD,wC,YCrQL,SAASkM,EAAsBvQ,GAE1C,MAAgDE,oBAAS,GAAzD,mBACA,GADA,UAC8CA,oBAAS,IAAvD,6BAGA,OACI,sBAAKM,UAAU,gCAAf,UACKR,EAAMwQ,mBAAqB,qBACxBhQ,UAAU,oDACViQ,KAAK,QAFmB,6CAKnB,GAC4B,IAApCzQ,EAAM0Q,mBAAmB3L,OACtB,GAEA,oBAAIvE,UAAU,8BAAd,mCAIJ,qBAAKA,UAAU,qCAAf,cACkC+L,IAA7BvM,EAAM0Q,mBACD,GACA1Q,EAAM0Q,mBAAmB/P,KAAI,SAACmL,GAC1B,OACI9L,EAAM2Q,eAAeC,MACjB,SAACpI,GAAD,OAAaA,EAAQ/H,OAASqL,EAAUrL,QAKxC,qBACID,UAAU,6CADd,SAII,mBAAGA,UAAU,gDAAb,SACKsL,EAAUrL,QAHVe,eAUT,sBACIhB,UAAU,qBADd,UAII,mBAAGA,UAAU,0BAAb,SACKsL,EAAUrL,OAEf,wBACID,UAAU,mCACV6D,QAAS,kBACLrE,EAAM6Q,cAAc/E,EAAU9K,KAHtC,mBALKQ,uB,MCnD5B,SAASsP,EAAkB9Q,GACtC,OACI,sBAAKQ,UAAU,gCAAf,UACiC,IAAhCR,EAAM2Q,eAAe5L,OAAe,GAAK,oBAAIvE,UAAU,yBAAd,8BACtC,qBAAKA,UAAU,iCAAf,cAC0B+L,IAAzBvM,EAAM2Q,eACD,GACA3Q,EAAM2Q,eAAehQ,KAAI,SAACmL,GACtB,OAAQ,qCACH7J,QAAQC,IAAI,SAAS4J,GACtB,sBAAKtL,UAAU,iBAAf,UACI,mBAAGA,UAAU,sBAAb,SAAoCsL,EAAUrL,OAC9C,wBAAQD,UAAU,yCAAyC6D,QAAS,kBAAMrE,EAAM+Q,mBAAmBjF,EAAU9K,KAA7G,sBAFiCQ,0B,YCkYhDzB,mBAtYf,SAAoBC,GAEhB,MAAgDE,oBAAS,GAAzD,mBAAO8Q,EAAP,KAAyBC,EAAzB,KACA,EAA8C/Q,oBAAS,GAAvD,mBAEIgR,GAFJ,UAEkB,IACdC,EAAW,GAEf,EAAoCjR,mBAAS,CACzCO,KAAM,GACNwL,SAAU,GACVC,cAAe,GACfC,iBAAkB,GAClBC,WAAY,GACZC,YAAa,KANjB,mBAAO+E,EAAP,KAAmBC,EAAnB,KASA,EAAoDnR,mBAAS,IAA7D,mBAAOwQ,EAAP,KAA2BY,EAA3B,KACA,EAA4CpR,mBAAS,IAArD,mBAAOyQ,EAAP,KAAuBY,EAAvB,KACA,EAAkCrR,oBAAS,GAA3C,mBAAOsR,EAAP,KAAkBC,EAAlB,KACMC,EAAoB5E,mBACpB6E,EAAmB7E,mBArBF,4CAqCvB,gCAAA9K,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,iCAAkCO,GAbtD,wCAe2BA,EAASE,OAfpC,QAecC,EAfd,OAgBQ2O,EAAkB3O,EAAKiJ,oBAhB/B,6CArCuB,kEAyDvB,gCAAA7J,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,mBAAD,OAAoB0O,GAAe/O,GARnE,WASwB,KADdM,EARV,QASiBC,GATjB,gBAUQT,QAAQC,IAAI,SAAUO,GAV9B,wCAY2BA,EAASE,OAZpC,SAYcC,EAZd,QAaiBmC,OAMTuM,EAAsB1O,GAnB9B,6CAzDuB,sBAgFvB,SAASrB,EAAaF,GAClB,GAAsB,aAAlBA,EAAEmE,OAAOvE,MAAwBI,EAAEmE,OAAOrE,QAGvC,GAAsB,aAAlBE,EAAEmE,OAAOvE,MAAuBI,EAAEmE,OAAOrE,QAAS,CACzD,IAAIyQ,EAAiB,2BAAQR,GAAR,kBAAqB/P,EAAEmE,OAAO/E,KAAO,SAC1D4Q,EAAcO,OACX,CACH,MAAsBvQ,EAAEmE,OAAlB/E,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MACRkR,EAAiB,2BAAQR,GAAR,kBAAqB3Q,EAAOC,IACjD2Q,EAAcO,OATqC,CACnD,IAAIA,EAAiB,2BAAQR,GAAR,kBAAqB/P,EAAEmE,OAAO/E,KAAO,KAC1D4Q,EAAcO,IAyFtB,SAASC,EAAaC,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAW/M,OAAQgN,IACnCZ,EAAS9N,KAAKyO,EAAWC,GAAG/Q,IA9Kb,4CAiMvB,gCAAAgB,EAAA,6DACI6P,EAAalB,GAEPxO,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAU,CAAEiM,WAAYX,KAT3C,SAW2B3O,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAbR,WAewB,KAJdM,EAXV,QAeiBC,GAfjB,gBAgBQT,QAAQC,IAAI,mBAAoBO,GAhBxC,wCAkB2BA,EAASE,OAlBpC,QAkBcC,EAlBd,OAmBQ5C,EAAMoD,QAAQC,KAAd,WAAuBT,EAAK5B,GAA5B,gBAnBR,6CAjMuB,sBA4NvB,OAnMA+C,qBAAU,YAzBa,mCA0BnBiO,KACD,IAEHjO,qBAAU,WACN/D,EAAMkI,YAAW,KAClB,IAEHnE,qBAAU,WACNkB,OAAOgN,SAAS,EAAG,KAClB,KAyLgB,IAAjBjS,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,MAIpB,qBAAKN,UAAU,6BAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,0CAAf,UACI,qBACIA,UAAU,+BADd,SAGI,oBAAGA,UAAU,yBAAb,UACI,kDADJ,qeAUyD,SAK7D,qBACIA,UAAU,4BADd,SAIQ,uBACI2F,OAAO,GACP3F,UAAU,+BACVuF,SA/J5B,SAAsB1E,GAClBA,EAAEqE,iBAEE0L,EAAW3Q,KAAKsE,OAAS,IACrBmM,EAAYnM,OAAS,IACrBmM,GAAe,KAEnBA,GAAyB,eAAWE,EAAW3Q,OAE/C2Q,EAAWnF,SAASlH,OAAS,IACzBmM,EAAYnM,OAAS,IACrBmM,GAAe,KAEnBA,GAAyB,mBAAeE,EAAWnF,WAEnDmF,EAAWlF,cAAcnH,OAAS,IAC9BmM,EAAYnM,OAAS,IACrBmM,GAAe,KAEnBA,GACe,wBAAoBE,EAAWlF,gBAE9CkF,EAAWjF,iBAAiBpH,OAAS,IACjCmM,EAAYnM,OAAS,IACrBmM,GAAe,KAEnBA,GACe,2BAAuBE,EAAWjF,mBAEjDiF,EAAWhF,WAAWrH,OAAS,IAC3BmM,EAAYnM,OAAS,IACrBmM,GAAe,KAEnBA,GAAyB,qBAAiBE,EAAWhF,aAErDgF,EAAW/E,YAAYtH,OAAS,IAC5BmM,EAAYnM,OAAS,IACrBmM,GAAe,KAEnBA,GAAyB,sBAAkBE,EAAW/E,cArIvC,mCAwInB6F,GACAT,GAAa,GAEbP,EAAc,GACdvE,YAAW,WAuCX+E,EAAkBhI,QAAQ+D,eAAe,CACrCC,SAAU,SACVC,MAAO,SACPC,OAAQ,YAxCT,KAWH3L,QAAQC,IAAI,KAAMkP,IAqGMd,IAAKqB,EAJT,UAMI,sBAAKnR,UAAU,aAAf,UACI,uBAAOwF,QAAQ,OAAf,8BAGA,uBACI/E,KAAK,OACLD,GAAG,OACHP,KAAK,OACLW,SAAUG,EACVf,UAAU,eACVE,MAAO0Q,EAAW3Q,UAI1B,sBAAKD,UAAU,kBAAf,UACI,uBAAOwF,QAAQ,WAAf,0BAGA,yBACIvF,KAAK,WACLO,GAAG,WACHI,SAAUG,EACVf,UAAU,oBACVE,MAAO0Q,EAAWnF,SALtB,UAOI,wBAAQvL,MAAM,GAAd,iBACA,wBAAQA,MAAM,KAAd,+CAGA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,+BAIR,sBAAKF,UAAU,kCAAf,UACI,sBAAKA,UAAU,4CAAf,UACI,uBACIS,KAAK,WACLD,GAAG,gBACHP,KAAK,gBACLC,MAAM,OACNU,SAAUG,IAEd,uBAAOyE,QAAQ,gBAAgBxF,UAAU,sBAAzC,8BAKJ,sBAAKA,UAAU,6CAAf,UACI,uBACIS,KAAK,WACLD,GAAG,mBACHP,KAAK,mBACLC,MAAO0Q,EAAWjF,iBAClB/K,SAAUG,IAEd,uBAAOyE,QAAQ,mBAAmBxF,UAAU,yBAA5C,oCAKR,sBAAKA,UAAU,kBAAf,UACI,uBAAOwF,QAAQ,aAAf,wBAGA,yBACIvF,KAAK,aACLO,GAAG,aACHI,SAAUG,EACVf,UAAU,eACVE,MAAO0Q,EAAWhF,WALtB,UAOI,wBAAQ1L,MAAM,GAAd,iBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,6BAIR,sBAAKF,UAAU,kBAAf,UACI,uBAAOwF,QAAQ,cAAf,yBAGA,yBACIvF,KAAK,cACLO,GAAG,cACHI,SAAUG,EACVf,UAAU,eACVE,MAAO0Q,EAAW/E,YALtB,UAOI,wBAAQ3L,MAAM,GAAd,iBACA,wBAAQA,MAAM,KAAd,yBACA,wBAAQA,MAAM,KAAd,+BAIR,wBAAQF,UAAU,qCAAlB,4BAMhB,qBAAK8P,IAAKoB,EAAV,SACI,cAAC,EAAD,CACIhB,mBAAoBA,EACpBC,eAAgBA,EAChBE,cA9MpB,SAAuB7P,GACnB,IAAIH,EAAQ6P,EAAmBvI,WAAU,SAACK,GAAD,OAAaA,EAAQxH,IAAMA,KACpEiB,QAAQC,IAAI,QAASrB,GACrB,IACIsR,EADyB,YAAOzB,GACYpI,OAAOzH,EAAO,GAC9D0Q,EAAkB,GAAD,mBAAKZ,GAAL,CAAqBwB,EAAgB,MACtDlB,GAAoB,IA0MJD,iBAAkBA,MAG1B,sBAAKxQ,UAAU,iCAAf,UACI,cAAC,EAAD,CACImQ,eAAgBA,EAChBI,mBA7MpB,SAA4B/P,GACxB,IAAIH,EAAQ8P,EAAexI,WAAU,SAACK,GAAD,OAAaA,EAAQxH,KAAOA,KAC7DoR,EAAqB,YAAOzB,GAChCyB,EAAsB9J,OAAOzH,EAAO,GACpC0Q,EAAkBa,MA2MN,cAAC,IAAD,CACI5R,UAAU,0BACVQ,GAAIwQ,EAAY,GAAK,OACrBnN,QA/JpB,WA9BIsN,EAAiBjI,QAAQ+D,eAAe,CACpCC,SAAU,SACVC,MAAO,SACPC,OAAQ,gBA6LA,wBACIpN,UAAU,kCACV6D,QA5XG,2CA0XP,qC,MC3LLtE,mBAlMf,SAAoBC,GAChB,MAA4CE,qBAA5C,mBAAOyQ,EAAP,KAAuBY,EAAvB,KACA,EAAoCrR,mBAAS,IAA7C,mBAAKgR,EAAL,KAAkBmB,EAAlB,KACA,EAAgDnS,oBAAS,GAAzD,mBAAO8Q,EAAP,KAAyBC,EAAzB,KAEMqB,EAAexF,kBAAO,GACtByF,EAAezF,kBAAO,GAsB5B,SAAS+E,EAAaC,GAClB,OAAOA,EAAWnR,KAAI,SAACmL,GAAD,OAAeA,EAAU9K,MA7B5B,4CAgCvB,gCAAAgB,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,qBAAsBO,GAb1C,wCAe2BA,EAASE,OAfpC,QAecC,EAfd,OAgBQX,QAAQC,IAAI,sBAAuBU,GACnC2O,EAAkB3O,EAAKiJ,oBAjB/B,6CAhCuB,kEAqDvB,oCAAA7J,EAAA,6DACIkP,EAAW,eAAWA,GAChB/O,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eANtC,SAS2BC,MAAM,mBAAD,OAAoB0O,GAAe/O,GATnE,WAUwB,KADdM,EATV,QAUiBC,GAVjB,gBAWQT,QAAQC,IAAI,SAAUO,GAX9B,wCAa2BA,EAASE,OAbpC,QAacC,EAbd,OAcQX,QAAQC,IAAI,gBAAiBU,GAEzB4P,GAAY,EAChB7B,EAAe7M,SAAQ,SAAC2O,GAChBA,EAAahS,OAASmC,EAAK,GAAGnC,OAC9B+R,GAAY,MAGfA,IACGE,EADQ,sBACY/B,GADZ,CAC4B/N,EAAK,KAC7C2O,EAAkBmB,IAxB9B,6CArDuB,sBAkFvB,SAASC,EAAmBtR,GACxB,IAAIuR,EAAMvR,EAAEmE,OAAO9E,MACnB2R,EAAeO,EAAIC,QACnB5N,OAAOgN,SAAS,CAAEa,IAAKC,SAASpN,KAAKqN,aAActF,SAAU,WAC7DuD,GAAoB,GACpBtE,YAAW,WACPsE,GAAoB,KACrB,KAzFgB,4CA4FvB,kCAAAjP,EAAA,6DACQmP,EAAWU,EAAalB,GAEtBxO,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAU,CAAEiM,WAAYX,KAT3C,SAW2B3O,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAbR,WAewB,KAJdM,EAXV,QAeiBC,GAfjB,gBAgBQT,QAAQC,IAAI,mBAAoBO,GAhBxC,wCAkB2BA,EAASE,OAlBpC,QAkBcC,EAlBd,OAmBQX,QAAQC,IAAI,cAAeU,GAnBnC,6CA5FuB,sBAmHvB,OA3GAmB,qBAAU,YARa,mCASnBkP,KACD,IAEHlP,qBAAU,WACFuO,EAAa5I,QACb4I,EAAa5I,SAAU,EAdR,mCAgBfwI,KAEL,CAAChB,IAEJnN,qBAAU,WACFwO,EAAa7I,QACb6I,EAAa7I,SAAU,EAtBR,mCAwBfwJ,KAEL,CAACvC,IAyFCA,GASD1O,QAAQC,IAAIyO,GAIZ,sBAAKnQ,UAAU,uBAAf,UACKwQ,EACG,qBACI3K,MAAM,4CACNoK,KAAK,QAFT,4BAOA,wBAEJ,kCACI,uBAAOjQ,UAAU,mBAAjB,SACI,qBAAIA,UAAU,gBAAd,UACI,oBAAIA,UAAU,gBAAd,4BACA,oBAAIA,UAAU,gBAAd,wBACA,oBAAIA,UAAU,gBAAd,8BAGR,uBAAOA,UAAU,mBAAjB,SAC+B,IAA1BmQ,EAAe5L,OACV,GACA4L,EAAehQ,KAAI,SAACmL,GAChB,OACI,qBAAItL,UAAU,gBAAd,UACI,oBAAIA,UAAU,gBAAd,SACI,iCAASsL,EAAUrL,SAEG,OAAzBqL,EAAUC,WACP,sCAEA,oBAAI/K,GAAG,iBAAiBR,UAAU,gBAAlC,SACKsL,EAAUC,WACNxL,MAAM,KACNI,KAAI,SAACwS,GACF,OACI,wBACIzS,MAAOyS,EACP9O,QACIsO,EAEJnS,UAAU,0BALd,SAOK2S,EAAY,YAMV,OAA1BrH,EAAUE,YACP,oBAAIxL,UAAU,gBAAd,kBAEA,oBAAIQ,GAAG,iBAAiBR,UAAU,gBAAlC,SACKsL,EAAUE,sBAOzC,iCAvEJ,cAACxB,EAAA,EAAD,CACIC,UAAU,SACVvJ,QAAQ,UACRV,UAAU,6B,MCqBXT,mBA7If,SAAgBC,GACZ+D,qBAAU,WACN/D,EAAMkI,YAAW,KAClB,IAEH,IAAMkL,EAAYtG,iBAAO,MACnBuG,EAAavG,iBAAO,MAC1B,EAAkC5M,oBAAS,GAA3C,mBAAOoT,EAAP,KAAkBC,EAAlB,KAPmB,SA4CJC,EA5CI,8EA4CnB,WAAgCC,GAAhC,mBAAAzR,EAAA,6DACUG,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,cAAeC,IAAOC,IAAI,cAE9BoD,KAAM8N,GANd,SAQ2BjR,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,uBAAwBO,GAb5C,wCAe2BA,EAASE,OAfpC,QAecC,EAfd,OAgBQX,QAAQC,IAAI,wBAAyBU,GAhB7C,6CA5CmB,kEAgEnB,8BAAAZ,EAAA,sEAC0B,IAAI0R,SAAQ,SAACC,GAAD,OAC9BP,EAAU1J,QAAQkK,OAAOD,EAAS,gBAF1C,OACQE,EADR,QAIUJ,EAAW,IAAIK,UACZC,OAAO,SAAUF,EAAW,aACrCL,EAAiBC,GANrB,4CAhEmB,sBA6EnB,OApEA1P,qBAAU,WACN,IAAMiQ,EAASZ,EAAU1J,QACzBsK,EAAOC,MAAQ,KACfD,EAAOE,OAAS,KAChBF,EAAOG,MAAMF,MAAb,UAAwB,IAAxB,MACAD,EAAOG,MAAMD,OAAb,UAAyB,IAAzB,MAEA,IAAME,EAAUJ,EAAOK,WAAW,MAClCD,EAAQ7E,MAAM,EAAG,GACjB6E,EAAQE,QAAU,QAClBF,EAAQG,YAAc,QACtBH,EAAQI,UAAY,EACpBnB,EAAW3J,QAAU0K,IACtB,KAuDkB,IAAjBpU,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,MAIpB,qBAAKN,UAAU,yBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BAAf,SAII,oBAAGA,UAAU,qBAAb,UACI,kDADJ,0bAaJ,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,oBAAIA,UAAU,oBAAd,2BACA,cAAC,EAAD,OAGJ,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,oBAAd,oBACA,wBACIiU,YAtFxB,YAAwC,IAAhBC,EAAe,EAAfA,YACZC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjBvB,EAAW3J,QAAQmL,YACnBxB,EAAW3J,QAAQoL,OAAOH,EAASC,GACnCrB,GAAa,IAmFOwB,UAjFxB,WACI1B,EAAW3J,QAAQsL,YACnBzB,GAAa,IAgFO0B,YA7ExB,YAAgC,IAAhBP,EAAe,EAAfA,YACZ,GAAKpB,EAAL,CAGA,IAAQqB,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjBvB,EAAW3J,QAAQwL,OAAOP,EAASC,GACnCvB,EAAW3J,QAAQyL,WAwEC7E,IAAK8C,EACL5S,UAAU,kBAEd,sBAAKA,UAAU,uBAAf,UACI,wBACIA,UAAU,mBACV6D,QAvHT,2CAqHK,oCAMA,cAAC,IAAD,CACIvD,GAAE,WAAMd,EAAMmL,MAAMC,OAAOhD,OAAzB,YADN,SAGI,wBACI5H,UAAU,mBACV6D,QAvDhC,WACIrE,EAAMoD,QAAQC,KAAK,aAoDK,yC,YCyUjBtD,mBArcf,SAAiBC,GACb,MAAoCE,qBAApC,mBAAOkJ,EAAP,KAAmBsB,EAAnB,KACA,EAAoCxK,oBAAS,GAA7C,mBAAO6K,EAAP,KAAmBC,EAAnB,KAGA,EAAoC9K,oBAAS,GAA7C,mBAAO+K,EAAP,KAAmBC,EAAnB,KACA,EAAwBhL,oBAAS,GAAjC,mBAAOwH,EAAP,KAAaC,EAAb,KANoB,4CAmBpB,gCAAA3F,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,mBAAoBO,GAbxC,wCAe2BA,EAASE,OAfpC,QAecC,EAfd,OAgBQ8H,EAAc9H,GAhBtB,6CAnBoB,sBAuCpB,OA/BAmB,qBAAU,YARU,mCAShBuH,GACAtL,EAAMkI,YAAW,KAClB,IA4BEkB,GAULnH,QAAQC,IAAI,sBAAuBkH,IA2Bd,IAAjBpJ,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,MAIpB,qBAAKN,UAAU,0BAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,oBAAIA,UAAU,8BAAd,uCAGA,mBAAGA,UAAU,sBAAb,SAlBhB,SAAoB+F,GAChB,IAAMC,EAAYD,EAAKhG,MAAM,KAAK,GAAGA,MAAM,KACrCkG,EAAOD,EAAUE,QAEvB,OADAF,EAAUnD,KAAKoD,GACRD,EAAUG,KAAK,KAeLC,CAAWwC,EAAWvC,cAE3B,sBAAKrG,UAAU,yBAAf,UACI,oBAAIA,UAAU,2BAAd,kBACA,oBAAGA,UAAU,sBAAb,UACI,sDAAkC,IACjC4I,EAAWmC,aACNnC,EAAWmC,aAAaC,gBACxB,MAEV,oBAAGhL,UAAU,sBAAb,UACI,sDAAkC,IACjC4I,EAAWmC,aACNnC,EAAWmC,aAAaE,gBACxB,SAEP,IACP,sBAAKjL,UAAU,oCAAf,UACI,oBAAIA,UAAU,sDAAd,wBAGA,oBAAGA,UAAU,2CAAb,UACK,IADL,oBAEsB,IAClB,iCAAS4I,EAAW0I,WAAW/M,SAAiB,IAHpD,kFAKwC,IAClC2C,EAaI,GA5Hf,EAAC,GAgHqB/G,KAAI,SAACiL,EAAG/C,GAAJ,OACP,uBAEIrI,UAAU,0BACV6D,QAAS,kBA1G3C6G,EA0G4DU,GAzG5DjE,GAAQ,QACRqD,GAAc,IAqGgB,qDAOkB,kBAANY,GAAP,gBACYA,EAAErL,MAAM,KAAK,MAPrBsI,MATvB,kDAsBA,qBAAKrI,UAAU,0CAAf,SACMkH,EAsHI,GArHA0B,EAAWyC,mBAAmBlL,KAC1B,SAACmL,GACG,OACI,sBAAKtL,UAAU,2BAAf,UAOI,oBAAIA,UAAU,+BAAd,SACKsL,EAAUrL,OAEf,8BACI,sBAAMD,UAAU,yBAAhB,yBAEQ,IACPsL,EAAUC,cAEf,8BACI,sBAAMvL,UAAU,yBAAhB,gCAEQ,IACPsL,EAAUE,eAEf,8BACI,sBAAMxL,UAAU,yBAAhB,2BAEQ,IAER,OADCsL,EAAUG,SAEL,8BAEA,OADAH,EAAUG,SAEV,WACA,iBAEV,8BACI,sBAAMzL,UAAU,yBAAhB,4BAEQ,IACPsL,EAAUI,cACL,MACA,QAEV,8BACI,sBAAM1L,UAAU,yBAAhB,+BAEQ,IACPsL,EAAUK,iBACL,MACA,QAEV,8BACI,sBAAM3L,UAAU,yBAAhB,yBAEQ,IAER,OADCsL,EAAUM,WAEL,SAEA,OADAN,EAAUM,WAEV,WACA,eAEV,8BACI,sBAAM5L,UAAU,yBAAhB,0BAEQ,IAER,OADCsL,EAAUO,YAEL,cACA,iBAEV,8BACI,sBAAM7L,UAAU,yBAAhB,wBAEQ,IAER,OADC4I,EAAWkD,UAEN,QAIMC,IAHNnD,EACKkD,UACDR,EAAUrL,MAEd,IACA2I,EAAWkD,UACPR,EAAUrL,MACZE,KAAI,SAAC6H,GACH,IAAIgE,EACA,GACJ,IAAK,IAAMC,KAAQjE,EACfgE,EAAsBnJ,KAClBoJ,GAGR,OAAOD,EAAsB7L,KACzB,SACI+L,GAEA,OACI,8BACI,4BAEQA,uBAgBhE,eAAC3F,EAAA,EAAD,CACIW,KAAMA,EACNuD,WAAYA,EACZ1C,OAAQ,kBAAMZ,GAAQ,IACtB3G,GAAI+J,EAAa,SAAW,GAJhC,UAMI,eAAChE,EAAA,EAAMC,OAAP,CAAcC,aAAW,EAAzB,UACI,cAACF,EAAA,EAAMG,MAAP,8BACA,wBACI1G,UAAU,wCACV6D,QAhNhC,WACI2G,GAAc,GACd2B,YAAW,WALX1H,OAAO2H,WAQPD,YAAW,WACP3B,GAAc,OAwMM,sCAOJ,cAACjE,EAAA,EAAMI,KAAP,UACI,qBAAK3G,UAAU,oBAAf,SACI,wBAAOA,UAAU,gBAAjB,UACI,gCACI,+BACI,gDACA,8CACA,+CACA,kDACA,4CACA,6CACA,2CACA,4CACA,kDAGR,gCAEoB,IADf4I,EAAWyC,mBACP9G,OACC,GACAqE,EAAWyC,mBAAmBlL,KAC1B,SAACmL,GACG,OACI,+BACI,oBAAItL,UAAU,aAAd,SACI,iCAEQsL,EAAUrL,SAItB,oBAAID,UAAU,aAAd,SAEI,OADCsL,EAAUG,SAEL,8BAEA,OADAH,EAAUG,SAEV,WACA,gBAEV,qBAAIzL,UAAU,aAAd,UACK,IACAsL,EAAUI,cACL,MACA,QAEV,oBAAI1L,UAAU,aAAd,SACKsL,EAAUK,iBACL,MACA,OAEV,oBAAI3L,UAAU,aAAd,SAEI,OADCsL,EAAUO,YAEL,cACA,gBAEV,oBAAI7L,UAAU,aAAd,SAEI,OADCsL,EAAUM,WAEL,SAEA,OADAN,EAAUM,WAEV,WACA,cAEV,qBAAI5L,UAAU,aAAd,UACI,sBAAMA,UAAU,qBAA2B,IAE3C,OADC4I,EAAWkD,gBAQNC,IALAnD,EACKkD,UACDR,EACKrL,MAJT,OAQA2I,EAAWkD,UACPR,EACKrL,MACPE,KACE,SACI6H,GAEA,IAAIgE,EACA,GACJ,IAAK,IAAMC,KAAQjE,EACfgE,EAAsBnJ,KAClBoJ,GAGR,OAAOD,EAAsB7L,KACzB,SACI+L,GAEA,OACI,4BAEQA,aAUtC,OADCZ,EAAUC,WAEP,oBAAIvL,UAAU,2CAAd,kBAIA,oBAAIQ,GAAG,iBAAP,SAEQ8K,EAAUC,aAKtB,OADCD,EAAUE,YAEP,oBAAIxL,UAAU,aAAd,kBAIA,oBACIQ,GAAG,iBACHR,UAAU,aAFd,SAKQsL,EAAUE,sBAShD,uCAMnBtE,EACG,GAEA,sBAAKlH,UAAU,2BAAf,UACI,oBAAIA,UAAU,2BAAd,oBACC4I,EAAWsC,OACR,qCACI,6JAGkD,IAC9C,iCACI,mBACIxG,KAAMkE,EAAWsC,OACjBC,UAAQ,EACRnL,UAAU,wBAHd,mBAMK,UAGb,qBAAKA,UAAU,+BAAf,SACI,qBACIA,UAAU,qBACV8D,IAAK8E,EAAWsC,cAK5B,6BAlZpB,cAAClB,EAAA,EAAD,CACIC,UAAU,SACVvJ,QAAQ,UACRV,UAAU,6BCrDX,G,MAAA,IAA0B,yCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,OAA0B,wCCwH1BT,oBA/Gf,SAAsBC,GAKlB,OAHAA,EAAMkI,YAAW,IAGI,IAAjBlI,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,MAIpB,qBAAKN,UAAU,+BAAf,SACI,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,qBAAIA,UAAU,4BAAd,qBACa,IACT,sBAAMA,UAAU,6BAAhB,yBAIJ,oBAAIA,UAAU,2BAAd,qDAGA,sBAAKA,UAAU,0BAAf,UACI,qBAAKA,UAAU,sBAAsB8D,IAAK8Q,IAC1C,qBAAK5U,UAAU,sBAAsB8D,IAAK+Q,IAC1C,qBAAK7U,UAAU,sBAAsB8D,IAAKgR,IAC1C,qBAAK9U,UAAU,sBAAsB8D,IAAKiR,KAC1C,qBAAK/U,UAAU,sBAAsB8D,IAAKkR,OAE9C,oBAAGhV,UAAU,2BAAb,yVAOqB,IACjB,sBAAMA,UAAU,gCAAhB,kBARJ,IAWM,IACF,sBAAMA,UAAU,sCAAhB,wBAZJ,IAeM,IACF,sBAAMA,UAAU,qCAAhB,4BAhBJ,QAmBU,IACN,sBAAMA,UAAU,kCAAhB,6BApBJ,OAyBA,qBAAIA,UAAU,wBAAd,UACI,qBAAIA,UAAU,yBAAd,UACK,IACD,sBAAMA,UAAU,6CAAhB,sBAEQ,IAJZ,2KAUA,qBAAIA,UAAU,yBAAd,UACK,IACD,sBAAMA,UAAU,mDAAhB,4BAEQ,IAJZ,8LAUA,qBAAIA,UAAU,yBAAd,UACK,IACD,sBAAMA,UAAU,kDAAhB,gCAEQ,IAJZ,oSAOA,qBAAIA,UAAU,yBAAd,UACK,IACD,uBAAMA,UAAU,+CAAhB,UACK,IADL,yBAGQ,IALZ,4PAeJ,cAAC,IAAD,CAASM,GAAE,WAAMd,EAAMmL,MAAMC,OAAOhD,OAAzB,SAAX,SACI,wBACI5H,UAAU,oCADd,kC,MCvGT,SAAS6G,KACpB,OACI,qBAAK7G,UAAU,mBAAf,SACC,oBAAGA,UAAU,mBAAb,wBAA2C,cAAC,IAAD,IAA3C,SAA6E,mBAAG0E,KAAK,iCAAiC1E,UAAU,mBAAnD,sBAA7E,6B,MCyJMT,oBAtJf,SAAyBC,GACrB,MAA8BE,mBAAS,IAAvC,mBAAOwM,EAAP,KAAgB+I,EAAhB,KACA,EAAsDvV,mBAAS,IAA/D,mBAAOwV,EAAP,KAA4BC,EAA5B,KACA,EAAkCzV,oBAAS,GAA3C,mBAAO0V,EAAP,KAAkBC,EAAlB,KAEA,EAAgD3V,oBAAS,GAAzD,mBAAO8Q,EAAP,KAAyBC,EAAzB,KACA,EAA8C/Q,oBAAS,GAAvD,mBAAO4V,EAAP,KAAwBC,EAAxB,KAN4B,SAmBbC,EAnBa,8EAmB5B,WAA0B3U,GAA1B,eAAAW,EAAA,sDACIX,EAAEqE,iBACEgH,EAAQ3H,OAAS,IACXkR,EADc,eAEfjW,EAAMS,KAAOiM,GAElB1M,EAAMkW,gBAAgBD,GACtBR,EAAW,IACXE,GAAuB,SAACQ,GAAD,4BAAmBA,GAAnB,CAA8BzJ,OACrDuE,GAAoB,GACpBtE,YAAW,kBACXsE,GAAoB,KAAQ,OAXpC,4CAnB4B,kEAoC5B,wCAAAjP,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,SAAUO,GAb9B,wCAe2BA,EAASE,OAfpC,QAkBQ,IAAWyT,KAHLxT,EAfd,OAgBQX,QAAQC,IAAI,8BAA+BU,GAEpBA,EAAK0J,UACxB,GAAI8J,IAAapW,EAAMS,KACnB,IAASsR,EAAI,EAAGA,EAAInP,EAAK0J,UAAU8J,GAAUrR,OAAQgN,IACjD,IAASjP,KAD8C,EAAD,SAC7CA,GACL6S,GAAuB,SAACU,GAAD,4BAChBA,GADgB,CAEnBvT,QAHQF,EAAK0J,UAAU8J,GAAUrE,GAAK,EAArCjP,GArB7B,6CApC4B,sBA4F5B,OApFAiB,qBAAU,YARkB,mCASxBuS,KACD,IAGHvS,qBAAW,WACP9B,QAAQC,IAAI,UACZD,QAAQC,IAAIwT,KACb,CAACA,IA4EC1V,EAAMoJ,WAWP,sBAAK5I,UAAWoV,GAAaF,EAAoB3Q,OAAS,EAAI,mDAAqD,GAAnH,UACI,sBAAKvE,UAAU,kCAAf,UACI,oBAAGA,UAAU,wBAAb,UAAsCR,EAAMS,KAA5C,IAAmDmV,EAAY,GAAK,cAAC,IAAD,CAChEpV,UAAU,kCACV6D,QApBhB,WACIwR,GAAa,SAqBL,6BACKH,EAAoB/U,KAAI,SAAC4V,EAAa1N,GAAd,OACrB,+BAAK0N,EAAL,IAAkB,cAAC,IAAD,CAAgBlS,QAAS,kBA1C/D,SAAsBwE,GAClB7I,EAAMwW,cAAcxW,EAAMS,KAAMoI,GAChC,IAAI4N,EAAY,YAAOf,GACvBe,EAAanO,OAAOO,EAAK,GACzB5G,QAAQC,IAAI,KAAMuU,GAClBd,GAAuB,SAAAQ,GAAS,OAAIM,KAEpCV,GAAmB,GACfpJ,YAAW,kBACXoJ,GAAmB,KAAQ,MAiCkCW,CAAa7N,IAAMnI,MAAOmI,EAAKrI,UAAU,iCAGjGoV,EAAY,uBACT5U,GAAG,UACHN,MAAOgM,EACPjM,KAAMT,EAAMS,KACZD,UAAU,sCACVS,KAAK,OACLgF,YAAY,eACZ0Q,OAAQX,EACR5U,SAAU,SAACC,GAAD,OAAOoU,EAAWpU,EAAEmE,OAAO9E,QACrC0G,WAAY,SAAC/F,GAAD,OA1C5B,SAAwBA,GACP,UAATA,EAAEyB,KACFkT,EAAW3U,GAwCgBuV,CAAevV,MACjC,MAER2P,EACO,qBACI3K,MAAM,2CACNoK,KAAK,QAFT,4BAOA,wBAEHqF,EACG,qBACIzP,MAAM,4CACNoK,KAAK,QAFT,8BAOA,2BAlDR,cAACjG,EAAA,EAAD,CACIC,UAAU,SACVvJ,QAAQ,UACRV,UAAU,6B,MCgEXT,oBAlKf,SAAmBC,GACf,MAAoCE,qBAApC,mBAAOkJ,EAAP,KAAmBsB,EAAnB,KADsB,4CAStB,gCAAA1I,EAAA,6DACUG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,eALtC,SAQ2BC,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAVR,WAYwB,KAJdM,EARV,QAYiBC,GAZjB,gBAaQT,QAAQC,IAAI,mBAAoBO,GAbxC,wCAe2BA,EAASE,OAfpC,QAecC,EAfd,OAgBQ8H,EAAc9H,GAhBtB,6CATsB,+BA6BPsT,EA7BO,8EA6BtB,WAA+BxJ,GAA/B,uBAAA1K,EAAA,yDACIC,QAAQC,IAAI,UAAWwK,GAEjBJ,EAHV,eAG2BlD,EAAWkD,WAC5BxJ,EAAM+T,OAAOC,KAAKpK,GAAS,GAEV,OAAnBJ,EAAUxJ,SAAoCyJ,IAAnBD,EAAUxJ,KACrCwJ,EAAUxJ,GAAO,IAErBwJ,EAAUxJ,GAAKO,KAAf,eAAuBqJ,EAAQ5J,GAAO,KAEjB,KAAjB4J,EAAQ5J,GAXhB,wBAYcX,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAU,CAAEyG,eAlBnC,SAoB+B9J,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GAtBZ,WAwB4B,KAJdM,EApBd,QAwBqBC,GAxBrB,iBAyBYT,QAAQC,IAAI,uBAAwBO,GAzBhD,yCA2B+BA,EAASE,OA3BxC,QA2BkBC,EA3BlB,OA4BY8H,GAAc,SAACyL,GAAD,mBAAC,eACRA,GADO,IAEV7J,UAAWA,OAEfrK,QAAQC,IAAI,wBAAyBU,GAhCjD,6CA7BsB,+BAkEP4T,EAlEO,gFAkEtB,WAA6B/V,EAAMoI,GAAnC,uBAAA7G,EAAA,sDAII,IAAWoU,KAHP9J,EADR,eACyBlD,EAAWkD,WAChCrK,QAAQC,IAAI,YAAaoK,GAEFA,EACf8J,IAAa3V,GACb6L,EAAU8J,GAAU9N,OAAOO,EAAK,GAN5C,OAUU1G,EAAU,CACZC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAeC,IAAOC,IAAI,cAE9BoD,KAAMC,KAAKC,UAAU,CAAEyG,eAhB/B,SAkB2B9J,MAAM,gBAAD,OACRxC,EAAMmL,MAAMC,OAAOhD,OADX,KAExBjG,GApBR,WAsBwB,KAJdM,EAlBV,QAsBiBC,GAtBjB,iBAuBQT,QAAQC,IAAI,uBAAwBO,GAvB5C,yCAyB2BA,EAASE,OAzBpC,QAyBcC,EAzBd,OA0BQ8H,GAAc,SAACyL,GAAD,mBAAC,eACRA,GADO,IAEV7J,UAAWA,OAEfrK,QAAQC,IAAI,wBAAyBU,GA9B7C,6CAlEsB,sBAoGtB,OAhGAmB,qBAAU,YAJY,mCAKlBuH,GACAtL,EAAMkI,YAAW,KAClB,IA6FEkB,GAUgB,IAAjBpJ,EAAMmE,OACC,cAAC,IAAD,CAAUrD,GAAG,MAIpB,qBAAKN,UAAU,4BAAf,SACI,sBAAKA,UAAU,4BAAf,UAEI,qBAAKA,UAAU,8BAAf,SAII,oBAAGA,UAAU,wBAAb,UACI,kDADJ,wZAQmD,SAGvD,qBAAKA,UAAU,2BAAf,SACI,sBACI2F,OAAO,GACP3F,UAAU,uDAFd,SAIK4I,EAAWyC,mBAAmBlL,KAAI,SAACmL,GAChC,OACI,cAAC,GAAD,2BACQA,GADR,IAEIoK,gBAAiBA,EACjB9M,WAAYA,EACZoN,cAAeA,YAOnC,cAAC,IAAD,CAAS1V,GAAE,WAAMd,EAAMmL,MAAMC,OAAOhD,OAAzB,WAAX,SACI,wBAAQ5H,UAAU,0CAAlB,6BAlDR,cAACgK,EAAA,EAAD,CACIC,UAAU,SACVvJ,QAAQ,UACRV,UAAU,6BCrBXT,oBAxEf,WACI,MAA4BG,oBAAS,GAArC,mBAAOiE,EAAP,KAAeb,EAAf,KACA,EAA0CpD,qBAA1C,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOkE,EAAP,KAAgB8D,EAAhB,KACA,EAAoChI,oBAAS,GAA7C,mBAAOgE,EAAP,KAAmB4B,EAAnB,KAiBA,OAfA/B,qBAAW,YACY,WACf,IAAIgT,EAASzU,IAAOC,IAAI,iBAEpBe,IADAyT,GAMRC,KACD,IAMC,sBAAKxW,UAAU,MAAf,UACI,cAAC,EAAD,CAAQ2D,OAAQA,EAAQb,UAAWA,EAAWY,WAAYA,EAAYE,QAASA,IAC/E,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6S,KAAK,SAAZ,SACI,cAAC,EAAD,CAAO3T,UAAWA,EAAWa,OAAQA,EAAQ2B,cAAeA,MAEhE,cAAC,IAAD,CAAOmR,KAAK,gBAAZ,SACI,cAAC,EAAD,CAAc3T,UAAWA,EAAWa,OAAQA,EAAQ2B,cAAeA,MAEvE,cAAC,IAAD,CAAOmR,KAAK,sBAAZ,SACI,cAAC,EAAD,CAAc/O,WAAYA,EAAa/D,OAAQA,MAEnD,cAAC,IAAD,CAAO8S,KAAK,cAAZ,SACI,cAAC,EAAD,CAAY9S,OAAQA,EAAQ+D,WAAYA,EAAYpC,cAAeA,MAEvE,cAAC,IAAD,CAAOmR,KAAK,gBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACI,cAAC,EAAD,CAAM/O,WAAYA,EAAY/D,OAAQA,MAE1C,cAAC,IAAD,CAAO8S,KAAK,wBAAZ,SACI,cAAC,GAAD,CAAc/O,WAAYA,EAAY/D,OAAQA,MAElD,cAAC,IAAD,CAAO8S,KAAK,sBAAZ,SACI,cAAC,EAAD,CAAY/O,WAAYA,EAAY/D,OAAQA,MAEhD,cAAC,IAAD,CAAO8S,KAAK,qBAAZ,SACI,cAAC,GAAD,CAAW/O,WAAYA,EAAY/D,OAAQA,MAE/C,cAAC,IAAD,CAAO8S,KAAK,kBAAZ,SACI,cAAC,EAAD,CAAQ/O,WAAYA,EAAY/D,OAAQA,MAE5C,cAAC,IAAD,CAAO8S,KAAK,mBAAZ,SACI,cAAC,EAAD,CAAS/O,WAAYA,EAAY/D,OAAQA,MAG7C,cAAC,IAAD,CAAO8S,KAAK,IAAZ,SACI,cAAC,EAAD,CAAQ9S,OAAQA,EAAQ2B,cAAeA,MAE3C,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,OAGJ,cAAC,GAAD,UCjFZoR,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,QAIRrE,SAASsE,eAAe,W","file":"static/js/main.8c75986e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/leaf.1c74297e.png\";","export default __webpack_public_path__ + \"static/media/farmer.56533210.png\";","import \"./NavBar.css\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nfunction NavBar(props) {\n    const [radioValue, setRadioValue] = useState(\"\");\n\n    const radios = [\n        { name: \"Soil\", value: \"soil\" },\n        { name: \"Vegetables\", value: \"vegetables\" },\n        { name: \"Seed Varieties\", value: \"varieties\" },\n        { name: \"Physical Layout\", value: \"layout\" },\n    ];\n\n    let paramValue;\n    paramValue = props.location.pathname.split(\"/\")[1]\n\n    function handleChange(e) {\n        setRadioValue(e.currentTarget.value);\n    }\n\n\n    return (\n        <div className=\"navbar-container\">\n            <div className=\"nav-btn-group\">\n                    {radios.map((radio, index) => (\n                        <NavLink to={`/${paramValue}/${radio.value}/`} className=\"navbar-link\" activeClassName=\"active\"\n                                key={uuidv4()}\n                                id={`radio-${index}`}\n                                type=\"radio\"\n                                variant=\"outline-success\"\n                                name=\"radio\"\n                                value={radio.value}\n                                checked={radio.value === radioValue}\n                                onChange={(e) => handleChange(e)}\n                            >\n                                {radio.name}\n                        </NavLink>\n                    ))}\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(NavBar);","import React from \"react\";\nimport \"./Header.css\";\nimport Leaf from \"../../images/leaf.png\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport Cookie, { set } from \"js-cookie\";\nimport { useEffect, useState } from \"react\";\nimport Farmer from \"../../images/farmer.png\";\nimport { Button, Collapse, Spinner } from \"react-bootstrap\";\nimport NavBar from \"../NavBar/NavBar\";\n\nfunction Header(props) {\n    const [username, setUsername] = useState();\n    const [open, setOpen] = useState(false);\n    const [showNav, setShowNav] = useState(false);\n    const [wikiData, setWikiData] = useState();\n\n    const [randomPage, setRandomPage] = useState();\n\n    useEffect(() => {\n        getWikiData();\n    }, []);\n\n    useEffect(() => {\n        // randomWikiPage(wikiData);\n    }, [wikiData]);\n\n    useEffect(() => {\n        grabUserName();\n    }, [username, props]);\n\n    async function grabUserName() {\n        console.log(\"1111fired\");\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"/rest-auth/user/\", options);\n        if (response.ok === false) {\n            console.log(\"LOGIN FAILED\", response);\n        } else {\n            const data = await response.json();\n            Cookie.set(\"Authorization\", `Token ${data.key}`);\n\n            let username =\n                data.username.charAt(0).toUpperCase() +\n                data.username.slice(1).toLowerCase();\n            setUsername(username);\n        }\n    }\n\n    function handleProfileClick() {\n        props.history.push(\"/gardenlist/\");\n        setOpen(false);\n    }\n\n    async function handleLogoutClick() {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"/rest-auth/logout/\", options);\n        if (response.ok === false) {\n            console.log(\"LOGOUT FAILED\", response);\n        } else {\n            const data = await response.json();\n            Cookie.remove(\"Authorization\");\n            console.log(\"LOGOUT SUCCESSFUL\", data);\n            props.history.push(\"/\");\n            props.setIsAuth(false);\n            setOpen(false);\n            setUsername(\"\");\n        }\n    }\n\n    async function getWikiData() {\n        let pageNumbers;\n        const response1 = await fetch(\n            `https://en.wikipedia.org/w/api.php?action=query&format=json&origin=*&list=categorymembers&cmtitle=Category%3ABotany&cmlimit=100`\n        );\n        if (response1.ok === false) {\n            console.log(\"failed\", response1);\n        } else {\n            const data = await response1.json();\n            console.log(\"SUCCESS\", data);\n            pageNumbers = data.query.categorymembers.map((pageObj) => {\n                return pageObj.pageid;\n            });\n        }\n\n        const response2 = await fetch(\n            `https://en.wikipedia.org/w/api.php?action=query&format=json&origin=*&list=categorymembers&cmtitle=Category%3ASoil&cmlimit=100`\n        );\n        if (response2.ok === false) {\n            console.log(\"failed\", response2);\n        } else {\n            const data = await response2.json();\n            console.log(\"SUCCESS\", data);\n            data.query.categorymembers.forEach((pageObj) => {\n                return pageNumbers.push(pageObj.pageid);\n            });\n\n            if (wikiData) {\n                setWikiData([...wikiData, pageNumbers]);\n            } else {\n                setWikiData(pageNumbers);\n            }\n        }\n    }\n\n    // function randomWikiPage(arr) {\n    //     let index= Math.floor(Math.random() * arr.length);\n    //     console.log(index)\n    //     // let random = Number(randomPage[index])\n    //     // setRandomPage(random)\n    // }\n\n    function handleWikiClick() {\n        let index = Math.floor(Math.random() * wikiData.length);\n        console.log(index);\n        let random = Number(wikiData[index]);\n        window.location.href=`https://en.wikipedia.org/w/index.php?curid=${random}`\n    }\n\n    function handleBannerClick() {\n        props.history.push(\"/gardenlist\");\n    }\n\n    if (!props.showHeader) {\n        return \"\";\n    }\n\n    let navBar;\n    if (props.isAuth && props.showNav) {\n        navBar = <NavBar />;\n    } else {\n        navBar = \"\";\n    }\n\n    console.log(wikiData);\n\n    return (\n        <div className=\"header-container\">\n            <div\n                className=\"logo-container\"\n                id={props.showNav ? \"\" : \"header-center\"}\n                onClick={handleBannerClick}\n            >\n                <h1 className=\"header-title\">Flourish</h1>\n                <img src={Leaf} alt=\"green leaf\" className=\"header-leaf\" />\n            </div>\n            {props.isAuth && username ? (\n                <>\n                    <div\n                        onClick={() => setOpen(!open)}\n                        aria-controls=\"example-collapse-text\"\n                        aria-expanded={open}\n                    >\n                        <div className=\"header-user-container\">\n                            <p className=\"header-username\">{username}</p>\n                            <div className=\"header-user-icon-container\">\n                                {\" \"}\n                                <img\n                                    src={Farmer}\n                                    alt=\"\"\n                                    className=\"header-user-icon\"\n                                />{\" \"}\n                            </div>\n                        </div>\n                    </div>\n                    <Collapse in={open}>\n                        <div className=\"header-user-collapse\">\n                            <button\n                                className=\"header-user-profile-btn\"\n                                onClick={handleProfileClick}\n                            >\n                                Profile\n                            </button>\n                            <button className=\"header-user-wiki-btn\" onClick={handleWikiClick}>Learn</button>\n                            <button\n                                className=\"header-user-logout-btn\"\n                                onClick={handleLogoutClick}\n                            >\n                                Logout\n                            </button>\n                        </div>\n                    </Collapse>\n                </>\n            ) : (\n                \" \"\n            )}\n            {navBar}\n        </div>\n    );\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport Cookie from 'js-cookie';\nimport { useState, useEffect } from 'react';\nimport './Registration.css';\nimport { Redirect } from 'react-router-dom';\n\nexport default function Registration(props) {\n\n    const [data, setData] = useState({\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    })\n\n    useEffect( ()=> {\n        props.setShowHeader(true);\n    }, [])\n\n    function handleChange(e) {\n        let {name, value} = e.target\n        let updatedData = {...data, [name]: value}\n        setData(updatedData)\n    }\n\n   async function handleSubmit(e) {\n       e.preventDefault()\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken' : Cookie.get('csrftoken')\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch('/rest-auth/registration/', options)\n        if (response.ok === false) {\n        } else {\n            const data = await response.json();\n            Cookie.set(\"Authorization\", `Token ${data.key}`);\n            props.setIsAuth(true);\n\n        }\n    }\n\n    if (props.isAuth === true) {\n        return <Redirect to=\"/gardenlist\" />\n     }\n     \n    return (\n        <div className=\"registration-outer-container\">\n            <div className=\"registration-inner-container\">\n\n            <form className=\"form-control registration-form\" onSubmit={handleSubmit}>\n            <div className=\"form-upper-container\">\n            <div className=\"form-group\">\n            <label htmlFor=\"username\" className=\"form-label mt-3 registration-label\">Username:</label>\n                <input type=\"text\" className=\"form-control\" name=\"username\" id=\"username\" placeholder=\"Enter Username..\" value={data.username} onChange={handleChange} />\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"form-label mt-3 registration-label\">Email:</label>\n                <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Enter Email..\" value={data.email} onChange={handleChange} />\n            </div>\n            </div>\n           <div className=\"form-lower-container\">\n           <div className=\"form-group\">\n            <label htmlFor=\"password1\" className=\"form-label mt-3 registration-label\">Password:</label>\n                <input type=\"password\" className=\"form-control\" name=\"password1\" id=\"password1\" placeholder=\"Enter Password..\" value={data.password1} onChange={handleChange} />\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"password2\" className=\"form-label mt-3 registration-label\">Confirm Password:</label>\n                <input type=\"password\" className=\"form-control\" name=\"password2\" id=\"password2\" placeholder=\"Confirm Password..\" value={data.password2} onChange={handleChange} />\n            </div>\n           </div>\n           \n            <button className=\"flagship-btn register-btn\">Register</button>\n            </form>\n\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport Cookie from 'js-cookie';\nimport { useState, useEffect } from 'react';\nimport './Login.css';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n\n    const [data, setData] = useState({\n        username: \"\",\n        password: \"\",\n    })\n\n    useEffect( ()=> {\n        props.setShowHeader(true);\n    }, [])\n\n    function handleChange(e) {\n        let {name, value} = e.target;\n        let updatedData = {...data, [name]: value };\n        setData(updatedData);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookie.get(\"csrftoken\")\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch('/rest-auth/login/', options)\n        if (response.ok === false) {\n            console.log(\"LOGIN FAILED\", response);\n        } else {\n            const data = await response.json();\n            Cookie.set('Authorization', `Token ${data.key}`)\n            props.setIsAuth(true);\n\n        }\n    }\n\n    function handleReRoute() {\n        props.history.push('/registration');\n    }\n\n    if (props.isAuth === true) {\n       return <Redirect to=\"/gardenlist\" />\n    }\n\n    return (\n        <div className=\"login-outer-container\">\n            <div className=\"login-inner-container\">\n            <form action=\"\" className=\"form-control login-form\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\" className=\"form-label login-label\">Username:</label>\n                    <input className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" value={data.username} placeholder=\"Enter Username..\" onChange={handleChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\" className=\"form-label login-label mt-3\">Password:</label>\n                    <input className=\"form-control\" type=\"password\" id=\"password\" name=\"password\" value={data.password} placeholder=\"Enter Password..\" onChange={handleChange} />\n                </div>\n                <p className=\"login-reroute-text\">New to Flourish? <button type=\"button\" className=\"login-reroute-btn\" onClick={handleReRoute}>SIGN UP</button></p>\n                <button className=\"flagship-btn login-btn\">Login</button>\n            </form>\n            </div>\n\n            \n        </div>\n    )\n}\n\nexport default withRouter(Login)","import React from \"react\";\nimport \"./Splash.css\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport Leaf from \"../../images/leaf.png\";\n\nexport default function Splash(props) {\n    useEffect(() => {\n        props.setShowHeader(false);\n    }, []);\n\n    if (props.isAuth) {\n        return <Redirect to=\"/gardenlist\" />;\n    }\n\n    return (\n        <div className=\"splash-container\">\n            {/* <h1 className=\"splash-main-heading\">\n                Welcome to <span className=\"flourish-span\">Flourish</span>\n            </h1>\n            <h2 className=\"splash-sub-heading\">\n                Plan, organize and improve your garden.\n            </h2>\n            <p className=\"splash-description\">\n                Bountiful, high-yielding gardens are products of thorough\n                preparation. Flourish is a tool to help you prepare your garden\n                for the upcoming season, while allowing you to cut down the time\n                it takes to lay the groundwork. The Flourish experience takes\n                you through a series of steps with each step focusing on\n                important gardening areas: <span className=\"splash-soil\">Soil</span>, <span className=\"splash-vegetables\">Vegetables</span>, <span className=\"splash-companion\">Companion Planting</span>,\n                and  <span className=\"splash-layout\">Physical Layout</span>.\n            </p>\n\n            <div className=\"splash-btn-group\">\n            <NavLink to=\"/login\">\n                <button\n                    className=\"btn btn-success mt-2 flagship-btn\"\n                    value=\"login\"\n                >\n                    Login\n                </button>\n            </NavLink>\n            <NavLink to=\"/registration\">\n                <button\n                    className=\"btn btn-success mt-2 flagship-btn\"\n                    value=\"register\"\n                >\n                    Register\n                </button>\n                </NavLink>\n            </div> */}\n\n            <div className=\"splash1 position-relative w-100\">\n                <div className=\"splash2 position-absolute text-white d-flex flex-column align-items-start justify-content-center\">\n                    <div className=\"container\">\n                        <div class=\"splash-content-container col-md-6\">\n                            <h1 className=\"splash-name mb-4 mt-2 display-4 font-weight-bold\">\n                                Welcome to\n                                <span className=\"splash-headline\">\n                                    Flourish \n                                    <img src={Leaf} alt=\"green leaf\" className=\"header-leaf splash-leaf\" />\n                                </span>\n                            </h1>\n                            <p className=\"splash-p\">\n                                Flourish is a tool to help you prepare your\n                                garden for the upcoming season, while allowing\n                                you to cut down the time it takes to lay the\n                                groundwork.\n                            </p>\n                            <div className=\"splash-btn-container\">\n                            <NavLink to=\"/registration\" className=\"splash-navlink\">\n                                <a\n                                    href=\"#\"\n                                    className=\"green-btn btn mt-3 mx-3 mt-sm-0\"\n                                >\n                                    Register\n                                </a>\n                                </NavLink>\n                                <NavLink to=\"/login\" className=\"splash-navlink\">\n                                <a\n                                    href=\"#\"\n                                    className=\"green-btn btn mt-3 mt-sm-0\"\n                                >\n                                    Login\n                                </a>\n                                </NavLink>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport \"./GardenItem.css\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { useEffect, useState } from 'react';\n\nfunction GardenItem(props) {\n\n\n    function handleGardenItemClick(e) {\n        props.history.push(`/gardenlist/${props.id}`);\n    }\n\n    function handleClick() {\n        props.removeGardenFromList(props.id);\n    }\n\n    function formatDate(date) {\n        const splitDate = date.split(\"T\")[0].split('-')\n        const year = splitDate.shift();\n        splitDate.push(year)\n        return splitDate.join(\"-\")\n    }\n\n    \n\n    return (\n        <div className=\"garden-item-container\" >\n            <div className=\"garden-item-btn-container\" >\n                <AiOutlineClose onClick={handleClick}/>\n            </div>\n            <div className=\"garden-item-text-container\" onClick={handleGardenItemClick}>\n                <h3 className=\"garden-item-heading\">{props.name.toUpperCase()}</h3>\n                <p className=\"garden-item-date\">{formatDate(props.created_at)}</p>\n                <p\n                    \n                    className=\"garden-item-more-details\"\n                >\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(GardenItem);\n","import Cookie from \"js-cookie\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction CreateAGarden(props) {\n    const [data, setData] = useState({\n        name: \"\",\n    });\n\n    function handleChange(e) {\n        let { name, value } = e.target;\n        let updatedData = { ...data, [name]: value };\n        setData(updatedData);\n    }\n\n    async function handleCreateGarden(e) {\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        };\n        const response = await fetch(\"/api/gardens/\", options);\n        if (response.ok === false) {\n            console.log(\"GARDEN NAME FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"GARDEN NAME SUCCESS\", data);\n\n            props.history.push(`/${data.id}/instructions/`);\n        }\n    }\n\n\n    function handleKeyPress(e) {\n        if(e.key=='Enter'){\n            handleCreateGarden();\n        } \n      }\n\n    return (\n        <div className=\"get-started-container\">\n            <Modal.Header closeButton>\n                <Modal.Title>Enter a Garden Name:</Modal.Title>\n            </Modal.Header>\n                <Modal.Body>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={data[\"name\"]}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        onKeyPress={handleKeyPress}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.handleClose}>\n                        Close\n                    </Button>\n                    <Button\n                        variant=\"btn btn-success\"\n                        type=\"submit\"\n                        onClick={handleCreateGarden}\n                        \n                    >\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n        </div>\n    );\n}\n\nexport default withRouter(CreateAGarden);\n","import React from \"react\";\nimport GardenItem from \"./GardenItem\";\nimport CreateAGarden from \"./CreateAGarden\";\nimport Cookie, { remove } from \"js-cookie\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"./GardenList.css\";\nimport { withRouter, Redirect } from \"react-router\";\n\nfunction GardenList(props) {\n    const [userGardenList, setUserGardenList] = useState([]);\n    const [show, setShow] = useState(false);\n    const [username, setUsername] = useState();\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        grabUserGardenList();\n        props.setShowNav(false);\n        props.setShowHeader(true);\n    }, []);\n\n    useEffect(() => {\n        grabUserName();\n    }, [username, props]);\n\n    async function grabUserName() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"/rest-auth/user/\", options);\n        if (response.ok === false) {\n            console.log(\"LOGIN FAILED\", response);\n        } else {\n            const data = await response.json();\n            Cookie.set(\"Authorization\", `Token ${data.key}`);\n\n            let username =\n                data.username.charAt(0).toUpperCase() +\n                data.username.slice(1).toLowerCase();\n            setUsername(username);\n        }\n    }\n\n\n    async function grabUserGardenList() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"/api/gardens/\", options);\n        if (response.ok === false) {\n            console.log(\"GARDEN LIST FAIL\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"GARDEN LIST SUCCESS\", data);\n            console.log(\"BEFORE\", data)\n            data.sort((a,b) => b.created_at-a.created_at)\n            console.log(\"AFTER\", data)\n            data.sort((elem1, elem2) => {\n                return elem2.created_at.split(\".\")[0].replace(\"T\", \"\").replace(\":\", \"\").replace(\"-\", \"\").replace(\"-\", \"\").replace(\":\", \"\") - elem1.created_at.split(\".\")[0].replace(\"T\", \"\").replace(\":\", \"\").replace(\"-\", \"\").replace(\"-\", \"\").replace(\":\", \"\");\n            })\n            setUserGardenList(data);\n        }\n    }\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/\" />\n     }\n\n    \n    async function removeGardenFromList(id) {\n        let index = userGardenList.findIndex((garden) => garden.id === id);\n        let updatedGardenList = [...userGardenList];\n        updatedGardenList.splice(index, 1);\n        setUserGardenList(updatedGardenList);\n\n        const options = {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/gardens/${id}/`, options);\n        if (response.ok === false) {\n            console.log(\"GARDEN LIST FAIL\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"GARDEN LIST SUCCESS\", data);\n        }\n    }\n\n    if (!props.isAuth) {\n        props.history.push(\"/\");\n    }\n\n    return (\n        <div className=\"garden-list-outer-container\">\n            <div className=\"garden-list-inner-container\">\n                <div className=\"garden-list-content-container\">\n                    <h2 className=\"garden-list-main-heading\">\n                        {username\n                            ? username.toUpperCase() + \"'S DASHBOARD\"\n                            : \"DASHBOARD\"}\n                    </h2>\n                    <button\n                        className=\"green-btn create-garden-btn\"\n                        onClick={handleShow}\n                    >\n                        Create a Garden Plan\n                    </button>\n                    <Modal show={show} onHide={handleClose}>\n                        <CreateAGarden handleClose={handleClose} />\n                    </Modal>\n                    {userGardenList.length === 0 ? (\n                        \"\"\n                    ) : (\n                        <>\n                            <h3 className=\"garden-list-subheading\">\n                                YOUR PAST GARDENS:\n                            </h3>\n                            <p className=\"garden-list-details-heading\">\n                                (Click a garden to review or update!)\n                            </p>\n                        </>\n                    )}\n                    <div className=\"garden-list-grid-container\">\n                        {userGardenList.map((element) => {\n                            return (\n                                <GardenItem\n                                    {...element}\n                                    removeGardenFromList={removeGardenFromList}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(GardenList);\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Cookie from \"js-cookie\";\nimport { withRouter } from \"react-router\";\nimport \"./GardenNotes.css\";\nimport { GrSend, GrFormEdit, GrFormClose } from \"react-icons/gr\";\nimport { AiOutlineSave } from \"react-icons/ai\";\nimport { GrFormAdd } from \"react-icons/gr\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { IoIosAdd} from \"react-icons/io\";\nimport { MdOutlineClose} from \"react-icons/md\";\n\nfunction GardenNotes(props) {\n    const [notes, setNotes] = useState([\" \", \" \", \" \"]);\n\n    useEffect(() => {\n        fetchNotes();\n    }, []);\n\n    async function fetchNotes() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.userGardenID}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"VARIETY PATCH FAILED\", response);\n        } else {\n            const data = await response.json();\n            if (data.notes !== null) {\n                setNotes(data.notes);\n            }\n            console.log(\"VARIETY PATCH SUCCESS\", data);\n        }\n    }\n\n    function handleAddNote() {\n        let updatedNotes = [...notes];\n        updatedNotes.push(\" \");\n        setNotes(updatedNotes);\n    }\n\n    function handleChange(e, idx) {\n        let updatedNotes = [...notes];\n        updatedNotes[idx] = e.target.value;\n        setNotes(updatedNotes);\n        console.log(notes);\n    }\n\n    // async function handleBlur() {\n    //     const options = {\n    //         method: \"PATCH\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n    //         },\n    //         body: JSON.stringify({ notes: notes }),\n    //     };\n    //     const response = await fetch(\n    //         `/api/gardens/${props.userGardenID}/`,\n    //         options\n    //     );\n    //     if (response.ok === false) {\n    //         console.log(\"NOTES PATCH FAILED\", response);\n    //     } else {\n    //         const data = await response.json();\n    //         setNotes(data.notes);\n    //         console.log(\"NOTES PATCH SUCCESS\", data);\n    //     }\n    // }\n\n    async function handleDeleteClick(idx) {\n        let updatedNotes = [...notes];\n        updatedNotes.splice(idx, 1);\n\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({ notes: updatedNotes }),\n        };\n        const response = await fetch(\n            `/api/gardens/${props.userGardenID}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"NOTES DELETE FAILED\", response);\n        } else {\n            const data = await response.json();\n            setNotes(data.notes);\n            console.log(\"NOTES DELETE SUCCESS\", data);\n        }\n    }\n\n    // function handleKeyPress(e) {\n    //     console.log(\"fired\");\n    //     console.log(e.key);\n    //     if (e.key === \"Enter\") {\n    //         console.log(\"blur fired\");\n    //         handleBlur(e);\n    //     }\n    // }\n\n    // function handleChange(e) {\n    //     setNotes(e.target.value);\n    // }\n\n    async function handleSaveClick() {\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({ notes: notes }),\n        };\n        const response = await fetch(\n            `/api/gardens/${props.userGardenID}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"NOTES PATCH FAILED\", response);\n        } else {\n            const data = await response.json();\n            setNotes(data.notes);\n            console.log(\"NOTES PATCH SUCCESS\", data);\n        }\n    }\n\n    function handleAddClick() {\n        let updatedNotes = [...notes];\n        updatedNotes.push(\" \");\n        setNotes(updatedNotes);\n    }\n\n    return (\n        <div className=\"notepad\">\n        <h2 className=\"garden-detail-heading-category garden-notes-heading\">Notes</h2>\n            <div className=\"top\">\n                <IoIosAdd\n                    className=\"garden-notes-add-btn\"\n                    onClick={handleAddClick}\n                />\n                <AiOutlineSave\n                    className=\"garden-notes-save-btn\"\n                    onClick={handleSaveClick}\n                />\n            </div>\n            {notes.map((note, idx) => (\n                <div className=\"garden-note-container\">\n                    <textarea         \n                        className=\"paper\"\n                        onChange={(e) => handleChange(e, idx)}\n                        value={note}\n                />\n                    <MdOutlineClose className=\"garden-notes-delete-btn\" onClick={handleDeleteClick}/>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default withRouter(GardenNotes);\n","import React from \"react\";\nimport Cookie from \"js-cookie\";\nimport { useState, useEffect } from \"react\";\nimport \"./WeatherDashboard.css\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction WeatherDashboard(props) {\n    const [weatherData, setWeatherData] = useState();\n\n    let sunrise;\n    let sunset;\n    let random;\n\n    useEffect(() => {\n        if(props.userGarden.location !== null) {\n            getWeatherDetails();\n        }\n    }, []);\n\n    async function getWeatherDetails() {\n        const response = await fetch(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${props.userGarden.location.latitude.toFixed(\n                2\n            )}&lon=${props.userGarden.location.longitude.toFixed(\n                2\n            )}&&units=imperial&appid=e2dce036ff05079de8938acca0721d69`\n        );\n        if (response.ok === false) {\n            console.log(\"failed\", response);\n        } else {\n            let data = await response.json();\n\n            console.log(\"SUCCESS\", data);\n            setWeatherData(data);\n        }\n    }\n\n    if(props.userGarden.location === null){\n        return \"Location Not Saved\"\n    }\n\n    if (!weatherData) {\n        return (\n            <Spinner\n                animation=\"border\"\n                variant=\"success\"\n                className=\"garden-detail-spinner\"\n            />\n        );\n    } else {\n        sunrise = new Date(weatherData.current.sunrise * 1000);\n        sunset = new Date(weatherData.current.sunset * 1000);\n        // random = randomPage()\n    }\n    function toTitleCase(str) {\n        return str.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n    }\n\n    return (\n        <div className=\"weather-outer-container\">\n            <h2 className=\"garden-detail-heading-category weather-heading\">\n                Current Weather\n            </h2>\n            <div className=\"weather-inner-container\">\n                <div className=\"weather-content-container\">\n                    <div>\n                        <p className=\"weather-current-temp\">\n                            {weatherData.current.temp.toFixed(0)}&#176;\n                        </p>\n                    </div>\n                    <div className=\"weather-dew-feelslike-flex-container\">\n                        <div className=\"weather-dew-flex-container\">\n                            <p className=\"weather-dew-point-heading\">\n                                Dew Point:\n                            </p>{\" \"}\n                            <p className=\"weather-dew-point-temp\">\n                                {weatherData.current.dew_point.toFixed(0)}&#176;\n                            </p>\n                        </div>\n                        <div className=\"weather-feelslike-flex-container\">\n                            <p className=\"weather-feelslike-heading\">\n                                Feels like:\n                            </p>{\" \"}\n                            <p className=\"weather-feels-like-temp\">\n                                {weatherData.current.feels_like.toFixed(0)}\n                                &#176;\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"weather-humidity-uvi-flex-container\">\n                        <div className=\"weather-humidity-flex-container\">\n                            <p className=\"weather-humidity-heading\">\n                                Humidity:\n                            </p>{\" \"}\n                            <p className=\"weather-humidity\">\n                                {weatherData.current.humidity.toFixed(0)}%\n                            </p>\n                        </div>\n                        <div className=\"weather-uvi-flex-container\">\n                            <p className=\"weather-uvi-heading\">UVI:</p>{\" \"}\n                            <p className=\"weather-uvi\">\n                                {weatherData.current.uvi.toFixed(0)}\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"weather-desc-container\">\n                        {weatherData.current.weather.map((weather) => {\n                            return (\n                                <>\n                                    <img\n                                        className=\"weather-icon\"\n                                        src={`http://openweathermap.org/img/wn/${weather.icon}@2x.png`}\n                                    />\n                                    <p className=\"weather-desc\">\n                                        {\" \"}\n                                        {toTitleCase(weather.description)}\n                                    </p>\n                                </>\n                            );\n                        })}\n                    </div>\n                    <div>{/* Sunrise: {sunrise} */}</div>\n\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WeatherDashboard;\n","import React from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport Cookie from \"js-cookie\";\nimport \"./GardenDetail.css\";\nimport { Spinner, Button, Collapse, Modal } from \"react-bootstrap\";\nimport { FiEdit } from \"react-icons/fi\";\nimport RichTextEditor from \"./GardenNotes\";\nimport WeatherDashboard from \"./WeatherDashboard\";\n\nfunction GardenDetail(props) {\n    const [userGarden, setUserGarden] = useState();\n    // const [open, setOpen] = useState(true);\n    const [isEditing, setIsEditing] = useState(false);\n    const [rename, setRename] = useState(\"\");\n    const [scrollView, setScrollView] = useState(false);\n\n    const values = [true];\n    const [fullscreen, setFullscreen] = useState(true);\n    const [show, setShow] = useState(false);\n\n    function handleShow(breakpoint) {\n        setFullscreen(breakpoint);\n        setShow(true);\n        setScrollView(true);\n    }\n\n    useEffect(() => {\n        grabUserGarden();\n        props.setShowNav();\n    }, []);\n\n    async function grabUserGarden() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"GARDEN LIST FAIL\", response);\n        } else {\n            const data = await response.json();\n            setUserGarden(data);\n        }\n    }\n\n    function handleEditVegetablesClick() {\n        props.history.push(`/${props.match.params.garden}/vegetables/`);\n    }\n\n    function handleEditSoilClick() {\n        props.history.push(`/${props.match.params.garden}/soil/`);\n    }\n\n    function handleEditNameClick() {\n        setIsEditing(true);\n    }\n\n    function handleChange(e) {\n        setRename(e.target.value);\n        console.log(rename);\n    }\n\n    function print() {\n        window.print();\n    }\n\n    function handlePrintClick() {\n        setScrollView(false);\n        setTimeout(() => {\n            print();\n        });\n        setTimeout(() => {\n            setScrollView(true);\n        });\n    }\n\n    async function handleRenameClick() {\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({ name: rename }),\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"RENAME FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"RENAME SUCCESS\", data);\n            setIsEditing(false);\n            setUserGarden({ ...userGarden, [\"name\"]: rename });\n        }\n    }\n\n    function handleCloseRename() {\n        setIsEditing(false);\n    }\n\n    function handleSummaryClick() {\n        props.history.push(`/${props.match.params.garden}/summary/`);\n    }\n\n    function handleEditLayoutClick() {\n        props.history.push(`/${props.match.params.garden}/layout`);\n    }\n\n    function handleEditVarietiesClick() {\n        props.history.push(`/${props.match.params.garden}/varieties`);\n    }\n\n    function formatDate(date) {\n        const splitDate = date.split(\"T\")[0].split('-')\n        const year = splitDate.shift();\n        splitDate.push(year)\n        return splitDate.join(\"-\")\n    }\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/\" />\n     }\n\n\n    if (!userGarden) {\n        return (\n            <Spinner\n                animation=\"border\"\n                variant=\"success\"\n                className=\"garden-detail-spinner\"\n            />\n        );\n    }\n\n\n    return (\n        <div className=\"garden-detail-outer-container\">\n            <div className=\"garden-detail-inner-container\">\n                <div className=\"garden-detail-background-container\" id={show ? \"hide\" : \"\"}>\n                    <div className=\"garden-detail-upper-body-container\"></div>\n                    {isEditing ? (\n                        <div>\n                            <h4 className=\"garden-detail-rename-heading\">Update Garden Name:</h4>\n                            <div className=\"garden-detail-rename-container\">\n                                <input\n                                    type=\"text\"\n                                    value={rename}\n                                    onChange={handleChange}\n                                    className=\"form-control garden-detail-rename-input\"\n                                />\n                                <button\n                                    onClick={handleRenameClick}\n                                    className=\"btn btn-success garden-detail-rename-btn\"\n                                >\n                                    Rename\n                                </button>\n                                <button\n                                    className=\"btn btn-danger garden-detail-close-rename-btn\"\n                                    onClick={handleCloseRename}\n                                >\n                                    X\n                                </button>\n                            </div>\n                        </div>\n                    ) : (\n                        <h3 className=\"garden-detail-garden-name\">\n                            {userGarden.name.toUpperCase()}{\" \"}\n                            <FiEdit\n                                className=\"garden-detail-edit-btn\"\n                                onClick={handleEditNameClick}\n                            />\n                        </h3>\n                    )}\n                    <p className=\"garden-detail-date\">\n                        Created: {formatDate(userGarden.created_at)}\n                    </p>\n                    <div className=\"garden-detail-body-container\">\n                        <div className=\"garden-detail-view-summary\">\n                            <p className=\"garden-detail-view-summary-p\">\n                                To view the summary report for this garden,\n                                please click{\" \"}\n                                <button\n                                    className=\"garden-detail-summary-btn\"\n                                    onClick={handleSummaryClick}\n                                >\n                                    here\n                                </button>\n                                .\n                            </p>\n                        </div>\n                        <div className=\"garden-detail-upper-container\">\n                            <div className=\"garden-detail-upper-right\">\n                                <RichTextEditor userGardenID={userGarden.id} />\n                            </div>\n                            <div className=\"garden-detail-weather-container\">\n                                <WeatherDashboard userGarden={userGarden} />\n                            </div>\n                        </div>\n                        <div className=\"garden-detail-grid-container-2\">\n                            <div className=\"garden-detail-upper-left\">\n                                <h4 className=\"garden-detail-soil-heading garden-detail-heading-category\">\n                                    Soil{\" \"}\n                                    <FiEdit\n                                        className=\"garden-detail-edit-btn\"\n                                        onClick={handleEditSoilClick}\n                                    />\n                                </h4>\n                                <div className=\"garden-detail-soil-subcontainer\">\n                                    <p>\n                                        <strong className=\"garden-detail-strong-tag\">\n                                            Characteristics:{\" \"}\n                                        </strong>\n                                        {userGarden.soil_details === null\n                                            ? \"  Soil Type not selected\"\n                                            : userGarden.soil_details\n                                                  .characteristics}\n                                    </p>\n                                    <p>\n                                        <strong className=\"garden-detail-strong-tag\">\n                                            Recommendations:{\" \"}\n                                        </strong>\n                                        {userGarden.soil_details === null\n                                            ? \"  Soil Type not selected\"\n                                            : userGarden.soil_details\n                                                  .recommendations}\n                                    </p>\n\n                                    {/* <Button\n                            onClick={() => setOpen(!open)}\n                            aria-controls=\"example-collapse-text\"\n                            aria-expanded={open}\n                            className=\"btn btn-success flagship-btn\"\n                        >\n                            Vegetables Card View\n                        </Button> */}\n                                </div>\n                            </div>\n\n                            <div className=\"garden-detail-layout-container-flex\">\n                                <h4 className=\"garden-detail-heading-category garden-detail-layout-heading\">\n                                    Layout{\" \"}\n                                    <FiEdit\n                                        className=\"garden-detail-edit-btn\"\n                                        onClick={handleEditLayoutClick}\n                                    />\n                                </h4>\n                                <div className=\"garden-detail-layout-container\">\n                                <p className=\"garden-detail-layout-desc\">\n                                {\"   \"}You have sketched the following layout\n                                        of your garden below. If you would like\n                                        to download the sketch you drew, download it {\" \"}\n                                        <span>\n                                            <a\n                                                href={userGarden.layout}\n                                                download\n                                                className=\"layout-download-image\"\n                                            >\n                                                here!\n                                            </a>{\" \"}\n                                        </span>\n                                    </p>\n                                    <div className=\"garden-detail-image-container\">\n                                        <img\n                                            src={userGarden.layout}\n                                            className=\"garden-detail-layout-image\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"garden-detail-collapse-container\">\n                        <h3\n                            className=\"garden-detail-heading-category\"\n                            id=\"garden-detail-vegetable-heading\"\n                        >\n                            Vegetables{\" \"}\n                            <FiEdit\n                                className=\"garden-detail-vegetable-edit\"\n                                onClick={handleEditVegetablesClick}\n                            />\n                        </h3>\n                        {values.map((v, idx) => (\n                            <button\n                                key={idx}\n                                className=\"me-2 btn btn-success flagship-btn mt-4\"\n                                onClick={() => handleShow(v)}\n                            >\n                                Vegetables Table View\n                                {typeof v === \"string\" &&\n                                    `below ${v.split(\"-\")[0]}`}\n                            </button>\n                        ))}\n                        <div className=\"garden-detail-vegetable-grid-container\">\n                            {!show\n                                ? userGarden.vegetables_details.map(\n                                      (vegetable) => {\n                                          return (\n                                              <div className=\"garden-detail-vegetable\">\n                                                  <h5 className=\"garden-detail-vegetable-name\">\n                                                      {vegetable.name}\n                                                  </h5>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Plant with:\n                                                      </span>{\" \"}\n                                                      {vegetable.companions}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Do NOT plant with:\n                                                      </span>{\" \"}\n                                                      {vegetable.adversaries}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Sun Exposure:\n                                                      </span>{\" \"}\n                                                      {vegetable.exposure ===\n                                                      \"BO\"\n                                                          ? \"Full Sun And/Or Partial Sun\"\n                                                          : vegetable.exposure ===\n                                                            \"FS\"\n                                                          ? \"Full Sun\"\n                                                          : \"Partial Sun\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Heat Tolerant:\n                                                      </span>{\" \"}\n                                                      {vegetable.heat_tolerant\n                                                          ? \"Yes\"\n                                                          : \"No\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Drought Tolerant:\n                                                      </span>{\" \"}\n                                                      {vegetable.drought_tolerant\n                                                          ? \"Yes\"\n                                                          : \"No\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Life Cycle:\n                                                      </span>{\" \"}\n                                                      {vegetable.life_cycle ===\n                                                      \"AN\"\n                                                          ? \"Annual\"\n                                                          : vegetable.life_cycle ===\n                                                            \"BI\"\n                                                          ? \"Biennial\"\n                                                          : \"Perennial\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Seasonality:\n                                                      </span>{\" \"}\n                                                      {vegetable.seasonality ===\n                                                      \"CS\"\n                                                          ? \"Cool-Season\"\n                                                          : \"Warm-Season\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                      <FiEdit\n                                        className=\"garden-detail-edit-btn\"\n                                        onClick={handleEditVarietiesClick}\n                                    /> Varieties :\n                                                      </span>{\" \"}\n                                                      {userGarden.varieties ===\n                                                      null\n                                                          ? \"\"\n                                                          : userGarden\n                                                                .varieties[\n                                                                vegetable.name\n                                                            ] === undefined\n                                                          ? \" \"\n                                                          : userGarden.varieties[\n                                                                vegetable.name\n                                                            ].map((element) => {\n                                                                let varietiesPerVegetable =\n                                                                    [];\n                                                                for (const prop in element) {\n                                                                    varietiesPerVegetable.push(\n                                                                        prop\n                                                                    );\n                                                                }\n                                                                return varietiesPerVegetable.map(\n                                                                    (\n                                                                        variety\n                                                                    ) => {\n                                                                        return (\n                                                                            <div>\n                                                                                <p>\n                                                                                    {\n                                                                                        variety\n                                                                                    }\n                                                                                </p>\n                                                                            </div>\n                                                                        );\n                                                                    }\n                                                                );\n                                                            })}\n                                                  </p>\n                                              </div>\n                                          );\n                                      }\n                                  )\n                                : \"\"}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"summary-vegetable-container\">\n                <Modal\n                    show={show}\n                    fullscreen={fullscreen}\n                    onHide={() => setShow(false)}\n                    id={scrollView ? \"scroll\" : \"\"}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Your Vegetables</Modal.Title>\n                        <Button\n                            className=\"btn btn-success summary-print-vegetables\"\n                            onClick={handlePrintClick}\n                        >\n                            Print Your Vegetables\n                        </Button>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"summary-vegetable\">\n                            <table className=\"summary-table\">\n                                <thead>\n                                    <tr>\n                                        <th>Your Vegetable</th>\n                                        <th>Sun Exposure</th>\n                                        <th>Heat Tolerant</th>\n                                        <th>Drought Tolerant</th>\n                                        <th>Life Cycle</th>\n                                        <th>Seasonality</th>\n                                        <th>Varieties</th>\n                                        <th>Companions</th>\n                                        <th>Adversaries</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {userGarden.vegetables_details.length === 0\n                                        ? \"\"\n                                        : userGarden.vegetables_details.map(\n                                              (vegetable) => {\n                                                  return (\n                                                      <tr>\n                                                          <td className=\"summary-td\">\n                                                              <strong>\n                                                                  {\n                                                                      vegetable.name\n                                                                  }\n                                                              </strong>\n                                                          </td>\n                                                          <td className=\"summary-td\">\n                                                              {vegetable.exposure ===\n                                                              \"BO\"\n                                                                  ? \"Full Sun And/Or Partial Sun\"\n                                                                  : vegetable.exposure ===\n                                                                    \"FS\"\n                                                                  ? \"Full Sun\"\n                                                                  : \"Partial Sun\"}\n                                                          </td>\n                                                          <td className=\"summary-td\">\n                                                              {\" \"}\n                                                              {vegetable.heat_tolerant\n                                                                  ? \"Yes\"\n                                                                  : \"No\"}\n                                                          </td>\n                                                          <td className=\"summary-td\">\n                                                              {vegetable.drought_tolerant\n                                                                  ? \"Yes\"\n                                                                  : \"No\"}\n                                                          </td>\n                                                          <td className=\"summary-td\">\n                                                              {vegetable.seasonality ===\n                                                              \"CS\"\n                                                                  ? \"Cool-Season\"\n                                                                  : \"Warm-Season\"}\n                                                          </td>\n                                                          <td className=\"summary-td\">\n                                                              {vegetable.life_cycle ===\n                                                              \"AN\"\n                                                                  ? \"Annual\"\n                                                                  : vegetable.life_cycle ===\n                                                                    \"BI\"\n                                                                  ? \"Biennial\"\n                                                                  : \"Perennial\"}\n                                                          </td>\n                                                          <td className=\"summary-td\">\n                                                              <span className=\"summary-category\"></span>{\" \"}\n                                                              {userGarden.varieties ===\n                                                              null\n                                                                  ? \"None\"\n                                                                  : userGarden\n                                                                        .varieties[\n                                                                        vegetable\n                                                                            .name\n                                                                    ] ===\n                                                                    undefined\n                                                                  ? \"None\"\n                                                                  : userGarden.varieties[\n                                                                        vegetable\n                                                                            .name\n                                                                    ].map(\n                                                                        (\n                                                                            element\n                                                                        ) => {\n                                                                            let varietiesPerVegetable =\n                                                                                [];\n                                                                            for (const prop in element) {\n                                                                                varietiesPerVegetable.push(\n                                                                                    prop\n                                                                                );\n                                                                            }\n                                                                            return varietiesPerVegetable.map(\n                                                                                (\n                                                                                    variety\n                                                                                ) => {\n                                                                                    return (\n                                                                                        <p>\n                                                                                            {\n                                                                                                variety\n                                                                                            }\n                                                                                        </p>\n                                                                                    );\n                                                                                }\n                                                                            );\n                                                                        }\n                                                                    )}\n                                                          </td>\n                                                          {vegetable.companions ===\n                                                          null ? (\n                                                              <td className=\"summary-td summary-td summary-companions\">\n                                                                  None\n                                                              </td>\n                                                          ) : (\n                                                              <td\n                                                                  className=\"companion-list\"\n                                                                  id=\"companion-list\"\n                                                              >\n                                                                  {\n                                                                      vegetable.companions\n                                                                  }\n                                                              </td>\n                                                          )}\n                                                          {vegetable.adversaries ===\n                                                          null ? (\n                                                              <td className=\"summary-td\">\n                                                                  None\n                                                              </td>\n                                                          ) : (\n                                                              <td\n                                                                  className=\"summary-td\"\n                                                                  id=\"adversary-list\"\n                                                              >\n                                                                  {\n                                                                      vegetable.adversaries\n                                                                  }\n                                                              </td>\n                                                          )}\n                                                      </tr>\n                                                  );\n                                              }\n                                          )}\n                                </tbody>\n                                <tfoot></tfoot>\n                            </table>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(GardenDetail);\n","import \"./Soil.css\";\nimport React from \"react\";\nimport EsriLoaderReact from \"esri-loader-react\";\nimport Cookie from \"js-cookie\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { Button, Collapse } from \"react-bootstrap\";\n\nfunction Soil(props) {\n    const firstRender = useRef(true);\n    const [loaded, setLoaded] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [soil, setSoil] = useState({\n        id: null,\n        characteristics: \"\",\n        recommendations: \"\",\n        soil_order: \"\",\n    });\n    const [showDetails, setShowDetails] = useState(false);\n    const [coordinates, setCoordinates] = useState({\n        latitude: \"\",\n        longitude: \"\"\n    })\n\n    const soilDiv = useRef();\n\n    useEffect(() => {\n        props.setShowNav(true);\n    }, []);\n\n    useEffect(() => {\n        if (firstRender.current === true) {\n            firstRender.current = false;\n        } else {\n            getSoilDetails();\n            setShowDetails(true);\n\n            setTimeout(() => {\n                scrollToSoil();\n            }, 300);\n        }\n    }, [soil.soil_order]);\n\n    const options = {\n        url: \"https://js.arcgis.com/4.21/\",\n    };\n\n    async function getSoilDetails() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/soils/?soil=${soil.soil_order}`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SUCCESS\", data);\n            if (data.length === 0) {\n                console.log(\"soil selection failed\");\n            } else {\n                console.log(\"soil details success\", data);\n                setSoil({\n                    ...soil,\n                    id: data[0].id,\n                    characteristics: data[0].characteristics,\n                    recommendations: data[0].recommendations,\n                });\n            }\n        }\n    }\n\n\n    async function handleSaveSoilClick() {\n\n        console.log(\"COORDINATES\", coordinates)\n\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({ soil: soil.id, location: coordinates }),\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (!response.ok) {\n            console.log(\"SOIL PATCH FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SOIL PATCH SUCCESS\", data);\n            props.history.push(`/${data.id}/vegetables/`);\n        }\n    }\n\n    function scrollToSoil() {\n        soilDiv.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"start\",\n        });\n    }\n\n    setTimeout(() => {\n        setLoaded(true);\n    });\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/\" />\n     }\n\n    return (\n        <div className=\"soil-outer-container\">\n            <div className=\"soil-inner-container\">\n                <div className=\"soil-heading-map-flex-container\">\n                    <div\n                        className=\"soil-heading-container\"\n                        // id={maxWidth ? \"max-width\" : \"\"}\n                    >\n                        <div className=\"soil-heading\">\n                            {/* <h2 className=\"soil-heading\">Find your Soil Type</h2> */}\n                            <p className=\"soil-description\">\n                                <strong>In this step</strong>, you will use the\n                                soil map below to find your soil type by\n                                clicking on your desired location. When you\n                                click on a location, the soil type at that\n                                precise location will be saved and the\n                                characateristics and recommendations for your\n                                soil will appear below the soil map.\n                            </p>\n                        </div>\n                    </div>\n\n                    <div\n                        className=\"soil-map-container\"\n                    >\n                            <div className=\"map-view\">\n                                <EsriLoaderReact\n                                    options={options}\n                                    modulesToLoad={[\n                                        \"esri/config\",\n                                        \"esri/Map\",\n                                        \"esri/views/MapView\",\n                                        \"esri/layers/FeatureLayer\",\n                                        \"esri/widgets/Locate\",\n                                        \"esri/geometry/Point\",\n                                    ]}\n                                    onReady={({\n                                        loadedModules: [\n                                            esriConfig,\n                                            Map,\n                                            MapView,\n                                            FeatureLayer,\n                                            Locate,\n                                            Point,\n                                        ],\n                                        containerNode,\n                                    }) => {\n                                        esriConfig.apiKey =\n                                            \"AAPK6b9ac47a7781479997be4a3c4f55379anHD405J2ju5NAgpM61QOKL_3OuxNpXIuC0e9p5uaVHSyQ7UQMwWHIuxYbSixZnev\";\n\n                                        const map = new Map({\n                                            basemap: \"arcgis-topographic\",\n                                        });\n\n                                        const view = new MapView({\n                                            container: containerNode,\n                                            map: map,\n                                            center: [-82.4, 34.8518],\n                                            zoom: 13,\n                                        });\n\n                                        const soilsLayer = new FeatureLayer({\n                                            url: \"https://landscape11.arcgis.com/arcgis/rest/services/USA_Soils_Map_Units/featureserver/0\",\n                                            outFields: [\"taxorder\"],\n                                            opacity: 0.5,\n                                        });\n                                        map.add(soilsLayer, 0);\n\n                                        const locate = new Locate({\n                                            view: view,\n                                            useHeadingEnabled: false,\n                                            goToOverride: function (\n                                                view,\n                                                options\n                                            ) {\n                                                options.target.scale = 1500;\n                                                return view.goTo(\n                                                    options.target\n                                                );\n                                            },\n                                        });\n                                        let soilOrder1;\n                                        let soilOrder2;\n                                        view.on(\"immediate-click\", (event) => {\n                                            const latitude =\n                                                event.mapPoint.latitude;\n                                            const longitude =\n                                                event.mapPoint.longitude;\n                                            const screenPoint = view.toScreen(\n                                                new Point({\n                                                    latitude,\n                                                    longitude,\n                                                })\n                                            );\n                                            setCoordinates({\n                                                latitude: latitude,\n                                                longitude: longitude\n                                            })\n                                            view.hitTest(screenPoint).then(\n                                                (hitTestResult) => {\n                                                    soilOrder1 =\n                                                        hitTestResult.results[0]\n                                                            .graphic.attributes\n                                                            .esrisymbology;\n                                                    if (\n                                                        soilOrder1 !==\n                                                        soilOrder2\n                                                    ) {\n                                                        setSoil({\n                                                            id: null,\n                                                            soil_order:\n                                                                soilOrder1,\n                                                            characteristics: \"\",\n                                                            recommendations: \"\",\n                                                        });\n                                                        soilOrder2 = soilOrder1;\n                                                    } else {\n                                                        soilOrder2 = soilOrder1;\n                                                    }\n                                                }\n                                            );\n                                        });\n\n                                        view.ui.add(locate, \"top-left\");\n                                    }}\n                                />\n                            </div>\n                    </div>\n                </div>\n                <div\n                    className=\"soil-lower-half-container\"\n                    id={showDetails ? \"\" : \"hide\"}\n                >\n                    <div className=\"display-results-container\">\n                        <div\n                            className=\"display-characteristics-container\"\n                            ref={soilDiv}\n                        >\n                            <h2 className=\"display-characteristics-heading\">\n                                Soil Characteristics:\n                            </h2>\n                            <p>{soil.characteristics}</p>\n                        </div>\n                        <div className=\"display-recommendations-container\">\n                            <h2 className=\"display-recommendations-heading\">\n                                Soil Recommendations:\n                            </h2>\n                            <p>{soil.recommendations}</p>\n                        </div>\n                    </div>\n                    <button\n                        id=\"soil-save-btn\"\n                        className=\"btn flagship-btn\"\n                        onClick={handleSaveSoilClick}\n                    >\n                        Save & Continue\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Soil);\n","import React from \"react\";\nimport \"./FilteredVegetableList.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from 'react';\n\n\n\n\n\nexport default function FilteredVegetableList(props) {\n\n    const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\n\n\n    return (\n        <div className=\"filtered-vegetables-container\">\n            {props.showNoResultsAlert ? <div\n                className=\"filtered-vegetables-no-results alert alert-danger\"\n                role=\"alert\"\n            >\n                NO RESULTS BASED ON YOUR SEARCH\n            </div> : \"\"}\n            {props.filteredVegetables.length === 0 ? (\n                \"\"\n            ) : (\n                <h2 className=\"filtered-vegetables-heading\">\n                    BASED ON YOUR SEARCH:\n                </h2>\n            )}\n            <div className=\"filtered-vegetables-grid-container\">\n                {props.filteredVegetables === undefined\n                    ? \"\"\n                    : props.filteredVegetables.map((vegetable) => {\n                          if (\n                              props.userVegetables.some(\n                                  (element) => element.name === vegetable.name\n                              )\n                          ) {\n\n                              return (\n                                  <div\n                                      className=\"filtered-vegetable already-added-container\"\n                                      key={uuidv4()}\n                                  >\n                                      <p className=\"filtered-vegetable-name already-added-heading\">\n                                          {vegetable.name}\n                                      </p>\n                                  </div>\n                              );\n                          } else {\n\n                              return (\n                                  <div\n                                      className=\"filtered-vegetable\"\n                                      key={uuidv4()}\n                                  >\n                                      <p className=\"filtered-vegetable-name\">\n                                          {vegetable.name}\n                                      </p>\n                                      <button\n                                          className=\"btn btn-success filtered-add-btn\"\n                                          onClick={() =>\n                                              props.addToUserList(vegetable.id)\n                                          }\n                                      >\n                                          Add\n                                      </button>\n                                  </div>\n                              );\n                          }\n                      })}\n            </div>\n        </div>\n    );\n}\n","import React from 'react'\nimport \"./UserVegetableList.css\"\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function UserVegetableList(props) {\n    return (\n        <div className=\"user-vegetable-list-container\">\n        {props.userVegetables.length === 0 ? \"\" : <h2 className=\"user-vegetable-heading\">YOUR VEGETABLES:</h2>}\n            <div className=\"user-vegetables-grid-container\">\n            {props.userVegetables === undefined\n                ? \"\"\n                : props.userVegetables.map((vegetable) => {\n                      return (<>\n                          {console.log(\"VEGGIE\",vegetable)}\n                          <div className=\"user-vegetable\" key={uuidv4()}>\n                              <p className=\"user-vegetable-name\">{vegetable.name}</p>\n                              <button className=\"btn btn-success user-add-vegetable-btn\" onClick={() => props.removeFromUserList(vegetable.id)}>Remove</button>\n                          </div></>\n                      );\n                  })}\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Vegetables.css\";\nimport Cookie from \"js-cookie\";\nimport { useState, useEffect, useRef } from \"react\";\nimport FilteredVegetableList from \"./FilteredVegetableList\";\nimport UserVegetableList from \"./UserVegetableList\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Button, Collapse, Fade } from \"react-bootstrap\";\nimport { ImArrowUp } from \"react-icons/im\";\n\nfunction Vegetables(props) {\n\n    const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\n\n    let queryString = \"\";\n    let pkValues = [];\n\n    const [filterData, setFilterData] = useState({\n        name: \"\",\n        exposure: \"\",\n        heat_tolerant: \"\",\n        drought_tolerant: \"\",\n        life_cycle: \"\",\n        seasonality: \"\",\n    });\n\n    const [filteredVegetables, setFilteredVegetables] = useState([]);\n    const [userVegetables, setUserVegetables] = useState([]);\n    const [showArrow, setShowArrow] = useState(false);\n    const filteredVegScroll = useRef();\n    const filterFormScroll = useRef();\n\n    // const [showNoResultsAlert, setNoResultsAlert] = useState(false)\n\n    useEffect(() => {\n        getUsersVegetableList();\n    }, []);\n\n    useEffect(() => {\n        props.setShowNav(true);\n    }, []);\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n      }, [])\n\n    async function getUsersVegetableList() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"GETTING USER VEGETABLES FAILED\", response);\n        } else {\n            const data = await response.json();\n            setUserVegetables(data.vegetables_details);\n        }\n    }\n\n    async function getVegetableDetails() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/vegetables?${queryString}`, options);\n        if (response.ok === false) {\n            console.log(\"failed\", response);\n        } else {\n            const data = await response.json();\n            if (data.length === 0) {\n                // setNoResultsAlert(true);\n                // setTimeout(()=> {\n                //     setNoResultsAlert(false)\n                // }, 1000)\n            }\n            setFilteredVegetables(data);\n        }\n    }\n\n    function handleChange(e) {\n        if (e.target.type === \"checkbox\" && !e.target.checked) {\n            let updatedFilterData = { ...filterData, [e.target.name]: \"\" };\n            setFilterData(updatedFilterData);\n        } else if (e.target.type === \"checkbox\" && e.target.checked) {\n            let updatedFilterData = { ...filterData, [e.target.name]: \"True\" };\n            setFilterData(updatedFilterData);\n        } else {\n            let { name, value } = e.target;\n            let updatedFilterData = { ...filterData, [name]: value };\n            setFilterData(updatedFilterData);\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (filterData.name.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString = queryString + `name=${filterData.name}`;\n        }\n        if (filterData.exposure.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString = queryString + `exposure=${filterData.exposure}`;\n        }\n        if (filterData.heat_tolerant.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString =\n                queryString + `heat_tolerant=${filterData.heat_tolerant}`;\n        }\n        if (filterData.drought_tolerant.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString =\n                queryString + `drought_tolerant=${filterData.drought_tolerant}`;\n        }\n        if (filterData.life_cycle.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString = queryString + `life_cycle=${filterData.life_cycle}`;\n        }\n        if (filterData.seasonality.length > 0) {\n            if (queryString.length > 0) {\n                queryString += \"&\";\n            }\n            queryString = queryString + `seasonality=${filterData.seasonality}`;\n        }\n\n        getVegetableDetails();\n        setShowArrow(true);\n\n        queryString = \"\";\n        setTimeout(() => {\n            scrollToFiltered();\n        }, 300);\n\n        // setFilterData({\n        //     name: \"\",\n        //     exposure: \"\",\n        //     heat_tolerant: \"\",\n        //     drought_tolerant:\"\" ,\n        //     life_cycle: \"\",\n        //     seasonality: \"\",\n        // });\n\n        console.log(\"FD\", filterData)\n    }\n\n    function addToUserList(id) {\n        let index = filteredVegetables.findIndex((element) => element.id == id);\n        console.log(\"INDEX\", index);\n        let updatedFilteredVegetables = [...filteredVegetables];\n        let userVeggieToAdd = updatedFilteredVegetables.splice(index, 1);\n        setUserVegetables([...userVegetables, userVeggieToAdd[0]]);\n        setShowSuccessAlert(true);\n    }\n\n    function removeFromUserList(id) {\n        let index = userVegetables.findIndex((element) => element.id === id);\n        let updatedUserVegetables = [...userVegetables];\n        updatedUserVegetables.splice(index, 1);\n        setUserVegetables(updatedUserVegetables);\n    }\n\n    function grabPKvalues(vegetables) {\n        for (let i = 0; i < vegetables.length; i++) {\n            pkValues.push(vegetables[i].id);\n        }\n    }\n\n    function scrollToFiltered() {\n        filteredVegScroll.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"start\",\n        });\n    }\n    function scrollToForm() {\n        filterFormScroll.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"start\",\n        });\n    }\n\n    async function handleSaveVegClick() {\n        grabPKvalues(userVegetables);\n\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({ vegetables: pkValues }),\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"VEG PATCH FAILED\", response);\n        } else {\n            const data = await response.json();\n            props.history.push(`/${data.id}/varieties/`);\n        }\n    }\n\n    function handleArrowClick() {\n        scrollToForm();\n    }\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/\" />\n     }\n\n    return (\n        <div className=\"vegetables-outer-container\">\n            <div className=\"vegetables-inner-container\">\n                <div className=\"vegetables-heading-form-flex-container \">\n                    <div\n                        className=\"vegetables-heading-container\"\n                    >\n                        <p className=\"vegetables-description\">\n                            <strong>In this step</strong>, you will pick out\n                            your potential vegetables by filtering out for the\n                            specifc needs of your garden. As you are using the\n                            filter, try to visualize the different parts of your\n                            garden. For example, one area might be shady, with\n                            poor accessibility to water, therefore, you would\n                            check the 'Drought Tolerant' box and, then check the\n                            'Partial Sun' from the dropdown. As you visualize\n                            the differing needs of your garden landscape, come\n                            back to the form and find the most suitable veggies!{\" \"}\n                        </p>\n\n                    </div>\n\n                    <div\n                        className=\"vegetables-form-container\"\n                    >\n\n                            <form\n                                action=\"\"\n                                className=\"form-control vegetables-form\"\n                                onSubmit={handleSubmit}\n                                ref={filterFormScroll}\n                            >\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">\n                                        Name (Optional):\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        onChange={handleChange}\n                                        className=\"form-control\"\n                                        value={filterData.name}\n                                    />\n                                </div>\n\n                                <div className=\"form-group mt-2\">\n                                    <label htmlFor=\"exposure\">\n                                        Sun Exposure\n                                    </label>\n                                    <select\n                                        name=\"exposure\"\n                                        id=\"exposure\"\n                                        onChange={handleChange}\n                                        className=\"form-control mt-2\"\n                                        value={filterData.exposure}\n                                    >\n                                        <option value=\"\">ALL</option>\n                                        <option value=\"BO\">\n                                            Thrive in Both Full & Partial Sun\n                                        </option>\n                                        <option value=\"FS\">Full Sun</option>\n                                        <option value=\"PS\">Partial Sun</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"vegetables-checkboxes-container\">\n                                    <div className=\"form-group mt-2 vegetables-checkbox-group\">\n                                        <input\n                                            type=\"checkbox\"\n                                            id=\"heat_tolerant\"\n                                            name=\"heat_tolerant\"\n                                            value=\"TRUE\"\n                                            onChange={handleChange}\n                                        />\n                                        <label htmlFor=\"heat_tolerant\" className=\"heat-tolerant-label\">\n                                            Heat Tolerant\n                                        </label>\n                                    </div>\n\n                                    <div className=\"form-group mt-2 vegetables-checkbox-group \">\n                                        <input\n                                            type=\"checkbox\"\n                                            id=\"drought_tolerant\"\n                                            name=\"drought_tolerant\"\n                                            value={filterData.drought_tolerant}\n                                            onChange={handleChange}\n                                        />\n                                        <label htmlFor=\"drought_tolerant\" className=\"drought-tolerant-label\">\n                                            Drought Tolerant\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"form-group mt-2\">\n                                    <label htmlFor=\"life_cycle\">\n                                        Life Cycle\n                                    </label>\n                                    <select\n                                        name=\"life_cycle\"\n                                        id=\"life_cycle\"\n                                        onChange={handleChange}\n                                        className=\"form-control\"\n                                        value={filterData.life_cycle}\n                                    >\n                                        <option value=\"\">All</option>\n                                        <option value=\"AN\">Annual</option>\n                                        <option value=\"BI\">Biennial</option>\n                                        <option value=\"PE\">Perennial</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group mt-2\">\n                                    <label htmlFor=\"seasonality\">\n                                        Seasonality\n                                    </label>\n                                    <select\n                                        name=\"seasonality\"\n                                        id=\"seasonality\"\n                                        onChange={handleChange}\n                                        className=\"form-control\"\n                                        value={filterData.seasonality}\n                                    >\n                                        <option value=\"\">All</option>\n                                        <option value=\"CS\">Cool Season</option>\n                                        <option value=\"WS\">Warm Season</option>\n                                    </select>\n                                </div>\n\n                                <button className=\"btn btn-success vegetable-form-btn\">\n                                    Search\n                                </button>\n                            </form>\n                    </div>\n                </div>\n                <div ref={filteredVegScroll}>\n                    <FilteredVegetableList\n                        filteredVegetables={filteredVegetables}\n                        userVegetables={userVegetables}\n                        addToUserList={addToUserList}\n                        // showNoResultsAlert={showNoResultsAlert}\n                        showSuccessAlert={showSuccessAlert}\n                    />\n                </div>\n                <div className=\"vegetables-user-list-container\">\n                    <UserVegetableList\n                        userVegetables={userVegetables}\n                        removeFromUserList={removeFromUserList}\n                    />\n                    <ImArrowUp\n                        className=\"vegetables-arrow-scroll\"\n                        id={showArrow ? \"\" : \"hide\"}\n                        onClick={handleArrowClick}\n                    />\n                </div>\n                    <button\n                        className=\"btn flagship-btn vegetables-btn\"\n                        onClick={handleSaveVegClick}\n                    >\n                        Save & Continue\n                    </button>\n\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Vegetables);\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport Cookie from \"js-cookie\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport \"./Companions.css\";\n\nfunction Companions(props) {\n    const [userVegetables, setUserVegetables] = useState();\n    let [queryString, setQueryString] = useState(\"\");\n    const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n    // const [queryVegetable, setQueryVegetable] = useState();\n    const firstRender1 = useRef(true);\n    const firstRender2 = useRef(true);\n\n    useEffect(() => {\n        getGardenDetails();\n    }, []);\n\n    useEffect(() => {\n        if (firstRender1.current) {\n            firstRender1.current = false;\n        } else {\n            getVegetableDetails();\n        }\n    }, [queryString]);\n\n    useEffect(() => {\n        if (firstRender2.current) {\n            firstRender2.current = false;\n        } else {\n            addNewVegetableToGarden();\n        }\n    }, [userVegetables]);\n\n    function grabPKvalues(vegetables) {\n        return vegetables.map((vegetable) => vegetable.id);\n    }\n\n    async function getGardenDetails() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"GET DETAILS FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"GET DETAILS SUCCESS\", data);\n            setUserVegetables(data.vegetables_details);\n        }\n    }\n\n    async function getVegetableDetails() {\n        queryString = `name=${queryString}`;\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(`/api/vegetables?${queryString}`, options);\n        if (response.ok === false) {\n            console.log(\"failed\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SUCCESS QUERY\", data);\n\n            let duplicate = false;\n            userVegetables.forEach((vegetableObj) => {\n                if (vegetableObj.name === data[0].name) {\n                    duplicate = true;\n                }\n            });\n            if (!duplicate) {\n                let updatedGarden = [...userVegetables, data[0]];\n                setUserVegetables(updatedGarden);\n            }\n        }\n    }\n\n    function handleAddCompanion(e) {\n        let val = e.target.value;\n        setQueryString(val.trim());\n        window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' })\n        setShowSuccessAlert(true);\n        setTimeout(() => {\n            setShowSuccessAlert(false);\n        }, 800);\n    }\n\n    async function addNewVegetableToGarden() {\n        let pkValues = grabPKvalues(userVegetables);\n\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({ vegetables: pkValues }),\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"VEG PATCH FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"success yes\", data);\n        }\n    }\n\n    if (!userVegetables) {\n        return (\n            <Spinner\n                animation=\"border\"\n                variant=\"success\"\n                className=\"garden-detail-spinner\"\n            />\n        );\n    } else {\n        console.log(userVegetables);\n    }\n\n    return (\n        <div className=\"companions-container\">\n            {showSuccessAlert ? (\n                <div\n                    class=\"alert alert-success companions-save-alert\"\n                    role=\"alert\"\n                >\n                    Variety Saved!\n                </div>\n            ) : (\n                <div></div>\n            )}\n            <table>\n                <thead className=\"companions-thead\">\n                    <tr className=\"companions-tr\">\n                        <th className=\"companions-th\">Your Vegetable</th>\n                        <th className=\"companions-th\">Companions</th>\n                        <th className=\"companions-th\">Adversaries</th>\n                    </tr>\n                </thead>\n                <tbody className=\"companions-tbody\">\n                    {userVegetables.length === 0\n                        ? \"\"\n                        : userVegetables.map((vegetable) => {\n                              return (\n                                  <tr className=\"companions-tr\">\n                                      <td className=\"companions-td\">\n                                          <strong>{vegetable.name}</strong>\n                                      </td>\n                                      {vegetable.companions === null ? (\n                                          <td>None</td>\n                                      ) : (\n                                          <td id=\"companion-list\" className=\"companions-td\">\n                                              {vegetable.companions\n                                                  .split(\",\")\n                                                  .map((companion) => {\n                                                      return (\n                                                          <button\n                                                              value={companion}\n                                                              onClick={\n                                                                  handleAddCompanion\n                                                              }\n                                                              className=\"companion-vegetable-btn\"\n                                                          >\n                                                              {companion + \", \"}\n                                                          </button>\n                                                      );\n                                                  })}\n                                          </td>\n                                      )}\n                                      {vegetable.adversaries === null ? (\n                                          <td className=\"companions-td\">None</td>\n                                      ) : (\n                                          <td id=\"adversary-list\" className=\"companions-td\">\n                                              {vegetable.adversaries}\n                                          </td>\n                                      )}\n                                  </tr>\n                              );\n                          })}\n                </tbody>\n                <tfoot></tfoot>\n            </table>\n        </div>\n    );\n}\n\nexport default withRouter(Companions);\n","import React from \"react\";\nimport Companions from \"./Companions\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { NavLink, withRouter, Redirect } from \"react-router-dom\";\nimport \"./Layout.css\";\nimport Cookie from \"js-cookie\";\n\nfunction Layout(props) {\n    useEffect(() => {\n        props.setShowNav(true);\n    }, []);\n\n    const canvasRef = useRef(null);\n    const contextRef = useRef(null);\n    const [isDrawing, setIsDrawing] = useState(false);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = 550 * 2;\n        canvas.height = 650 * 2;\n        canvas.style.width = `${550}px`;\n        canvas.style.height = `${650}px`;\n\n        const context = canvas.getContext(\"2d\");\n        context.scale(2, 2);\n        context.lineCap = \"round\";\n        context.strokeStyle = \"black\";\n        context.lineWidth = 5;\n        contextRef.current = context;\n    }, []);\n\n    function startDrawing({ nativeEvent }) {\n        const { offsetX, offsetY } = nativeEvent;\n        contextRef.current.beginPath();\n        contextRef.current.moveTo(offsetX, offsetY);\n        setIsDrawing(true);\n    }\n    function finishDrawing() {\n        contextRef.current.closePath();\n        setIsDrawing(false);\n    }\n\n    function draw({ nativeEvent }) {\n        if (!isDrawing) {\n            return;\n        }\n        const { offsetX, offsetY } = nativeEvent;\n        contextRef.current.lineTo(offsetX, offsetY);\n        contextRef.current.stroke();\n    }\n\n    async function postCanvasLayout(formData) {\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: formData,\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"LAYOUT UPLOAD FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"LAYOUT UPLOAD SUCCESS\", data);\n        }\n    }\n\n    async function handleSaveCanvas() {\n        let imageBlob = await new Promise((resolve) =>\n            canvasRef.current.toBlob(resolve, \"image/png\")\n        );\n        const formData = new FormData();\n        formData.append(\"layout\", imageBlob, \"image.png\");\n        postCanvasLayout(formData);\n    }\n\n    function handleContinueClick() {\n        props.history.push(\"/summary\");\n    }\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/\" />\n     }\n\n    return (\n        <div className=\"layout-outer-container\">\n            <div className=\"layout-inner-container\">\n                <div className=\"layout-heading-container\">\n                    {/* <h2 className=\"layout-heading\">\n                Time to Figure out your Layout!\n            </h2> */}\n                    <p className=\"layout-description\">\n                        <strong>In this step</strong>, you will find the\n                        vegetables you have chosen in the table below along with\n                        the vegetables best pairings (companions) and worse\n                        pairings (adversaries). If you would like to add a\n                        companion plant, just click on the name and you will add\n                        it to your list of vegetables! Use the companion chart\n                        to think about how you want to lay out your garden.\n                        Then, use the canvas to the right to sketch out the\n                        placement of your beds and vegetables.\n                    </p>\n                </div>\n\n                <div className=\"layout-flex-container\">\n                    <div className=\"companion-layout-container\">\n                        <h2 className=\"layout-subheading\">PLANT PAIRING</h2>\n                        <Companions />\n                    </div>\n\n                    <div className=\"canvas-container\">\n                        <h2 className=\"layout-subheading\">SKETCH</h2>\n                        <canvas\n                            onMouseDown={startDrawing}\n                            onMouseUp={finishDrawing}\n                            onMouseMove={draw}\n                            ref={canvasRef}\n                            className=\"layout-canvas\"\n                        />\n                        <div className=\"layout-btn-container\">\n                            <button\n                                className=\"btn flagship-btn\"\n                                onClick={handleSaveCanvas}\n                            >\n                                Save Sketch to Profile\n                            </button>\n                            <NavLink\n                                to={`/${props.match.params.garden}/summary`}\n                            >\n                                <button\n                                    className=\"btn flagship-btn\"\n                                    onClick={handleContinueClick}\n                                >\n                                    Continue\n                                </button>\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Layout);\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./Summary.css\";\nimport Cookie from \"js-cookie\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Spinner, Modal, Button, Collapse } from \"react-bootstrap\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { saveAs } from \"file-saver\";\n\nfunction Summary(props) {\n    const [userGarden, setUserGarden] = useState();\n    const [scrollView, setScrollView] = useState(false);\n    // const [open, setOpen] = useState(false);\n    const values = [true];\n    const [fullscreen, setFullscreen] = useState(true);\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        grabUserGarden();\n        props.setShowNav(true);\n    }, []);\n\n    function handleShow(breakpoint) {\n        setFullscreen(breakpoint);\n        setShow(true);\n        setScrollView(true);\n    }\n\n    async function grabUserGarden() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"GARDEN LIST FAIL\", response);\n        } else {\n            const data = await response.json();\n            setUserGarden(data);\n        }\n    }\n\n    if (!userGarden) {\n        return (\n            <Spinner\n                animation=\"border\"\n                variant=\"success\"\n                className=\"garden-detail-spinner\"\n            />\n        );\n    }\n\n    console.log(\"SUMMARY PAGE GARDEN\", userGarden);\n\n    function print() {\n        window.print();\n    }\n\n    function handlePrintClick() {\n        setScrollView(false);\n        setTimeout(() => {\n            print();\n        });\n        setTimeout(() => {\n            setScrollView(true);\n        });\n    }\n\n    function handleEditVegetablesClick() {\n        props.history.push(`/${props.match.params.garden}/vegetables/`);\n    }\n\n    function formatDate(date) {\n        const splitDate = date.split(\"T\")[0].split(\"-\");\n        const year = splitDate.shift();\n        splitDate.push(year);\n        return splitDate.join(\"-\");\n    }\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/\" />\n     }\n\n    return (\n        <div className=\"summary-outer-container\">\n            <div className=\"summary-inner-container\">\n                <div className=\"summary-report-container\">\n                    <h2 className=\"summary-report-main-heading\">\n                        Garden Preparation Report\n                    </h2>\n                    <p className=\"summary-report-date\">\n                        {formatDate(userGarden.created_at)}\n                    </p>\n                    <div className=\"summary-soil-container\">\n                        <h3 className=\"summary-category-heading\">Soil</h3>\n                        <p className=\"summary-description\">\n                            <strong>Characteristics:</strong>{\" \"}\n                            {userGarden.soil_details\n                                ? userGarden.soil_details.characteristics\n                                : \"\"}\n                        </p>\n                        <p className=\"summary-description\">\n                            <strong>Recommendations:</strong>{\" \"}\n                            {userGarden.soil_details\n                                ? userGarden.soil_details.recommendations\n                                : \"\"}\n                        </p>\n                    </div>{\" \"}\n                    <div className=\"summary-detail-collapse-container\">\n                        <h3 className=\"summary-category-heading summary-vegetables-heading\">\n                            Vegetables\n                        </h3>\n                        <p className=\"summary-vegetables-p summary-description\">\n                            {\" \"}\n                            You have selected{\" \"}\n                            <strong>{userGarden.vegetables.length}</strong>{\" \"}\n                            vegetables for your garden. To view all the\n                            characteristics of your vegetables,{\" \"}\n                            {!show\n                                ? values.map((v, idx) => (\n                                      <span\n                                          key={idx}\n                                          className=\"me-2 summary-print-span\"\n                                          onClick={() => handleShow(v)}\n                                      >\n                                          please click to view an exhaustive\n                                          table\n                                          {typeof v === \"string\" &&\n                                              `below ${v.split(\"-\")[0]}`}\n                                      </span>\n                                  ))\n                                : \"\"}\n                            There is also an option to print this table.\n                        </p>\n                        <div className=\"summary-detail-vegetable-grid-container\">\n                            {!show\n                                ? userGarden.vegetables_details.map(\n                                      (vegetable) => {\n                                          return (\n                                              <div className=\"summary-detail-vegetable\">\n                                                  {/* <FiEdit\n                                                      className=\"garden-detail-vegetable-edit\"\n                                                      onClick={\n                                                          handleEditVegetablesClick\n                                                      }\n                                                  /> */}\n                                                  <h5 className=\"garden-detail-vegetable-name\">\n                                                      {vegetable.name}\n                                                  </h5>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Plant with:\n                                                      </span>{\" \"}\n                                                      {vegetable.companions}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Do NOT plant with:\n                                                      </span>{\" \"}\n                                                      {vegetable.adversaries}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Sun Exposure:\n                                                      </span>{\" \"}\n                                                      {vegetable.exposure ===\n                                                      \"BO\"\n                                                          ? \"Full Sun And/Or Partial Sun\"\n                                                          : vegetable.exposure ===\n                                                            \"FS\"\n                                                          ? \"Full Sun\"\n                                                          : \"Partial Sun\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Heat Tolerant:\n                                                      </span>{\" \"}\n                                                      {vegetable.heat_tolerant\n                                                          ? \"Yes\"\n                                                          : \"No\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Drought Tolerant:\n                                                      </span>{\" \"}\n                                                      {vegetable.drought_tolerant\n                                                          ? \"Yes\"\n                                                          : \"No\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Life Cycle:\n                                                      </span>{\" \"}\n                                                      {vegetable.life_cycle ===\n                                                      \"AN\"\n                                                          ? \"Annual\"\n                                                          : vegetable.life_cycle ===\n                                                            \"BI\"\n                                                          ? \"Biennial\"\n                                                          : \"Perennial\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Seasonality:\n                                                      </span>{\" \"}\n                                                      {vegetable.seasonality ===\n                                                      \"CS\"\n                                                          ? \"Cool-Season\"\n                                                          : \"Warm-Season\"}\n                                                  </p>\n                                                  <p>\n                                                      <span className=\"garden-detail-category\">\n                                                          Varieties:\n                                                      </span>{\" \"}\n                                                      {userGarden.varieties ===\n                                                      null\n                                                          ? \"\"\n                                                          : userGarden\n                                                                .varieties[\n                                                                vegetable.name\n                                                            ] === undefined\n                                                          ? \" \"\n                                                          : userGarden.varieties[\n                                                                vegetable.name\n                                                            ].map((element) => {\n                                                                let varietiesPerVegetable =\n                                                                    [];\n                                                                for (const prop in element) {\n                                                                    varietiesPerVegetable.push(\n                                                                        prop\n                                                                    );\n                                                                }\n                                                                return varietiesPerVegetable.map(\n                                                                    (\n                                                                        variety\n                                                                    ) => {\n                                                                        return (\n                                                                            <div>\n                                                                                <p>\n                                                                                    {\n                                                                                        variety\n                                                                                    }\n                                                                                </p>\n                                                                            </div>\n                                                                        );\n                                                                    }\n                                                                );\n                                                            })}\n                                                  </p>\n                                              </div>\n                                          );\n                                      }\n                                  )\n                                : \"\"}\n                        </div>\n\n                        <Modal\n                            show={show}\n                            fullscreen={fullscreen}\n                            onHide={() => setShow(false)}\n                            id={scrollView ? \"scroll\" : \"\"}\n                        >\n                            <Modal.Header closeButton>\n                                <Modal.Title>Your Vegetables</Modal.Title>\n                                <button\n                                    className=\"flagship-btn summary-print-vegetables\"\n                                    onClick={handlePrintClick}\n                                >\n                                    Print Your Vegetables\n                                </button>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"summary-vegetable\">\n                                    <table className=\"summary-table\">\n                                        <thead>\n                                            <tr>\n                                                <th>Your Vegetable</th>\n                                                <th>Sun Exposure</th>\n                                                <th>Heat Tolerant</th>\n                                                <th>Drought Tolerant</th>\n                                                <th>Life Cycle</th>\n                                                <th>Seasonality</th>\n                                                <th>Varieties</th>\n                                                <th>Companions</th>\n                                                <th>Adversaries</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {userGarden.vegetables_details\n                                                .length === 0\n                                                ? \"\"\n                                                : userGarden.vegetables_details.map(\n                                                      (vegetable) => {\n                                                          return (\n                                                              <tr>\n                                                                  <td className=\"summary-td\">\n                                                                      <strong>\n                                                                          {\n                                                                              vegetable.name\n                                                                          }\n                                                                      </strong>\n                                                                  </td>\n                                                                  <td className=\"summary-td\">\n                                                                      {vegetable.exposure ===\n                                                                      \"BO\"\n                                                                          ? \"Full Sun And/Or Partial Sun\"\n                                                                          : vegetable.exposure ===\n                                                                            \"FS\"\n                                                                          ? \"Full Sun\"\n                                                                          : \"Partial Sun\"}\n                                                                  </td>\n                                                                  <td className=\"summary-td\">\n                                                                      {\" \"}\n                                                                      {vegetable.heat_tolerant\n                                                                          ? \"Yes\"\n                                                                          : \"No\"}\n                                                                  </td>\n                                                                  <td className=\"summary-td\">\n                                                                      {vegetable.drought_tolerant\n                                                                          ? \"Yes\"\n                                                                          : \"No\"}\n                                                                  </td>\n                                                                  <td className=\"summary-td\">\n                                                                      {vegetable.seasonality ===\n                                                                      \"CS\"\n                                                                          ? \"Cool-Season\"\n                                                                          : \"Warm-Season\"}\n                                                                  </td>\n                                                                  <td className=\"summary-td\">\n                                                                      {vegetable.life_cycle ===\n                                                                      \"AN\"\n                                                                          ? \"Annual\"\n                                                                          : vegetable.life_cycle ===\n                                                                            \"BI\"\n                                                                          ? \"Biennial\"\n                                                                          : \"Perennial\"}\n                                                                  </td>\n                                                                  <td className=\"summary-td\">\n                                                                      <span className=\"summary-category\"></span>{\" \"}\n                                                                      {userGarden.varieties ===\n                                                                      null\n                                                                          ? \"None\"\n                                                                          : userGarden\n                                                                                .varieties[\n                                                                                vegetable\n                                                                                    .name\n                                                                            ] ===\n                                                                            undefined\n                                                                          ? \"None\"\n                                                                          : userGarden.varieties[\n                                                                                vegetable\n                                                                                    .name\n                                                                            ].map(\n                                                                                (\n                                                                                    element\n                                                                                ) => {\n                                                                                    let varietiesPerVegetable =\n                                                                                        [];\n                                                                                    for (const prop in element) {\n                                                                                        varietiesPerVegetable.push(\n                                                                                            prop\n                                                                                        );\n                                                                                    }\n                                                                                    return varietiesPerVegetable.map(\n                                                                                        (\n                                                                                            variety\n                                                                                        ) => {\n                                                                                            return (\n                                                                                                <p>\n                                                                                                    {\n                                                                                                        variety\n                                                                                                    }\n                                                                                                </p>\n                                                                                            );\n                                                                                        }\n                                                                                    );\n                                                                                }\n                                                                            )}\n                                                                  </td>\n                                                                  {vegetable.companions ===\n                                                                  null ? (\n                                                                      <td className=\"summary-td summary-td summary-companions\">\n                                                                          None\n                                                                      </td>\n                                                                  ) : (\n                                                                      <td id=\"companion-list\">\n                                                                          {\n                                                                              vegetable.companions\n                                                                          }\n                                                                      </td>\n                                                                  )}\n                                                                  {vegetable.adversaries ===\n                                                                  null ? (\n                                                                      <td className=\"summary-td\">\n                                                                          None\n                                                                      </td>\n                                                                  ) : (\n                                                                      <td\n                                                                          id=\"adversary-list\"\n                                                                          className=\"summary-td\"\n                                                                      >\n                                                                          {\n                                                                              vegetable.adversaries\n                                                                          }\n                                                                      </td>\n                                                                  )}\n                                                              </tr>\n                                                          );\n                                                      }\n                                                  )}\n                                        </tbody>\n                                        <tfoot></tfoot>\n                                    </table>\n                                </div>\n                            </Modal.Body>\n                        </Modal>\n                    </div>\n                    {show ? (\n                        \"\"\n                    ) : (\n                        <div className=\"summary-layout-container\">\n                            <h3 className=\"summary-category-heading\">Layout</h3>\n                            {userGarden.layout ? (\n                                <>\n                                    <p>\n                                        You have sketched the following layout\n                                        of your garden below. If you would like\n                                        to download the sketch you drew, download it {\" \"}\n                                        <span>\n                                            <a\n                                                href={userGarden.layout}\n                                                download\n                                                className=\"layout-download-image\"\n                                            >\n                                                here!\n                                            </a>{\" \"}\n                                        </span>\n                                    </p>\n                                    <div className=\"summary-layout-img-container\">\n                                        <img\n                                            className=\"summary-layout-img\"\n                                            src={userGarden.layout}\n                                        />\n                                    </div>\n                                </>\n                            ) : (\n                                \"No layout saved\"\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Summary);\n","export default __webpack_public_path__ + \"static/media/gardening1.74549128.jpeg\";","export default __webpack_public_path__ + \"static/media/gardening2.f214b2cf.jpeg\";","export default __webpack_public_path__ + \"static/media/gardening3.8b3e57c0.jpeg\";","export default __webpack_public_path__ + \"static/media/gardening4.fcdde9f2.jpeg\";","export default __webpack_public_path__ + \"static/media/gardening5.1600e38d.jpeg\";","import React from \"react\";\nimport \"./Instructions.css\";\nimport Image1 from \"../../../images/gardening1.jpeg\";\nimport Image2 from \"../../../images/gardening2.jpeg\";\nimport Image3 from \"../../../images/gardening3.jpeg\";\nimport Image5 from \"../../../images/gardening4.jpeg\";\nimport Image4 from \"../../../images/gardening5.jpeg\";\nimport { withRouter, NavLink, Redirect } from \"react-router-dom\";\n\nfunction Instructions(props) {\n\n    props.setShowNav(false);\n\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/\" />\n     }\n\n    return (\n        <div className=\"instructions-outer-container\">\n            <div className=\"instructions-inner-container\">\n                <div className=\"instructions-content-container\">\n                    <h1 className=\"instructions-main-heading\">\n                        Start to{\" \"}\n                        <span className=\"instructions-flourish-span\">\n                            Flourish\n                        </span>\n                    </h1>\n                    <h2 className=\"instructions-sub-heading\">\n                        Plan, organize and improve your garden.\n                    </h2>\n                    <div className=\"instructions-photo-grid\">\n                        <img className=\"instructions-image1\" src={Image1} />\n                        <img className=\"instructions-image2\" src={Image2} />\n                        <img className=\"instructions-image3\" src={Image3} />\n                        <img className=\"instructions-image4\" src={Image4} />\n                        <img className=\"instructions-image5\" src={Image5} />\n                    </div>\n                    <p className=\"instructions-description\">\n                        Bountiful, high-yielding gardens are products of\n                        thorough preparation. Flourish is a tool to help you\n                        prepare your garden for the upcoming season, while\n                        allowing you to cut down the time it takes to lay the\n                        groundwork. The Flourish experience takes you through a\n                        series of steps with each step focusing on important\n                        gardening areas:{\" \"}\n                        <span className=\"instructions-description-soil\">\n                            Soil\n                        </span>\n                        ,{\" \"}\n                        <span className=\"instructions-description-vegetables\">\n                            Vegetables\n                        </span>\n                        ,{\" \"}\n                        <span className=\"instructions-description-varieties\">\n                            Seed Varieties\n                        </span>\n                        , and{\" \"}\n                        <span className=\"instructions-description-layout\">\n                            Physical Layout\n                        </span>\n                        .\n                    </p>\n                    <ol className=\"instruction-step-list\">\n                        <li className=\"instructions-list-step\">\n                            {\" \"}\n                            <span className=\"instructions-step-soil splash-lobster-font\">\n                                1) Soil:\n                            </span>{\" \"}\n                            Find your soil type based on your desired location.\n                            Using your specific soil type, we give your soil\n                            characteristics and recommendtations for potential\n                            improvements.\n                        </li>\n                        <li className=\"instructions-list-step\">\n                            {\" \"}\n                            <span className=\"instructions-step-vegetables splash-lobster-font\">\n                                2) Vegetables:\n                            </span>{\" \"}\n                            Considering the varying conditions of your garden,\n                            we allow you to filter against plant characteristics\n                            so you can choose the most appropriate vegetables\n                            specific areas of your garden.\n                        </li>\n                        <li className=\"instructions-list-step\">\n                            {\" \"}\n                            <span className=\"instructions-step-varieties splash-lobster-font\">\n                                3) Seed Varieties:\n                            </span>{\" \"}\n                            Documenting the seed varieties for your vegetables is arguably one of the most important aspects for year after year improvement. We allow you to archive infinite varieties for each vegetable so you can add note about which varieties flourished and which you should avoid in the future.\n                        </li>\n                        <li className=\"instructions-list-step\">\n                            {\" \"}\n                            <span className=\"instructions-step-layout splash-lobster-font\">\n                                {\" \"}\n                                4) Physical Layout:\n                            </span>{\" \"}\n                            Drafting the visual layout of your garden can be\n                            highly beneficial for garden preparation. We provide you a chart of best possible plant pairings and ones you should avoid. Using this this information, you can draft a blueprint of your garden.\n                        </li>\n                        {/* <li className=\"instructions-list-step\">\n                    {\" \"}\n                    <span className=\"splash-list-summary\">5) Summary:</span> After you have been given your soil characteristics and recommendtations, created your vegetable list, recruited additional vegetables for companion planting, and created a visual garden outline, you will recieve a summary of the garden plan you created.\n                </li> */}\n                    </ol>\n\n                    <NavLink to={`/${props.match.params.garden}/soil`}>\n                        <button\n                            className=\"btn flagship-btn instructions-btn\"\n                        >\n                            Continue\n                        </button>\n                    </NavLink>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default withRouter(Instructions);","import React from 'react'\nimport { AiOutlineCopyrightCircle } from 'react-icons/ai'\nimport './Footer.css'\n\nexport default function Footer() {\n    return (\n        <div className=\"footer-container\">\n         <p className=\"footer-copyright\"> Copyright <AiOutlineCopyrightCircle /> 2021 <a href=\"https://github.com/ggroshansii\" className=\"footer-logo-link\">Flourish</a>. All Rights Reserved</p>\n        </div>\n    )\n}\n","import Cookie from \"js-cookie\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { MdAddCircleOutline } from \"react-icons/md\";\nimport { Spinner } from \"react-bootstrap\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { IoIosAddCircle } from \"react-icons/io\";\nimport './VarietiesDetail.css'\n\nfunction VarietiesDetail(props) {\n    const [variety, setVariety] = useState(\"\");\n    const [previousVarietyList, setPreviousVarietyList] = useState([]);\n    const [showInput, setShowInput] = useState(false);\n\n    const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\n\n    useEffect(() => {\n        findPreviousSavedVarieties();\n    }, []);\n\n\n    useEffect( ()=> {\n        console.log('wassup')\n        console.log(previousVarietyList)\n    }, [previousVarietyList])\n\n\n    async function handleBlur(e) {\n        e.preventDefault();\n        if (variety.length > 0) {\n            const updatedVariety = {\n                [props.name]: variety,\n            };\n            props.updateVarieties(updatedVariety);\n            setVariety(\"\");\n            setPreviousVarietyList((prevState) => [...prevState, variety]);\n            setShowSuccessAlert(true)\n            setTimeout(() =>\n            setShowSuccessAlert(false), 1500)\n        }\n\n\n    }\n\n    async function findPreviousSavedVarieties() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"FAILED\", response);\n        } else {\n            const data = await response.json();\n            console.log(\"SUCCESS FETCH ON VAR DETAIL\", data);\n\n            for (const property in data.varieties) {\n                if (property === props.name) {\n                    for (let i = 0; i < data.varieties[property].length; i++) {\n                        for (let key in data.varieties[property][i]) {\n                            setPreviousVarietyList((prevValue) => [\n                                ...prevValue,\n                                key,\n                            ]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function handleDelete(idx) {\n        props.deleteVariety(props.name, idx)\n        let updatedState = [...previousVarietyList]\n        updatedState.splice(idx, 1)\n        console.log(\"UP\", updatedState)\n        setPreviousVarietyList(prevState => updatedState)\n\n        setShowDeleteAlert(true)\n            setTimeout(() =>\n            setShowDeleteAlert(false), 1500)\n    }\n\n    function handleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleBlur(e)\n        }\n    }\n\n    function handleShowVarietyClick() {\n        setShowInput(true)\n    }\n\n\n    if (!props.userGarden) {\n        return (\n            <Spinner\n                animation=\"border\"\n                variant=\"success\"\n                className=\"garden-detail-spinner\"\n            />\n        );\n    }\n\n    return (\n        <div className={showInput || previousVarietyList.length > 0 ? 'varieties-detail-container increase-variety-size' : ''}>\n            <div className=\"form-group varieties-form-group\">\n                <p className=\"varieties-detail-name\">{props.name} {showInput ? \"\" : <IoIosAddCircle\n                    className=\"varieties-detail-show-input-btn\"\n                    onClick={handleShowVarietyClick}\n                />}</p>\n                <ul>\n                    {previousVarietyList.map((prevVariety, idx) => (\n                        <li>{prevVariety} <AiOutlineClose onClick={() => handleDelete(idx)} value={idx} className=\"varieties-remove-btn\" /></li>\n                    ))}\n                </ul>\n                {showInput ? <input\n                    id=\"variety\"\n                    value={variety}\n                    name={props.name}\n                    className=\"form-control varieties-detail-input\"\n                    type=\"text\"\n                    placeholder=\"Seed Variety\"\n                    onBlur={handleBlur}\n                    onChange={(e) => setVariety(e.target.value)}\n                    onKeyPress={(e) => handleKeyPress(e)}\n                /> : \"\"}\n            </div>\n            {showSuccessAlert ? (\n                    <div\n                        class=\"alert alert-success varieties-save-alert\"\n                        role=\"alert\"\n                    >\n                        Variety Saved!\n                    </div>\n                ) : (\n                    <div></div>\n                )}\n                {showDeleteAlert ? (\n                    <div\n                        class=\"alert alert-danger varieties-delete-alert\"\n                        role=\"alert\"\n                    >\n                        Variety Deleted!\n                    </div>\n                ) : (\n                    <div></div>\n                )}\n        </div>\n    );\n}\n\nexport default withRouter(VarietiesDetail);\n","import React from \"react\";\nimport Cookie from \"js-cookie\";\nimport { useState, useEffect } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { withRouter, Redirect } from \"react-router\";\nimport VarietiesDetail from \"./VarietiesDetail\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Varieties.css\";\n\nfunction Varieties(props) {\n    const [userGarden, setUserGarden] = useState();\n\n\n    useEffect(() => {\n        grabUserGarden();\n        props.setShowNav(true);\n    }, []);\n\n    async function grabUserGarden() {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"GARDEN LIST FAIL\", response);\n        } else {\n            const data = await response.json();\n            setUserGarden(data);\n        }\n    }\n\n    async function updateVarieties(variety) {\n        console.log(\"variety\", variety);\n\n        const varieties = { ...userGarden.varieties };\n        const key = Object.keys(variety)[0];\n\n        if (varieties[key] === null || varieties[key] === undefined) {\n            varieties[key] = [];\n        }\n        varieties[key].push({ [variety[key]]: \"\" });\n\n        if (variety[key] !== \"\") {\n            const options = {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n                },\n                body: JSON.stringify({ varieties }),\n            };\n            const response = await fetch(\n                `/api/gardens/${props.match.params.garden}/`,\n                options\n            );\n            if (response.ok === false) {\n                console.log(\"VARIETY PATCH FAILED\", response);\n            } else {\n                const data = await response.json();\n                setUserGarden((prevState) => ({\n                    ...prevState,\n                    varieties: varieties,\n                }));\n                console.log(\"VARIETY PATCH SUCCESS\", data);\n            }\n        }\n    }\n\n    async function deleteVariety(name, idx) {\n        let varieties = { ...userGarden.varieties };\n        console.log(\"VARIETIES\", varieties);\n\n        for (const property in varieties) {\n            if (property === name) {\n                varieties[property].splice(idx, 1);\n            }\n        }\n\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookie.get(\"csrftoken\"),\n            },\n            body: JSON.stringify({ varieties }),\n        };\n        const response = await fetch(\n            `/api/gardens/${props.match.params.garden}/`,\n            options\n        );\n        if (response.ok === false) {\n            console.log(\"VARIETY PATCH FAILED\", response);\n        } else {\n            const data = await response.json();\n            setUserGarden((prevState) => ({\n                ...prevState,\n                varieties: varieties,\n            }));\n            console.log(\"VARIETY PATCH SUCCESS\", data);\n        }\n    }\n\n    if (!userGarden) {\n        return (\n            <Spinner\n                animation=\"border\"\n                variant=\"success\"\n                className=\"garden-detail-spinner\"\n            />\n        );\n    }\n\n    if (props.isAuth === false) {\n        return <Redirect to=\"/\" />\n     }\n\n    return (\n        <div className=\"varieties-outer-container\">\n            <div className=\"varieties-inner-container\">\n\n                <div className=\"varieties-heading-container\">\n                    {/* <h2 className=\"vegetables-heading\">\n                        Find the Most Suitable Vegetables\n                    </h2> */}\n                    <p className=\"varieties-description\">\n                        <strong>In this step</strong>, you will are able to add\n                        varieties to your chosen vegetables! To add a variety\n                        click on your desired vegetable's plus-sign button. You\n                        will be prompted with a textbox. Here you will type in\n                        the variety of your choosing and press enter to save.\n                        You will see the variety added to the vegetable's dialog\n                        box. If you would like to delete a variety, no worries,\n                        just click the 'x' button next to the variety!{\" \"}\n                    </p>\n                </div>\n                <div className=\"varieties-main-container\">\n                    <form\n                        action=\"\"\n                        className=\"form-control varieties-form varieties-grid-container\"\n                    >\n                        {userGarden.vegetables_details.map((vegetable) => {\n                            return (\n                                <VarietiesDetail\n                                    {...vegetable}\n                                    updateVarieties={updateVarieties}\n                                    userGarden={userGarden}\n                                    deleteVariety={deleteVariety}\n                                />\n                            );\n                        })}\n                    </form>\n                </div>\n\n                <NavLink to={`/${props.match.params.garden}/layout`}>\n                    <button className=\"btn flagship-btn varieties-continue-btn\">\n                        Continue\n                    </button>\n                </NavLink>\n            </div>\n\n        </div>\n    );\n}\n\nexport default withRouter(Varieties);\n","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Registration from \"./components/Auth/Registration\";\nimport Login from \"./components/Auth/Login\";\nimport Splash from \"./components/Auth/Splash\";\nimport GardenList from \"./components/Main/Profile/GardenList\";\nimport GardenDetail from \"./components/Main/Profile/GardenDetail\";\nimport CreateAGarden from \"./components/Main/Profile/CreateAGarden\";\nimport Soil from './components/Main/Soil/Soil'\nimport Vegetables from './components/Main/Vegetables/Vegetables'\nimport Layout from \"./components/Main/Layout/Layout\";\nimport Summary from \"./components/Main/Summary/Summary\";\nimport Instructions from \"./components/Main/Instructions/Instructions\"\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Cookie from 'js-cookie';\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport Varieties from \"./components/Main/Varieties/Varieties\";\n\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(false);\n    const [currentGarden, setCurrentGarden] = useState();\n    const [showNav, setShowNav] = useState(false);\n    const [showHeader, setShowHeader] = useState(true);\n\n    useEffect( () => {\n        const checkAuth  = () => {\n            let cookie = Cookie.get('Authorization');\n            if (cookie) {\n                setIsAuth(true);\n            } else {\n                setIsAuth(false);\n            }\n        }\n        checkAuth()\n    }, []);\n\n\n\n\n    return (\n        <div className=\"App\">\n            <Header isAuth={isAuth} setIsAuth={setIsAuth} showHeader={showHeader} showNav={showNav}/>\n            <Switch>\n                <Route path=\"/login\">\n                    <Login setIsAuth={setIsAuth} isAuth={isAuth} setShowHeader={setShowHeader}/>\n                </Route>\n                <Route path=\"/registration\">\n                    <Registration setIsAuth={setIsAuth} isAuth={isAuth} setShowHeader={setShowHeader}/>\n                </Route>\n                <Route path=\"/gardenlist/:garden\">\n                    <GardenDetail setShowNav={setShowNav}  isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/gardenlist\">\n                    <GardenList isAuth={isAuth} setShowNav={setShowNav} setShowHeader={setShowHeader}/>\n                </Route>\n                <Route path=\"/creategarden\">\n                    <CreateAGarden/>\n                </Route>\n                <Route path=\"/:garden/soil\">\n                    <Soil setShowNav={setShowNav} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/:garden/instructions\">\n                    <Instructions setShowNav={setShowNav} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/:garden/vegetables\">\n                    <Vegetables setShowNav={setShowNav} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/:garden/varieties\">\n                    <Varieties setShowNav={setShowNav} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/:garden/layout\">\n                    <Layout setShowNav={setShowNav} isAuth={isAuth}/>\n                </Route>\n                <Route path=\"/:garden/summary\">\n                    <Summary setShowNav={setShowNav} isAuth={isAuth}/>\n                </Route>\n\n                <Route path=\"/\">\n                    <Splash isAuth={isAuth} setShowHeader={setShowHeader}/>\n                </Route>\n                <Route></Route>\n                <Route></Route>\n                <Route></Route>\n            </Switch>\n\n            <Footer />\n        </div>\n    );\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>,\n\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}